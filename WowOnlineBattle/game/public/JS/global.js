"abbr article aside audio canvas details figcaption figure footer header hgroup mark menu meter nav output progress section summary time video".replace(/\w+/g, function (b) {
  document.createElement(b)
});
var U_GROUP_TESTER = 1;
var U_GROUP_ADMIN = 2;
var U_GROUP_EDITOR = 4;
var U_GROUP_MOD = 8;
var U_GROUP_BUREAU = 16;
var U_GROUP_DEV = 32;
var U_GROUP_VIP = 64;
var U_GROUP_BLOGGER = 128;
var U_GROUP_PREMIUM = 256;
var U_GROUP_LOCALIZER = 512;
var U_GROUP_SALESAGENT = 1024;
var U_GROUP_SCREENSHOT = 2048;
var U_GROUP_VIDEO = 4096;
var U_GROUP_APIONLY = 8192;
var U_GROUP_PENDING = 16384;
var U_GROUP_STAFF = U_GROUP_ADMIN | U_GROUP_EDITOR | U_GROUP_MOD | U_GROUP_BUREAU | U_GROUP_DEV | U_GROUP_BLOGGER | U_GROUP_LOCALIZER | U_GROUP_SALESAGENT;
var U_GROUP_EMPLOYEE = U_GROUP_ADMIN | U_GROUP_BUREAU | U_GROUP_DEV;
var U_GROUP_GREEN_TEXT = U_GROUP_MOD | U_GROUP_BUREAU | U_GROUP_DEV;
var U_GROUP_MODERATOR = U_GROUP_ADMIN | U_GROUP_MOD | U_GROUP_BUREAU;
var U_GROUP_COMMENTS_MODERATOR = U_GROUP_BUREAU | U_GROUP_MODERATOR | U_GROUP_LOCALIZER;
var U_GROUP_PREMIUM_PERMISSIONS = U_GROUP_PREMIUM | U_GROUP_STAFF | U_GROUP_VIP;
var g_users = {};
var g_completion = {};
var g_customColors = {};

function g_isUsernameValid(b) {
  return (b.match(/[^a-z0-9]/i) == null && b.length >= 4 && b.length <= 16)
}
function g_requireCaptcha() {
  if ((g_user.permissions & 1) > 0 || (typeof(skipCaptcha) != "undefined" && skipCaptcha)) {
    return false
  }
  return true
}
var User = new
function () {
  var b = this;
  b.hasPermissions = function (c) {
    if (!c) {
      return true
    }
    return !!(g_user.roles & c)
  }
};

function Ajax(c, f) {
  if (!c) {
    return
  }
  var b;
  try {
    b = new XMLHttpRequest()
  } catch (g) {
    try {
      b = new ActiveXObject("Msxml2.XMLHTTP")
    } catch (g) {
      try {
        b = new ActiveXObject("Microsoft.XMLHTTP")
      } catch (g) {
        if (window.createRequest) {
          b = window.createRequest()
        } else {
          alert(LANG.message_ajaxnotsupported);
          return
        }
      }
    }
  }
  this.request = b;
  $WH.cO(this, f);
  this.method = this.method || (this.params && "POST") || "GET";
  b.open(this.method, c, this.async == null ? true : this.async);
  b.onreadystatechange = Ajax.onReadyStateChange.bind(this);
  if (this.method.toUpperCase() == "POST") {
    b.setRequestHeader("Content-Type", (this.contentType || "application/x-www-form-urlencoded") + "; charset=" + (this.encoding || "UTF-8"))
  }
  b.send(this.params)
}
Ajax.onReadyStateChange = function () {
  if (this.request.readyState == 4) {
    if (this.request.status == 0 || (this.request.status >= 200 && this.request.status < 300)) {
      this.onSuccess != null && this.onSuccess(this.request, this)
    } else {
      this.onFailure != null && this.onFailure(this.request, this)
    }
    if (this.onComplete != null) {
      this.onComplete(this.request, this)
    }
  }
};
var Announcement = function (b) {
  if (!b) {
    b = {}
  }
  $WH.cO(this, b);
  if (this.parent) {
    this.parentDiv = $WH.ge(this.parent)
  } else {
    return
  }
  if (g_user.id == 0 && (!g_cookiesEnabled() || g_getWowheadCookie("announcement-" + this.id) == "closed")) {
    return
  }
  this.initialize()
};
Announcement.prototype = {
  initialize: function () {
    this.parentDiv.style.display = "none";
    if (this.mode === undefined || this.mode == 1) {
      this.parentDiv.className = "announcement announcement-contenttop"
    } else {
      this.parentDiv.className = "announcement announcement-pagetop"
    }
    var h = this.innerDiv = $WH.ce("div");
    h.className = "announcement-inner text";
    this.style = this.style.replace("%tb%", (($WH.isset("g_thottbot") && g_thottbot) ? "tb-" : ""));
    this.setStyle(this.style);
    var b = null;
    var g = parseInt(this.id);
    if (g_user && (g_user.roles & (U_GROUP_ADMIN | U_GROUP_BUREAU)) > 0 && Math.abs(g) > 0) {
      if (g < 0) {
        b = $WH.ce("a");
        b.style.cssFloat = b.style.styleFloat = "right";
        b.href = "/admin=announcements&id=" + Math.abs(g) + "&status=2";
        b.onclick = function () {
          return confirm("Are you sure you want to delete " + this.name + "?")
        };
        $WH.ae(b, $WH.ct("Delete"));
        var f = $WH.ce("small");
        $WH.ae(f, b);
        $WH.ae(h, f);
        b = $WH.ce("a");
        b.style.cssFloat = b.style.styleFloat = "right";
        b.style.marginRight = "10px";
        b.href = "/admin=announcements&id=" + Math.abs(g) + "&status=" + (this.status == 1 ? 0 : 1);
        b.onclick = function () {
          return confirm("Are you sure you want to delete " + this.name + "?")
        };
        $WH.ae(b, $WH.ct((this.status == 1 ? "Disable" : "Enable")));
        var f = $WH.ce("small");
        $WH.ae(f, b);
        $WH.ae(h, f)
      }
      b = $WH.ce("a");
      b.href = "/admin=announcements&id=" + Math.abs(g) + "&edit";
      b.className = "fa fa-pencil";
      if (!Platform.isTouch()) {
        g_addTooltip(b, LANG.db_edit)
      }
      var f = $WH.ce("small");
      $WH.ae(f, b);
      $WH.ae(h, f)
    }
    var c = $WH.ce("div");
    c.id = this.parent + "-markup";
    c.className = "announcement-markup";
    $WH.ae(h, c);
    var e = $WH.ce("div");
    e.id = this.parent + "-markup-responsive";
    e.className = "announcement-markup-responsive";
    $WH.ae(h, e);
    if (g >= 0) {
      b = $WH.ce("a");
      if ($WH.isset("g_thottbot") && g_thottbot) {
        $WH.ae(b, $WH.ct("[X]"))
      }
      b.id = "closeannouncement";
      b.href = "javascript:;";
      b.className = "fa fa-times announcement-close";
      if (this.nocookie) {
        b.onclick = this.hide.bind(this)
      } else {
        b.onclick = this.markRead.bind(this)
      }
      $WH.ae(h, b);
      if (!Platform.isTouch()) {
        g_addTooltip(b, LANG.close)
      }
    }
    $WH.ae(h, $WH.ce("div", {
      style: {
        clear: "both"
      }
    }));
    $WH.ae(this.parentDiv, h);
    this.setText(this.text, this.mobiletext);
    setTimeout(this.show.bind(this), 500)
  },
  show: function () {
    $(this.parentDiv).animate({
      opacity: "show",
      height: "show"
    }, {
      duration: 333
    });
    g_trackEvent("Announcements", "Show", "" + this.name)
  },
  hide: function () {
    $(this.parentDiv).animate({
      opacity: "hide",
      height: "hide"
    }, {
      duration: 200
    })
  },
  markRead: function () {
    g_trackEvent("Announcements", "Close", "" + this.name);
    g_setWowheadCookie("announcement-" + this.id, "closed");
    this.hide()
  },
  setStyle: function (b) {
    this.style = b;
    this.innerDiv.setAttribute("style", b)
  },
  setText: function (c, b) {
    this.text = c;
    this.mobiletext = b;
    Markup.printHtml(this.text, this.parent + "-markup");
    g_addAnalyticsToNode($WH.ge(this.parent + "-markup"), {
      category: "Announcements",
      actions: {
        "Follow link": function (e) {
          return true
        }
      }
    }, this.id);
    if (!b) {
      b = c
    }
    Markup.printHtml(b, this.parent + "-markup-responsive");
    g_addAnalyticsToNode($WH.ge(this.parent + "-markup-responsive"), {
      category: "Announcements",
      actions: {
        "Follow link": function (e) {
          return true
        }
      }
    }, this.id)
  }
};
var g_audiocontrols = {
  __windowloaded: false,
  __rewardedAchievement: false
};
var g_audioplaylist = {};
if (!window.JSON) {
  window.JSON = {
    parse: function (sJSON) {
      return eval("(" + sJSON + ")")
    },
    stringify: function (c) {
      if (c instanceof Object) {
        var f = "";
        if (c.constructor === Array) {
          for (var b = 0; b < c.length; f += this.stringify(c[b]) + ",", b++) {}
          return "[" + f.substr(0, f.length - 1) + "]"
        }
        if (c.toString !== Object.prototype.toString) {
          return '"' + c.toString().replace(/"/g, "\\$&") + '"'
        }
        for (var e in c) {
          f += '"' + e.replace(/"/g, "\\$&") + '":' + this.stringify(c[e]) + ","
        }
        return "{" + f.substr(0, f.length - 1) + "}"
      }
      return typeof c === "string" ? '"' + c.replace(/"/g, "\\$&") + '"' : String(c)
    }
  }
}
AudioControls = function () {
  var n = -1;
  var f = false;
  var g = false;
  var l = false;
  var b = false;
  var p = {};
  var c = [];
  var k = "";

  function h() {
    if (g_audiocontrols.__rewardedAchievement) {
      return
    }
    if (!($WH.isset("g_user") && g_user.id)) {
      return
    }
    $.ajax({
      url: "/website-achievement-explored",
      data: {
        trigger: "playsound"
      },
      success: function () {
        AchievementCheck()
      },
      type: "POST"
    });
    g_audiocontrols.__rewardedAchievement = true
  }
  function o(q, A, u) {
    var r = $WH.ce("audio");
    r.preload = "none";
    r.controls = "true";
    $(r).click(function (s) {
      s.stopPropagation()
    });
    $WH.aE(r, "ended", h);
    r.style.marginTop = "5px";
    p.audio.parentNode.replaceChild(r, p.audio);
    p.audio = r;
    $WH.aE(p.audio, "ended", e.bind(q));
    if (u) {
      r.preload = "auto";
      b = true;
      $WH.aE(p.audio, "canplaythrough", j.bind(this))
    }
    if (!f) {
      p.table.style.visibility = "visible"
    }
    var t;
    do {
      n += A;
      if (n > c.length - 1) {
        n = 0;
        if (!f) {
          var v = $WH.ce("div");
          v.className = "minibox";
          $WH.st(v, $WH.sprintf(LANG.message_browsernoaudio, t.type));
          p.table.parentNode.replaceChild(v, p.table);
          return
        }
      }
      if (n < 0) {
        n = c.length - 1
      }
      t = c[n]
    } while (p.audio.canPlayType(t.type) == "");
    var B = $WH.ce("source");
    B.src = t.url;
    B.type = t.type;
    $WH.ae(p.audio, B);
    if (p.hasOwnProperty("title")) {
      if (k) {
        $WH.ee(p.title);
        var y = $WH.ce("a");
        y.href = k;
        $WH.st(y, '"' + t.title + '"');
        $WH.ae(p.title, y)
      } else {
        $WH.st(p.title, '"' + t.title + '"')
      }
    }
    if (p.hasOwnProperty("trackdisplay")) {
      $WH.st(p.trackdisplay, "" + (n + 1) + " / " + c.length)
    }
    if (!f) {
      f = true;
      for (var w = n + 1; w <= c.length - 1; w++) {
        if (p.audio.canPlayType(c[w].type)) {
          $(p.controlsdiv).children("a").removeClass("btn-disabled");
          break
        }
      }
    }
    if (p.hasOwnProperty("addbutton")) {
      $(p.addbutton).removeClass("btn-disabled");
      $WH.st(p.addbutton, LANG.add)
    }
  }
  function j() {
    if (!b) {
      return
    }
    b = false;
    p.audio.play()
  }
  this.init = function (t, r, s) {
    if (!$WH.is_array(t)) {
      return
    }
    if (t.length == 0) {
      return
    }
    if ((r.id == "") || g_audiocontrols.hasOwnProperty(r.id)) {
      var z = 0;
      while (g_audiocontrols.hasOwnProperty("auto-audiocontrols-" + (++z))) {}
      r.id = "auto-audiocontrols-" + z
    }
    g_audiocontrols[r.id] = this;
    if (typeof s == "undefined") {
      s = {}
    }
    g = !! s.loop;
    if (s.hasOwnProperty("url")) {
      k = s.url
    }
    c = t;
    p.div = r;
    if (!s.listview) {
      var B = $WH.ce("table", {
        className: "audio-controls"
      });
      p.table = B;
      p.table.style.visibility = "hidden";
      $WH.ae(p.div, B);
      var w = $WH.ce("tr");
      $WH.ae(B, w);
      var u = $WH.ce("td");
      $WH.ae(w, u);
      p.audio = $WH.ce("div");
      $WH.ae(u, p.audio);
      p.title = $WH.ce("div", {
        className: "audio-controls-title"
      });
      $WH.ae(u, p.title);
      p.controlsdiv = $WH.ce("div", {
        className: "audio-controls-pagination"
      });
      $WH.ae(u, p.controlsdiv);
      var A = m(LANG.previous, true);
      $WH.ae(p.controlsdiv, A);
      $WH.aE(A, "click", this.btnPrevTrack.bind(this));
      p.trackdisplay = $WH.ce("div", {
        className: "audio-controls-pagination-track"
      });
      $WH.ae(p.controlsdiv, p.trackdisplay);
      var q = m(LANG.next, true);
      $WH.ae(p.controlsdiv, q);
      $WH.aE(q, "click", this.btnNextTrack.bind(this))
    } else {
      l = true;
      var v = $WH.ce("div");
      p.table = v;
      $WH.ae(p.div, v);
      p.audio = $WH.ce("div");
      $WH.ae(v, p.audio);
      p.trackdisplay = s.trackdisplay;
      p.controlsdiv = $WH.ce("span");
      $WH.ae(v, p.controlsdiv)
    }
    if (g_audioplaylist.isEnabled() && !s.fromplaylist) {
      var y = m(LANG.add);
      $WH.ae(p.controlsdiv, y);
      $WH.aE(y, "click", this.btnAddToPlaylist.bind(this, y));
      p.addbutton = y;
      if (l) {
        y.style.verticalAlign = "50%"
      }
    }
    if (g_audiocontrols.__windowloaded) {
      this.btnNextTrack()
    }
  };

  function e() {
    o(this, 1, (g || (n < (c.length - 1))))
  }
  this.btnNextTrack = function () {
    o(this, 1, (f && (p.audio.readyState > 1) && (!p.audio.paused)))
  };
  this.btnPrevTrack = function () {
    o(this, -1, (f && (p.audio.readyState > 1) && (!p.audio.paused)))
  };
  this.btnAddToPlaylist = function (r) {
    if (l) {
      for (var q = 0; q < c.length; q++) {
        g_audioplaylist.addSound(c[q])
      }
    } else {
      g_audioplaylist.addSound(c[n])
    }
    r.className += " btn-disabled";
    $WH.st(r, LANG.added)
  };
  this.isPlaying = function () {
    return !p.audio.paused
  };
  this.removeSelf = function () {
    p.table.parentNode.removeChild(p.table);
    delete g_audiocontrols[p.div]
  };

  function m(q, r) {
    return $WH.g_createButton(q, null, {
      disabled: r,
      "float": false,
      style: "margin:0 12px"
    })
  }
};
$WH.aE(window, "load", function () {
  g_audiocontrols.__windowloaded = true;
  for (var b in g_audiocontrols) {
    if (b.substr(0, 2) != "__") {
      g_audiocontrols[b].btnNextTrack()
    }
  }
});
AudioPlaylist = function () {
  var e = false;
  var h = [];
  var g, f;
  var c = false;
  this.init = function () {
    if (!$WH.localStorage.isSupported()) {
      return
    }
    e = true;
    var j;
    if (j = $WH.localStorage.get("AudioPlaylist")) {
      h = JSON.parse(j)
    }
  };
  this.savePlaylist = function () {
    if (!e) {
      return false
    }
    $WH.localStorage.set("AudioPlaylist", JSON.stringify(h))
  };
  this.isEnabled = function () {
    return e
  };
  this.addSound = function (j) {
    if (!e) {
      return false
    }
    this.init();
    h.push(j);
    this.savePlaylist();
    b()
  };
  this.deleteSound = function (j) {
    if (j < 0) {
      h = []
    } else {
      h.splice(j, 1)
    }
    this.savePlaylist();
    if (!g.isPlaying()) {
      g.removeSelf();
      this.setAudioControls(f)
    }
    if (h.length == 0) {
      $WH.Tooltip.hide()
    }
  };
  this.getList = function () {
    var k = [];
    for (var j = 0; j < h.length; j++) {
      k.push(h[j].title)
    }
    return k
  };
  this.setAudioControls = function (j) {
    if (!e) {
      return false
    }
    f = j;
    g = new AudioControls();
    g.init(h, f, {
      loop: true,
      fromplaylist: true
    })
  };

  function b() {
    if (c) {
      return
    }
    if (!($WH.isset("g_user") && g_user.id)) {
      return
    }
    if (h.length < 2) {
      return
    }
    $.ajax({
      url: "/sound&playlist",
      data: {
        achievement: 1
      },
      success: function () {
        AchievementCheck()
      },
      type: "POST"
    });
    c = true
  }
};
g_audioplaylist = (new AudioPlaylist);
g_audioplaylist.init();
$WH.BattleNet = new
function () {
  var c = false;
  var b = 0;
  this.CharacterExists = function (o, h, g, m) {
    if (!$WH.localStorage.isSupported() || !(JSON && "stringify" in JSON)) {
      m(true);
      return false
    }
    h = h.toLowerCase().replace(/[^\w -]/, "").replace(" ", "-");
    var n = (o + "|" + h + "|" + g).toLowerCase();
    if (!c) {
      c = {};
      try {
        c = JSON.parse($WH.localStorage.get("BattleNetCharCache"));
        if (c == null) {
          c = {}
        }
      } catch (k) {
        c = {}
      }
    }
    if (c.hasOwnProperty(n)) {
      if (parseInt(c[n].substr(1), 10) > Math.floor((Date.now() - (1000 * 60 * 60 * 24 * 4)) / 1000)) {
        m(c[n].substr(0, 1) == "t");
        return true
      }
    }
    var l = "LR" + (b++);
    this[l] = (function (q, p, e, s) {
      q[p] = ((s && s.name) ? "t" : "f") + Math.floor(Date.now() / 1000);
      $WH.localStorage.set("BattleNetCharCache", JSON.stringify(q));
      e(q[p])
    }).bind(null, c, n, m);
    var f = "https://" + o + ".api.battle.net/wow/character/" + h + "/" + g + "?apikey=" + $WH.BattleNet.apiKey + "&jsonp=$WH.BattleNet." + l;
    var j = $WH.ce("script", {
      type: "text/javascript",
      src: f
    });
    $WH.aE(j, "error", function () {
      $WH.BattleNet[l](false)
    });
    $WH.ae(document.getElementsByTagName("head")[0], j);
    return true
  };
  this.apiKey = "nysaj9axzq4dvdjvg8tnhk9m5jde372w"
};
(function (f) {
  f.each(["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "color", "outlineColor"], function (h, g) {
    f.fx.step[g] = function (j) {
      if (j.state == 0) {
        j.start = e(j.elem, g);
        j.end = b(j.end)
      }
      j.elem.style[g] = "rgb(" + [Math.max(Math.min(parseInt((j.pos * (j.end[0] - j.start[0])) + j.start[0]), 255), 0), Math.max(Math.min(parseInt((j.pos * (j.end[1] - j.start[1])) + j.start[1]), 255), 0), Math.max(Math.min(parseInt((j.pos * (j.end[2] - j.start[2])) + j.start[2]), 255), 0)].join(",") + ")"
    }
  });

  function b(g) {
    var h;
    if (g && g.constructor == Array && g.length == 3) {
      return g
    }
    if (h = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(g)) {
      return [parseInt(h[1]), parseInt(h[2]), parseInt(h[3])]
    }
    if (h = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(g)) {
      return [parseFloat(h[1]) * 2.55, parseFloat(h[2]) * 2.55, parseFloat(h[3]) * 2.55]
    }
    if (h = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(g)) {
      return [parseInt(h[1], 16), parseInt(h[2], 16), parseInt(h[3], 16)]
    }
    if (h = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(g)) {
      return [parseInt(h[1] + h[1], 16), parseInt(h[2] + h[2], 16), parseInt(h[3] + h[3], 16)]
    }
    return c[f.trim(g).toLowerCase()]
  }
  function e(j, g) {
    var h;
    do {
      h = f.curCSS(j, g);
      if (h != "" && h != "transparent" || f.nodeName(j, "body")) {
        break
      }
      g = "backgroundColor"
    } while (j = j.parentNode);
    return b(h)
  }
  var c = {
    aqua: [0, 255, 255],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    black: [0, 0, 0],
    blue: [0, 0, 255],
    brown: [165, 42, 42],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgrey: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkviolet: [148, 0, 211],
    fuchsia: [255, 0, 255],
    gold: [255, 215, 0],
    green: [0, 128, 0],
    indigo: [75, 0, 130],
    khaki: [240, 230, 140],
    lightblue: [173, 216, 230],
    lightcyan: [224, 255, 255],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    navy: [0, 0, 128],
    olive: [128, 128, 0],
    orange: [255, 165, 0],
    pink: [255, 192, 203],
    purple: [128, 0, 128],
    violet: [128, 0, 128],
    red: [255, 0, 0],
    silver: [192, 192, 192],
    white: [255, 255, 255],
    yellow: [255, 255, 0]
  }
})(jQuery);

function SetupReplies(b, c) {
  SetupAddEditComment(b, c, false);
  SetupShowMoreComments(b, c);
  b.find(".comment-reply-row").each(function () {
    SetupRepliesControls($(this), c)
  });
  b.find(".comment-reply-row").hover(function () {
    $(this).find("span").attr("data-hover", "true")
  }, function () {
    $(this).find("span").attr("data-hover", "false")
  })
}
function SetupAddEditComment(y, c, o) {
  var l = null;
  var r = null;
  var u = null;
  var A = null;
  var n = null;
  var F = null;
  var m = null;
  var C = 15;
  var t = 600;
  var q = false;
  var w = false;
  var g = false;
  var B = false;
  var p = y.find(".comment-replies > table");
  var s = y.find(".add-reply");
  var j = c.replies.length;
  if (o) {
    v()
  } else {
    s.click(function () {
      v()
    })
  }
  function e() {
    if (q) {
      return
    }
    q = true;
    var G = $("<tr/>");
    if (o) {
      G.addClass("comment-reply-row").addClass("reply-edit-row")
    }
    G.html('<td style="width: 0"></td><td class="comment-form"><form><table><form><table><tr><td style="width: 600px"><textarea required="required" name="body" cols="68" rows="3"></textarea></td><td><input type="submit" value="' + (o ? LANG.save : LANG.addreply) + '" /><img src="http://static.wowhead.com/images/icons/ajax.gif" class="ajax-loader" /></td></tr><tr><td colspan="2"><span class="text-counter">Text counter placeholder</span></td></tr></table></form></td>');
    r = G.find(".comment-form textarea");
    u = G.find(".comment-form input[type=submit]");
    A = G.find(".comment-form span.text-counter");
    l = G.find(".comment-form form");
    n = G.find(".comment-form .ajax-loader");
    F = G.find(".comment-form");
    l.submit(function () {
      h();
      return false
    });
    k();
    r.keyup(function (H) {
      k()
    });
    r.keydown(function (H) {
      if (H.keyCode == 27) {
        z();
        return false
      }
    });
    r.keypress(function (H) {
      if (H.keyCode == 13) {
        h();
        return false
      }
    });
    if (o) {
      y.after(G);
      y.hide();
      l.find("textarea").text(c.replies[y.attr("data-idx")].body)
    } else {
      p.append(G)
    }
    m = G;
    g_safeFocus(l.find("textarea"))
  }
  function v() {
    if (!q) {
      e()
    }
    w = true;
    if (!o) {
      s.hide();
      y.find(".comment-replies").show();
      F.show()
    }
  }
  function z() {
    w = false;
    if (o) {
      if (m) {
        m.remove()
      }
      y.show();
      return
    }
    s.show();
    F.hide();
    if (j == 0) {
      y.find(".comment-replies").hide()
    }
  }
  function h() {
    if (!w || B) {
      return
    }
    if (r.val().length < C || r.val().length > t) {
      if (!g) {
        g = true;
        A.animate({
          opacity: "0.0"
        }, 150);
        A.animate({
          opacity: "1.0"
        }, 150, null, function () {
          g = false
        })
      }
      return false
    }
    b();
    $.ajax({
      type: "POST",
      url: o ? "/comment=edit-reply" : "/comment=add-reply",
      data: {
        commentId: c.id,
        replyId: (o ? y.attr("data-replyid") : 0),
        body: r.val()
      },
      success: function (G) {
        E(G)
      },
      dataType: "json",
      error: function (G) {
        D(G.responseText)
      }
    });
    return true
  }
  function b() {
    B = true;
    n.show();
    u.prop("disabled", true);
    F.find(".message-box").remove()
  }
  function f() {
    B = false;
    n.hide();
    u.prop("disabled", false)
  }
  function E(G) {
    c.replies = G;
    Listview.templates.comment.updateReplies(c)
  }
  function D(G) {
    f();
    MessageBox(F, G)
  }
  function k() {
    var J = "(error)";
    var I = "q0";
    var H = r.val().replace(/(\s+)/g, " ").replace(/^\s*/, "").replace(/\s*$/, "").length;
    var G = t - H;
    if (H == 0) {
      J = $WH.sprintf(LANG.replylength1_format, C)
    } else {
      if (H < C) {
        J = $WH.sprintf(LANG.replylength2_format, C - H)
      } else {
        J = $WH.sprintf(G == 1 ? LANG.replylength4_format : LANG.replylength3_format, G);
        if (G < 120) {
          I = "q10"
        } else {
          if (G < 240) {
            I = "q5"
          } else {
            if (G < 360) {
              I = "q11"
            }
          }
        }
      }
    }
    A.html(J).attr("class", I)
  }
}
function SetupShowMoreComments(c, h) {
  var f = c.find(".show-more-replies");
  var e = c.find(".comment-replies");
  f.click(function () {
    b()
  });

  function b() {
    f.hide();
    e.append(CreateAjaxLoader());
    $.ajax({
      type: "GET",
      url: "/comment=show-replies",
      data: {
        id: h.id
      },
      success: function (j) {
        h.replies = j;
        Listview.templates.comment.updateReplies(h)
      },
      dataType: "json",
      error: function () {
        g()
      }
    })
  }
  function g() {
    f.show();
    e.find(".ajax-loader").remove();
    MessageBox(e, "There was an error fetching the comments. Try refreshing the page.")
  }
}
function SetupRepliesControls(s, m) {
  var p = s.attr("data-replyid");
  var k = s.find(".reply-upvote");
  var q = s.find(".reply-downvote");
  var l = s.find(".reply-report");
  var b = s.find(".reply-rating");
  var n = s.find(".reply-controls");
  var g = s.find(".reply-delete");
  var j = s.find(".reply-edit");
  var c = false;
  var r = false;
  j.click(function () {
    SetupAddEditComment(s, m, true)
  });
  l.click(function () {
    if (c || !confirm(LANG.replyreportwarning_tip)) {
      return
    }
    c = true;
    $.ajax({
      type: "POST",
      url: "/comment=flag-reply",
      data: {
        id: p
      },
      success: function () {
        h()
      },
      error: function (t) {
        e(t.responseText)
      }
    })
  });
  k.click(function () {
    if (k.attr("data-hasvoted") == "true" || k.attr("data-canvote") != "true" || c) {
      return
    }
    c = true;
    $.ajax({
      type: "POST",
      url: "/comment=upvote-reply",
      data: {
        id: p
      },
      success: function () {
        o(1)
      },
      error: function (t) {
        e(t.responseText)
      }
    })
  });
  q.click(function () {
    if (q.attr("data-hasvoted") == "true" || q.attr("data-canvote") != "true" || c) {
      return
    }
    c = true;
    $.ajax({
      type: "POST",
      url: "/comment=downvote-reply",
      data: {
        id: p
      },
      success: function () {
        o(-1)
      },
      error: function (t) {
        e(t.responseText)
      }
    })
  });
  g.click(function () {
    if (r) {
      return
    }
    if (!confirm(LANG.deletereplyconfirmation_tip)) {
      return
    }
    r = true;
    $.ajax({
      type: "POST",
      url: "/comment=delete-reply",
      data: {
        id: p
      },
      success: function () {
        f()
      },
      error: function (t) {
        e(t.responseText)
      }
    })
  });

  function o(t) {
    var u = parseInt(b.text());
    u += t;
    b.text(u);
    if (t > 0) {
      k.attr("data-hasvoted", "true")
    } else {
      q.attr("data-hasvoted", "true")
    }
    k.attr("data-canvote", "false");
    q.attr("data-canvote", "false");
    if (ratingChance > 0) {
      l.remove()
    }
    c = false
  }
  function h() {
    c = false;
    l.remove()
  }
  function f() {
    s.remove();
    r = false
  }
  function e(t) {
    c = false;
    r = false;
    if (!t) {
      t = "An error has occurred. Try refreshing the page."
    }
    MessageBox(n, t)
  }
}
function co_addYourComment() {
  tabsContribute.focus(0);
  var b = $WH.gE(document.forms.addcomment, "textarea")[0];
  g_safeFocus(b)
}
function co_validateForm(e) {
  var b = $WH.gE(e, "textarea")[0];
  var c = Locale.getId();
  if (c != LOCALE_ENUS && $(e).attr("action") && ($(e).attr("action").replace(/^.*type=([0-9]*).*$/i, "$1")) == 100) {
    alert(LANG.message_cantpostlcomment_tip);
    return false
  }
  if (Listview.funcBox.coValidate(b)) {
    if (!g_requireCaptcha()) {
      return true
    }
    if (e.elements.recaptcha_response_field.value.length) {
      return true
    } else {
      alert(LANG.message_codenotentered);
      g_safeFocus(e.elements.recaptcha_response_field)
    }
  }
  return false
}
$(document).ready(function () {
  g_setupChangeWarning($("form[name=addcomment]"), [$("textarea[name=commentbody]")], LANG.message_startedpost)
});
var ContactTool = new
function () {
  this.general = 0;
  this.comment = 1;
  this.post = 2;
  this.screenshot = 3;
  this.video = 5;
  this.guide = 6;
  var g;
  var f = {
    0: [
      [1, true],
      [9, true],
      [2, true],
      [8, true],
      [3, true],
      [4, true],
      [5, true],
      [6, true],
      [7, true]
    ],
    1: [
      [15, function (j) {
        return ((j.roles & U_GROUP_MODERATOR) == 0)
      }],
      [16, true],
      [18, function (j) {
        return ((j.roles & U_GROUP_MODERATOR) == 0)
      }],
      [19, function (j) {
        return ((j.roles & U_GROUP_MODERATOR) == 0)
      }],
      [20, function (j) {
        return ((j.roles & U_GROUP_MODERATOR) == 0)
      }]
    ],
    2: [
      [30, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0)
      }],
      [37, function (j) {
        return ((j.roles & U_GROUP_MODERATOR) == 0 && g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0 && g_users[j.user].avatar == 2)
      }],
      [31, true],
      [32, true],
      [33, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0)
      }],
      [34, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0 && j.op && !j.sticky)
      }],
      [35, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0)
      }],
      [36, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0)
      }]
    ],
    3: [
      [45, true],
      [46, true],
      [47, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0)
      }],
      [48, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0)
      }]
    ],
    5: [
      [45, true],
      [46, true],
      [47, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0)
      }],
      [48, function (j) {
        return (g_users && g_users[j.user] && (g_users[j.user].roles & U_GROUP_MODERATOR) == 0)
      }]
    ],
    6: [
      [45, true],
      [46, true],
      [48, true]
    ]
  };
  var e = {
    1: LANG.ct_resp_error1,
    2: LANG.ct_resp_error2,
    3: LANG.ct_resp_error3,
    7: LANG.ct_resp_error7
  };
  var c = null;
  var b = null;
  this.monkeyBrokerCallback = function (j) {
    b = j
  };
  this.displayError = function (k, j) {
    alert(j)
  };
  this.onShow = function () {
    $WH.g_ajaxIshRequest("http://mb.zam.com/mb/HistoryViewer?callback=ContactTool.monkeyBrokerCallback", true);
    if (location.hash && location.hash != "#contact") {
      c = location.hash
    }
    if (this.data.mode == 0) {
      location.replace("#contact")
    }
  };
  this.onHide = function () {
    if (c && (c.indexOf("screenshots:") == -1 || c.indexOf("videos:") == -1)) {
      $WH.g_setHash(c)
    } else {
      $WH.g_clearHash()
    }
  };
  this.onSubmit = function (q, n, l) {
    if (q.submitting) {
      return false
    }
    for (var p = 0; p < l.elements.length; ++p) {
      l.elements[p].disabled = true
    }
    var o = ["contact=1", "mode=" + $WH.urlencode(q.mode), "reason=" + $WH.urlencode(q.reason), "desc=" + $WH.urlencode(q.description), "ua=" + $WH.urlencode(navigator.userAgent), "appname=" + $WH.urlencode(navigator.appName), "page=" + $WH.urlencode(q.currenturl)];
    if (q.mode == 0) {
      if (q.relatedurl) {
        o.push("relatedurl=" + $WH.urlencode(q.relatedurl))
      }
      if (q.email) {
        o.push("email=" + $WH.urlencode(q.email))
      }
    } else {
      if (q.mode == 1) {
        o.push("id=" + $WH.urlencode(q.comment.id))
      } else {
        if (q.mode == 2) {
          o.push("id=" + $WH.urlencode(q.post.id))
        } else {
          if (q.mode == 3) {
            o.push("id=" + $WH.urlencode(q.screenshot.id))
          } else {
            if (q.mode == 5) {
              o.push("id=" + $WH.urlencode(q.video.id))
            } else {
              if (q.mode == 6) {
                o.push("id=" + $WH.urlencode(q.guide))
              }
            }
          }
        }
      }
    }
    if (q.reason == 9) {
      var k = "No ad data. Probably blocked by user.";
      if (typeof WAS == "undefined") {
        k = '"Ads" object not found. User may have ad blocking enabled. No ad log available.'
      } else {
        if (b) {
          k = "<b>UID: " + b.uid + "</b><br/>";
          for (var p = 0, r; r = b.history.entries[p]; p++) {
            var m = new Date(r.time * 1000);
            k += "<b>eventNum:</b>" + r.eventNum + "<br>";
            k += "<b>eventType:</b>" + r.eventType + "<br>";
            k += "<b>eventTypeName:</b>" + r.eventTypeName + "<br>";
            k += "<b>time:</b>" + m.toUTCString() + "<br>";
            k += "<b>bannerId:</b>" + r.bannerId + "<br>";
            k += "<b>bannerName:</b>" + r.bannerName + "<br>";
            k += "<b>sizeId:</b>" + r.sizeId + "<br>";
            k += "<b>sizeName:</b>" + r.sizeName + "<br>";
            k += "<b>campaignId:</b>" + r.campaignId + "<br>";
            k += "<b>campaignName:</b>" + r.campaignName + "<br>";
            k += "<br><br>";
            if (p > 15) {
              break
            }
          }
        }
      }
      o.push("adinfo=" + encodeURIComponent(k))
    }
    q.submitting = true;
    var j = "/contactus";
    new Ajax(j, {
      method: "POST",
      params: o.join("&"),
      onSuccess: function (u, s) {
        var t = u.responseText;
        if (t == 0) {
          if (g_user.name) {
            alert($WH.sprintf(LANG.ct_dialog_thanks_user, g_user.name))
          } else {
            alert(LANG.ct_dialog_thanks)
          }
          Lightbox.hide()
        } else {
          if (e[t]) {
            alert(e[t])
          } else {
            alert("Error: " + t)
          }
        }
      },
      onFailure: function (t, s) {
        alert("Failure submitting contact request: " + t.statusText)
      },
      onComplete: function (u, t) {
        for (var s = 0; s < l.elements.length; ++s) {
          l.elements[s].disabled = false
        }
        q.submitting = false
      }
    });
    return false
  };
  this.show = function (j) {
    if (!j) {
      j = {}
    }
    var l = {
      mode: 0
    };
    $WH.cO(l, j);
    l.reasons = f[l.mode];
    if (location.href.indexOf("#contact") != -1) {
      l.currenturl = location.href.substr(0, location.href.indexOf("#contact"))
    } else {
      l.currenturl = location.href
    }
    var k = "contactus";
    if (l.mode != 0) {
      k = "reportform"
    }
    if (!g) {
      this.init()
    }
    g.show(k, {
      data: l,
      onShow: this.onShow,
      onHide: this.onHide,
      onSubmit: this.onSubmit
    })
  };
  this.checkPound = function () {
    if (location.hash && location.hash == "#contact") {
      ContactTool.show()
    }
  };
  var h;
  if ($WH.isset("g_thottbot") && g_thottbot) {
    h = "Contact Thottbot"
  } else {
    h = LANG.ct_dialog_contactwowhead
  }
  this.init = function () {
    g = new Dialog();
    Dialog.templates.contactus = {
      title: h,
      width: 550,
      buttons: [
        ["check", LANG.ok],
        ["x", LANG.cancel]
      ],
      fields: [{
        id: "reason",
        type: "select",
        label: LANG.ct_dialog_reason,
        required: 1,
        options: [],
        compute: function (r, s, l, p) {
          $WH.ee(r);
          for (var q = 0; q < this.data.reasons.length; ++q) {
            var m = this.data.reasons[q][0];
            var k = this.data.reasons[q][1];
            var j = false;
            if (typeof k == "function") {
              j = k(this.extra)
            } else {
              j = k
            }
            if (!j) {
              continue
            }
            var n = $WH.ce("option");
            n.value = m;
            if (s && s == m) {
              n.selected = true
            }
            $WH.ae(n, $WH.ct(g_contact_reasons[m]));
            $WH.ae(r, n)
          }
          r.onchange = function () {
            if (this.value == 1 || this.value == 2 || this.value == 3) {
              l.currenturl.parentNode.parentNode.style.display = "";
              l.relatedurl.parentNode.parentNode.style.display = ""
            } else {
              if (this.value == 9) {
                l.currenturl.parentNode.parentNode.style.display = "";
                l.relatedurl.parentNode.parentNode.style.display = "none"
              } else {
                l.currenturl.parentNode.parentNode.style.display = "none";
                l.relatedurl.parentNode.parentNode.style.display = "none"
              }
            }
          }.bind(r);
          p.style.width = "98%"
        },
        validate: function (m, l, k) {
          var j = "";
          if (!m || m.length == 0) {
            j = LANG.ct_dialog_error_reason
          }
          if (j == "") {
            return true
          }
          ContactTool.displayError(k.reason, j);
          g_safeFocus(k.reason);
          return false
        }
      },
      {
        id: "currenturl",
        type: "text",
        disabled: true,
        label: LANG.ct_dialog_currenturl,
        size: 40
      },
      {
        id: "relatedurl",
        type: "text",
        label: LANG.ct_dialog_relatedurl,
        caption: LANG.ct_dialog_optional,
        size: 40,
        validate: function (n, m, l) {
          var k = "";
          var j = /^(http(s?)\:\/\/|\/)?([\w]+:\w+@)?([a-zA-Z]{1}([\w\-]+\.)+([\w]{2,5}))(:[\d]{1,5})?((\/?\w+\/)+|\/?)(\w+\.[\w]{3,4})?((\?\w+=\w+)?(&\w+=\w+)*)?/;
          n = n.trim();
          if (n.length >= 250) {
            k = LANG.ct_dialog_error_relatedurl
          } else {
            if (n.length > 0 && !j.test(n)) {
              k = LANG.ct_dialog_error_invalidurl
            }
          }
          if (k == "") {
            return true
          }
          ContactTool.displayError(l.relatedurl, k);
          g_safeFocus(l.relatedurl);
          return false
        }
      },
      {
        id: "email",
        type: "text",
        label: LANG.ct_dialog_email,
        caption: LANG.ct_dialog_email_caption,
        compute: function (n, m, k, o, l) {
          if (g_user.email) {
            this.data.email = g_user.email;
            l.style.display = "none"
          } else {
            var j = function () {
              $("#contact-emailwarn").css("display", g_isEmailValid($(k.email).val()) ? "none" : "");
              Lightbox.reveal()
            };
            $(n).keyup(j).blur(j)
          }
        },
        validate: function (m, l, k) {
          var j = "";
          m = m.trim();
          if (m.length >= 100) {
            j = LANG.ct_dialog_error_emaillen
          } else {
            if (m.length > 0 && !g_isEmailValid(m)) {
              j = LANG.ct_dialog_error_email
            }
          }
          if (j == "") {
            return true
          }
          ContactTool.displayError(k.email, j);
          g_safeFocus(k.email);
          return false
        }
      },
      {
        id: "description",
        type: "textarea",
        caption: LANG.ct_dialog_desc_caption,
        width: "98%",
        required: 1,
        size: [10, 30],
        validate: function (m, l, k) {
          var j = "";
          m = m.trim();
          if (m.length == 0 || m.length > 10000) {
            j = LANG.ct_dialog_error_desc
          }
          if (j == "") {
            return true
          }
          ContactTool.displayError(k.description, j);
          g_safeFocus(k.description);
          return false
        }
      },
      {
        id: "noemailwarning",
        type: "caption",
        compute: function (l, k, j, m) {
          $(m).html('<span id="contact-emailwarn" class="q10"' + (g_user.email ? ' style="display: none"' : "") + ">" + LANG.ct_dialog_noemailwarning + "</span>").css("white-space", "normal").css("padding", "0 4px")
        }
      }],
      onInit: function (j) {},
      onShow: function (j) {
        if (this.data.focus && j[this.data.focus]) {
          setTimeout(g_setCaretPosition.bind(null, j[this.data.focus], j[this.data.focus].value.length), 100)
        } else {
          if (j.reason && !j.reason.value) {
            setTimeout($WH.bindfunc(j.reason.focus, j.reason), 10)
          } else {
            if (j.relatedurl && !j.relatedurl.value) {
              setTimeout($WH.bindfunc(j.relatedurl.focus, j.relatedurl), 10)
            } else {
              if (j.email && !j.email.value) {
                setTimeout($WH.bindfunc(j.email.focus, j.email), 10)
              } else {
                if (j.description && !j.description.value) {
                  setTimeout($WH.bindfunc(j.description.focus, j.description), 10)
                }
              }
            }
          }
        }
        setTimeout(Lightbox.reveal, 250)
      }
    };
    Dialog.templates.reportform = {
      title: LANG.ct_dialog_report,
      width: 550,
      buttons: [
        ["check", LANG.ok],
        ["x", LANG.cancel]
      ],
      fields: [{
        id: "reason",
        type: "select",
        label: LANG.ct_dialog_reason,
        options: [],
        compute: function (t, u, l, q) {
          switch (this.data.mode) {
          case 1:
            l.firstChild.innerHTML = $WH.sprintf(LANG.ct_dialog_reportcomment, '<a href="/user=' + this.data.comment.user + '">' + this.data.comment.user + "</a>");
            break;
          case 2:
            var s = '<a href="/user=' + this.data.post.user + '">' + this.data.post.user + "</a>";
            if (this.data.post.op) {
              l.firstChild.innerHTML = $WH.sprintf(LANG.ct_dialog_reporttopic, s)
            } else {
              l.firstChild.innerHTML = $WH.sprintf(LANG.ct_dialog_reportpost, s)
            }
            break;
          case 3:
            l.firstChild.innerHTML = $WH.sprintf(LANG.ct_dialog_reportscreen, '<a href="/user=' + this.data.screenshot.user + '">' + this.data.screenshot.user + "</a>");
            break;
          case 5:
            l.firstChild.innerHTML = $WH.sprintf(LANG.ct_dialog_reportvideo, '<a href="/user=' + this.data.video.user + '">' + this.data.video.user + "</a>");
            break;
          case 6:
            l.firstChild.innerHTML = "Report guide";
            break
          }
          l.firstChild.setAttribute("style", "");
          $WH.ee(t);
          var p;
          if (this.data.mode == 1) {
            p = this.data.comment
          } else {
            if (this.data.mode == 2) {
              p = this.data.post
            } else {
              if (this.data.mode == 3) {
                p = this.data.screenshot
              } else {
                if (this.data.mode == 5) {
                  p = this.data.video
                } else {
                  if (this.data.mode == 6) {
                    p = this.data.guide
                  }
                }
              }
            }
          }
          $WH.ae(t, $WH.ce("option", {
            selected: (!u),
            value: -1
          }));
          for (var r = 0; r < this.data.reasons.length; ++r) {
            var m = this.data.reasons[r][0];
            var k = this.data.reasons[r][1];
            var j = false;
            if (typeof k == "function") {
              j = k(p)
            } else {
              j = k
            }
            if (!j) {
              continue
            }
            var n = $WH.ce("option");
            n.value = m;
            if (u && u == m) {
              n.selected = true
            }
            $WH.ae(n, $WH.ct(g_contact_reasons[m]));
            $WH.ae(t, n)
          }
          q.style.width = "98%"
        },
        validate: function (m, l, k) {
          var j = "";
          if (!m || m == -1 || m.length == 0) {
            j = LANG.ct_dialog_error_reason
          }
          if (j == "") {
            return true
          }
          ContactTool.displayError(k.reason, j);
          g_safeFocus(k.reason);
          return false
        }
      },
      {
        id: "description",
        type: "textarea",
        caption: LANG.ct_dialog_desc_caption,
        width: "98%",
        required: 1,
        size: [10, 30],
        validate: function (m, l, k) {
          var j = "";
          m = m.trim();
          if (m.length == 0 || m.length > 10000) {
            j = LANG.ct_dialog_error_desc
          }
          if (j == "") {
            return true
          }
          ContactTool.displayError(k.description, j);
          g_safeFocus(k.description);
          return false
        }
      }],
      onInit: function (j) {},
      onShow: function (k) {
        var l = $(k).find("*[name=reason]")[0];
        var j = $(k).find("*[name=description]")[0];
        if (this.data.focus && k[this.data.focus]) {
          setTimeout(g_setCaretPosition.bind(null, k[this.data.focus], k[this.data.focus].value.length), 100)
        } else {
          if (!l.value) {
            setTimeout($WH.bindfunc(l.focus, l), 10)
          } else {
            if (!j.value) {
              setTimeout($WH.bindfunc(j.focus, j), 10)
            }
          }
        }
      }
    }
  };
  $(document).ready(this.checkPound)
};

function g_cookiesEnabled() {
  document.cookie = "enabledTest";
  return (document.cookie.indexOf("enabledTest") != -1) ? true : false
}
function g_getWowheadCookie(b) {
  if (g_user.id > 0) {
    return g_user.cookies[b]
  } else {
    return $WH.gc(b)
  }
}
function g_setWowheadCookie(e, f, c) {
  var b = e.substr(0, 5) == "temp_";
  if (!c && g_user.id > 0 && !b) {
    new Ajax("/cookie=" + e + "&" + e + "=" + $WH.urlencode(f), {
      method: "get",
      onSuccess: function (g) {
        if (g.responseText == 0) {
          g_user.cookies[e] = f
        }
      }
    })
  } else {
    if (c || g_user.id == 0) {
      $WH.sc(e, 14, f, "/", ".wowhead.com")
    }
  }
}
function deck_getUpDownVotes(c, j, l, o, h, e) {
  var g = $("<span>");
  if (!l) {
    if (e) {
      g.append($('<a href="#login" class="tip fa fa-color-inherit fa-placement-spaced fa-size-xs fa-long-arrow-up q2">' + (c == null ? "" : c) + "</a>").click(function () {
        LoginDialog.show();
        return false
      }));
      g.append(" &nbsp;");
      g.append($('<a href="#login" class="tip fa fa-color-inherit fa-placement-spaced fa-size-xs fa-long-arrow-down q10">' + (j == null ? "" : j) + "</a>").click(function () {
        LoginDialog.show();
        return false
      }));
      $("a", g).each(function () {
        $WH.Tooltip.simple(this, LANG.dg_deckratelogin + '<div class="q2" style="margin-top:10px">' + LANG.db_clicktologin + "</div>")
      });
      return g.contents()
    }
    var f = [];
    f.push('<span class="fa fa-color-inherit fa-placement-spaced fa-size-xs fa-long-arrow-up q2">' + c + "</span>");
    f.push('<span class="fa fa-color-inherit fa-placement-spaced fa-size-xs fa-long-arrow-down q10">' + j + "</span>");
    g.append(f.join(" &nbsp;"));
    return g.contents()
  }
  var k = function (p, q) {
    if (m.getAttribute("data-hasvoted") == "true") {
      m.setAttribute("data-hasvoted", "false");
      if (m.innerHTML) {
        m.innerHTML = (parseInt(m.innerHTML) - 1)
      }
      if (p == 1) {
        p = 0
      }
    } else {
      if (p == 1) {
        m.setAttribute("data-hasvoted", "true");
        if (m.innerHTML) {
          m.innerHTML = (parseInt(m.innerHTML) + 1)
        }
      }
    }
    if (b.getAttribute("data-hasvoted") == "true") {
      b.setAttribute("data-hasvoted", "false");
      if (b.innerHTML) {
        b.innerHTML = (parseInt(b.innerHTML) - 1)
      }
      if (p == -1) {
        p = 0
      }
    } else {
      if (p == -1) {
        b.setAttribute("data-hasvoted", "true");
        if (b.innerHTML) {
          b.innerHTML = (parseInt(b.innerHTML) + 1)
        }
      }
    }
    if (typeof q != "undefined") {
      return
    }
    $.ajax({
      cache: false,
      url: "/deck&vote",
      type: "POST",
      error: function () {
        k(0, true);
        alert("Voting failed. Try again later.")
      },
      data: {
        id: h,
        rating: p
      }
    })
  };
  if (!g_user.id) {
    l = false
  }
  if (l) {
    g.addClass("ratable")
  }
  var n = $WH.ce("span");
  n.className = "deckguide-vote-links";
  var m = $WH.ce("span");
  if (l) {
    m = $WH.ce("a");
    m.href = "javascript:;";
    $WH.aE(m, "click", function () {
      k(1)
    })
  }
  m.className = "fa fa-color-inherit fa-placement-spaced fa-size-xs fa-long-arrow-up q2";
  m.setAttribute("data-hasvoted", (o == 1) ? "true" : "false");
  m.innerHTML = c;
  $WH.ae(n, m);
  var b = $WH.ce("span");
  if (l) {
    b = $WH.ce("a");
    b.href = "javascript:;";
    $WH.aE(b, "click", function () {
      k(-1)
    })
  }
  b.className = "fa fa-color-inherit fa-placement-spaced fa-size-xs fa-long-arrow-down q10";
  b.setAttribute("data-hasvoted", (o == -1) ? "true" : "false");
  b.innerHTML = j;
  $WH.ae(n, b);
  g.append(n);
  return g
}
var Dialog = function () {
  var f = this,
      l, u = null,
      p, m = {},
      o, e = false,
      r = $WH.ce("form"),
      c = {};
  r.onsubmit = function () {
    s();
    return false
  };
  this.show = function (w, y) {
    if (w) {
      p = w;
      l = $WH.cOr({}, Dialog.templates[p]);
      f.template = l
    } else {
      return
    }
    if (l.onInit && !e) {
      (l.onInit.bind(f, r, y))()
    }
    if (y.onBeforeShow) {
      m.onBeforeShow = y.onBeforeShow.bind(f, r)
    }
    if (l.onBeforeShow) {
      l.onBeforeShow = l.onBeforeShow.bind(f, r)
    }
    if (y.onShow) {
      m.onShow = y.onShow.bind(f, r)
    }
    if (l.onShow) {
      l.onShow = l.onShow.bind(f, r)
    }
    if (y.onHide) {
      m.onHide = y.onHide.bind(f, r)
    }
    if (l.onHide) {
      l.onHide = l.onHide.bind(f, r)
    }
    if (y.onSubmit) {
      m.onSubmit = y.onSubmit
    }
    if (l.onSubmit) {
      u = l.onSubmit.bind(f, r)
    }
    if (y.data) {
      e = false;
      o = {};
      $WH.cO(o, y.data)
    }
    f.data = o;
    Lightbox.show("dialog-" + p, {
      onShow: b,
      onHide: n
    })
  };
  this.getValue = function (w) {
    return k(w)
  };
  this.setValue = function (y, w) {
    h(y, w)
  };
  this.getSelectedValue = function (w) {
    return t(w)
  };
  this.getCheckedValue = function (w) {
    return v(w)
  };

  function b(w, y) {
    if (y || !e) {
      g(w)
    }
    if (l.onBeforeShow) {
      l.onBeforeShow()
    }
    if (m.onBeforeShow) {
      m.onBeforeShow()
    }
    Lightbox.setSize(l.width, l.height);
    w.className += " dialog";
    q();
    if (l.onShow) {
      l.onShow()
    }
    if (m.onShow) {
      m.onShow()
    }
  }
  function g(F) {
    $WH.ee(F);
    $WH.ee(r);
    var w = $WH.ce("div");
    w.className = "lightbox-content text";
    $WH.ae(F, w);
    $WH.ae(w, r);
    if (l.title) {
      $WH.ae(r, g_getImitationHeading($WH.ct(l.title), 1))
    }
    var H = $WH.ce("table"),
        D = $WH.ce("tbody"),
        A = false;
    $WH.ae(H, D);
    $WH.ae(r, H);
    for (var O = 0, P = l.fields.length; O < P; ++O) {
      var y = l.fields[O],
          E;
      if (!A) {
        tr = $WH.ce("tr");
        th = $WH.ce("th");
        td = $WH.ce("td")
      }
      y.__tr = tr;
      if (o[y.id] == null) {
        o[y.id] = (y.value ? y.value : "")
      }
      var C;
      if (y.options) {
        C = [];
        if (y.optorder) {
          $WH.cO(C, y.optorder)
        } else {
          for (var N in y.options) {
            C.push(N)
          }
        }
        if (y.sort) {
          C.sort(function (T, S) {
            return y.sort * $WH.strcmp(y.options[T], y.options[S])
          })
        }
      }
      switch (y.type) {
      case "caption":
        th.colSpan = 2;
        th.style.textAlign = "left";
        th.style.padding = 0;
        if (y.compute) {
          (y.compute.bind(f, null, o[y.id], r, th, tr))()
        } else {
          if (y.label) {
            $WH.ae(th, $WH.ct(y.label))
          }
        }
        $WH.ae(tr, th);
        $WH.ae(D, tr);
        continue;
        break;
      case "textarea":
        var Q = E = $WH.ce("textarea");
        Q.name = y.id;
        if (y.disabled) {
          Q.disabled = true
        }
        Q.rows = y.size[0];
        Q.cols = y.size[1];
        td.colSpan = 2;
        if (y.label) {
          th.colSpan = 2;
          th.style.textAlign = "left";
          th.style.padding = 0;
          td.style.padding = 0;
          $WH.ae(th, $WH.ct(y.label));
          $WH.ae(tr, th);
          $WH.ae(D, tr);
          tr = $WH.ce("tr")
        }
        $WH.ae(td, Q);
        break;
      case "select":
        var Q = E = $WH.ce("select");
        Q.name = y.id;
        if (y.size) {
          Q.size = y.size
        }
        if (y.disabled) {
          Q.disabled = true
        }
        if (y.multiple) {
          Q.multiple = true
        }
        if (y.onchange) {
          Q.onchange = y.onchange.bind(f, Q)
        }
        for (var N = 0, B = C.length; N < B; ++N) {
          var K = $WH.ce("option");
          K.value = C[N];
          $WH.ae(K, $WH.ct(y.options[C[N]]));
          $WH.ae(Q, K)
        }
        $WH.ae(td, Q);
        break;
      case "dynamic":
        td.colSpan = 2;
        td.style.textAlign = "left";
        td.style.padding = 0;
        if (y.compute) {
          (y.compute.bind(f, null, o[y.id], r, td, tr))()
        }
        $WH.ae(tr, td);
        $WH.ae(D, tr);
        E = td;
        break;
      case "checkbox":
      case "radio":
        var M = 0;
        E = [];
        for (var N = 0, B = C.length; N < B; ++N) {
          var I = $WH.ce("span"),
              Q, L, z = "sdfler46" + y.id + "-" + C[N];
          if (N > 0 && !y.noInputBr) {
            $WH.ae(td, $WH.ce("br"))
          }
          L = $WH.ce("label");
          L.setAttribute("for", z);
          L.onmousedown = $WH.rf;
          Q = $WH.ce("input");
          Q.setAttribute("type", y.type);
          Q.name = y.id;
          Q.value = C[N];
          Q.id = z;
          if (y.disabled) {
            Q.disabled = true
          }
          if (y.onchange) {
            Q.onchange = y.onchange.bind(f, Q)
          }
          if (y.submitOnDblClick) {
            L.ondblclick = Q.ondblclick = function (S) {
              s()
            }
          }
          if (y.compute) {
            (y.compute.bind(f, Q, o[y.id], r, td, tr, L))()
          }
          $WH.ae(L, Q);
          $WH.ae(L, $WH.ct(y.options[C[N]]));
          $WH.ae(td, L);
          E.push(Q)
        }
        break;
      default:
        var Q = E = $WH.ce("input");
        Q.name = y.id;
        if (y.size) {
          Q.size = y.size
        }
        if (y.disabled) {
          Q.disabled = true
        }
        if (y.submitOnEnter) {
          Q.onkeypress = function (S) {
            S = $WH.$E(S);
            if (S.keyCode == 13) {
              s()
            }
          }
        }
        Q.setAttribute("type", y.type);
        $WH.ae(td, Q);
        break
      }
      if (y.label) {
        if (y.type == "textarea") {
          if (y.labelAlign) {
            td.style.textAlign = y.labelAlign
          }
          td.colSpan = 2
        } else {
          if (y.labelAlign) {
            th.style.textAlign = y.labelAlign
          }
          $WH.ae(th, $WH.ct(y.label));
          $WH.ae(tr, th)
        }
      }
      if (y.placeholder) {
        Q.placeholder = y.placeholder
      }
      if (y.type != "checkbox" && y.type != "radio") {
        if (y.width) {
          Q.style.width = y.width
        }
        if (y.compute && y.type != "caption" && y.type != "dynamic") {
          (y.compute.bind(f, Q, o[y.id], r, td, tr))()
        }
      }
      if (y.caption) {
        var I = $WH.ce("small");
        if (y.type != "textarea") {
          I.style.paddingLeft = "2px"
        }
        $WH.ae(I, $WH.ct(y.caption));
        $WH.ae(td, I)
      }
      $WH.ae(tr, td);
      $WH.ae(D, tr);
      A = y.mergeCell;
      c[y.id] = E
    }
    var J = {
      arrow: "external-link",
      check: "check",
      question: "question",
      x: "times"
    };
    for (var O = l.buttons.length; O > 0; --O) {
      var G = l.buttons[O - 1],
          R = $WH.ce("a");
      R.onclick = s.bind(R, G[0]);
      R.className = "dialog-" + G[0] + " fa fa-" + J[G[0]];
      R.href = "javascript:;";
      $WH.ae(R, $WH.ct(G[1]));
      $WH.ae(F, R)
    }
    e = true
  }
  function q() {
    for (var A = 0, w = l.fields.length; A < w; ++A) {
      var C = l.fields[A],
          B = c[C.id];
      switch (C.type) {
      case "caption":
        break;
      case "select":
        for (var z = 0, y = B.options.length; z < y; z++) {
          B.options[z].selected = (B.options[z].value == o[C.id] || $WH.in_array(o[C.id], B.options[z].value) != -1)
        }
        break;
      case "checkbox":
      case "radio":
        for (var z = 0, y = B.length; z < y; z++) {
          B[z].checked = (B[z].value == o[C.id] || $WH.in_array(o[C.id], B[z].value) != -1)
        }
        break;
      default:
        B.value = o[C.id];
        break
      }
      if (C.update) {
        (C.update.bind(f, null, o[C.id], r, B))()
      }
    }
  }
  function n() {
    if (l.onHide) {
      l.onHide()
    }
    if (m.onHide) {
      m.onHide()
    }
  }
  function s(y) {
    if (y == "x") {
      return Lightbox.hide()
    }
    for (var z = 0, w = l.fields.length; z < w; ++z) {
      var B = l.fields[z],
          A;
      switch (B.type) {
      case "caption":
        continue;
      case "select":
        A = t(B.id);
        break;
      case "checkbox":
      case "radio":
        A = v(B.id);
        break;
      case "dynamic":
        if (B.getValue) {
          A = B.getValue(B, o, r);
          break
        }
      default:
        A = k(B.id);
        break
      }
      if (B.validate) {
        if (!B.validate(A, o, r)) {
          return
        }
      }
      if (A && typeof A == "string") {
        A = $WH.trim(A)
      }
      o[B.id] = A
    }
    j(y)
  }
  function j(y) {
    var w;
    if (u) {
      w = u(o, y, r)
    }
    if (m.onSubmit) {
      w = m.onSubmit(o, y, r)
    }
    if (w === undefined || w) {
      Lightbox.hide()
    }
    return false
  }
  function k(w) {
    return c[w].value
  }
  function h(y, w) {
    c[y].value = w
  }
  function t(B) {
    var A = [],
        z = c[B];
    for (var y = 0, w = z.options.length; y < w; y++) {
      if (z.options[y].selected) {
        A.push(parseInt(z.options[y].value) == z.options[y].value ? parseInt(z.options[y].value) : z.options[y].value)
      }
    }
    if (A.length == 1) {
      A = A[0]
    }
    return A
  }
  function v(B) {
    var A = [],
        z = c[B];
    for (var y = 0, w = z.length; y < w; y++) {
      if (z[y].checked) {
        A.push(parseInt(z[y].value) == z[y].value ? parseInt(z[y].value) : z[y].value)
      }
    }
    return A
  }
};
Dialog.templates = {};
Dialog.extraFields = {};

function g_addCss(c) {
  var e = $WH.ce("style");
  e.type = "text/css";
  if (e.styleSheet) {
    e.styleSheet.cssText = c
  } else {
    $WH.ae(e, $WH.ct(c))
  }
  var b = document.getElementsByTagName("head")[0];
  $WH.ae(b, e)
}
function g_setTextNodes(e, c) {
  if (e.nodeType == 3) {
    e.nodeValue = c
  } else {
    for (var b = 0; b < e.childNodes.length; ++b) {
      g_setTextNodes(e.childNodes[b], c)
    }
  }
}
function g_setInnerHtml(f, e, b) {
  if (f.nodeName.toLowerCase() == b) {
    f.innerHTML = e
  } else {
    for (var c = 0; c < f.childNodes.length; ++c) {
      g_setInnerHtml(f.childNodes[c], e, b)
    }
  }
}
function g_getFirstTextContent(e) {
  for (var c = 0; c < e.childNodes.length; ++c) {
    if (e.childNodes[c].nodeName == "#text") {
      return e.childNodes[c].nodeValue
    }
    var b = g_getFirstTextContent(e.childNodes[c]);
    if (b) {
      return b
    }
  }
  return false
}
function g_getTextContent(e) {
  var b = "";
  for (var c = 0; c < e.childNodes.length; ++c) {
    if (e.childNodes[c].nodeValue) {
      b += e.childNodes[c].nodeValue
    } else {
      if (e.childNodes[c].nodeName == "BR") {
        if ($WH.Browser.ie67) {
          b += "\r"
        } else {
          b += "\n"
        }
      }
    }
    b += g_getTextContent(e.childNodes[c])
  }
  return b
}
function g_toggleDisplay(b) {
  b = $(b);
  b.toggle();
  if (b.is(":visible")) {
    return true
  }
  return false
}
function g_preventScroll(b, c) {
  if (b) {
    $WH.aE(document, "mousewheel", g_preventScroll.cancelScroll);
    $WH.aE(window, "DOMMouseScroll", g_preventScroll.cancelScroll);
    if (c) {
      $WH.aE(document.body, "touchmove", g_preventScroll.touch.bind(c))
    }
  } else {
    $WH.dE(document, "mousewheel", g_preventScroll.cancelScroll);
    $WH.dE(window, "DOMMouseScroll", g_preventScroll.cancelScroll);
    $WH.dE(document.body, "touchmove", g_preventScroll.touch)
  }
}
g_preventScroll.cancelScroll = function (b) {
  if (b.stopPropagation) {
    b.stopPropagation()
  }
  if (b.preventDefault) {
    b.preventDefault()
  }
  b.returnValue = false;
  b.cancelBubble = true;
  return false
};
g_preventScroll.touch = function (e) {
  var b = $(this);
  if (b.length) {
    var c = b.get(0);
    if (c.contains && !c.contains(e.target)) {
      e.preventDefault()
    }
  } else {
    e.preventDefault()
  }
};

function g_safeFocus(b) {
  if (!Platform.isTouch()) {
    $(b).focus()
  }
}
function g_safeSelect(b) {
  if (!Platform.isTouch()) {
    $(b).select()
  }
}
function g_safeFocus(b) {
  if (!Platform.isTouch()) {
    $(b).focus()
  }
}
function g_safeSelect(b) {
  if (!Platform.isTouch()) {
    $(b).select()
  }
}
function g_setCaretPosition(e, c) {
  if (!e) {
    return
  }
  if (e.createTextRange) {
    var b = e.createTextRange();
    b.move("character", c);
    b.select()
  } else {
    if (e.selectionStart != undefined) {
      e.focus();
      e.setSelectionRange(c, c)
    } else {
      e.focus()
    }
  }
}
function g_insertTag(g, b, l, m) {
  var c = $WH.ge(g);
  c.focus();
  if (c.selectionStart != null) {
    var p = c.selectionStart,
        k = c.selectionEnd,
        o = c.scrollLeft,
        f = c.scrollTop;
    var j = c.value.substring(p, k);
    if (typeof m == "function") {
      j = m(j)
    }
    c.value = c.value.substr(0, p) + b + j + l + c.value.substr(k);
    c.selectionStart = c.selectionEnd = k + b.length;
    c.scrollLeft = o;
    c.scrollTop = f
  } else {
    if (document.selection && document.selection.createRange) {
      var h = document.selection.createRange();
      if (h.parentElement() != c) {
        return
      }
      var j = h.text;
      if (typeof m == "function") {
        j = m(j)
      }
      h.text = b + j + l
    }
  }
  if (c.onkeyup) {
    c.onkeyup()
  }
}
function g_onAfterTyping(b, f, e) {
  var g;
  var c = function () {
    if (g) {
      clearTimeout(g);
      g = null
    }
    g = setTimeout(f, e)
  };
  b.onkeyup = c
}
function g_onClick(e, f) {
  var c = 0;

  function b(g) {
    if (c) {
      if (c != g) {
        return
      }
    } else {
      c = g
    }
    f(true)
  }
  e.onclick = function (g) {
    g = $WH.$E(g);
    if (g._button == 2) {
      return true
    }
    return false
  };
  e.oncontextmenu = function () {
    b(1);
    return false
  };
  e.onmouseup = function (g) {
    g = $WH.$E(g);
    if (g._button == 3 || g.shiftKey || g.ctrlKey) {
      b(2)
    } else {
      if (g._button == 1) {
        f(false)
      }
    }
    return false
  }
}
function g_isLeftClick(b) {
  b = $WH.$E(b);
  return (b && b._button == 1)
}
function g_preventEmptyFormSubmission() {
  if (!$.trim(this.elements[0].value)) {
    return false
  }
}
var Draggable = new
function () {
  var b = {},
      k = {},
      o, f;

  function m(s) {
    s = $WH.$E(s);
    if (this._handle) {
      var p = s._target,
          r = false,
          q = 0;
      while (p && q <= 3) {
        if (p == this._handle) {
          r = true;
          break
        }
        p = p.parentNode;
        ++q
      }
      if (!r) {
        return false
      }
    }
    o = this;
    b = $WH.g_getCursorPos(s);
    $WH.aE(document, "mousemove", c);
    $WH.aE(document, "mouseup", e);
    if (o.onClick) {
      o.onClick(s, o)
    }
    return false
  }
  function c(s) {
    s = $WH.$E(s);
    var t = $WH.g_getCursorPos(s);
    if (o) {
      if (Math.abs(t.x - b.x) > 5 || Math.abs(t.y - b.y) > 5) {
        l(s, o);
        o = null
      }
    }
    if (!f || !f._bounds) {
      return false
    }
    var r = j(f),
        q = t.x - b.x,
        p = t.y - b.y;
    q = Math.max(f._bounds.x1 - k.x, Math.min(f._bounds.x2 - k.x - (r.x2 - r.x1), q));
    p = Math.max(f._bounds.y1 - k.y, Math.min(f._bounds.y2 - k.y - (r.y2 - r.y1), p));
    n(q, p);
    return false
  }
  function e(p) {
    p = $WH.$E(p);
    o = null;
    if (f) {
      h(p)
    }
  }
  function l(q, p) {
    if (f) {
      h(q)
    }
    var r = $WH.ac(p);
    k.x = r[0];
    k.y = r[1];
    if (p._targets.length) {
      f = p.cloneNode(true);
      f._orig = p;
      $WH.ae(document.body, f);
      n(-2323, -2323)
    } else {
      f = p
    }
    $WH.Tooltip.disabled = true;
    $WH.Tooltip.hide();
    if (p.onDrag) {
      p.onDrag(q, f, p)
    }
    f._bounds = j(p._container);
    f.className += " dragged"
  }
  function h(u) {
    var t = false,
        v = $WH.g_getCursorPos(u);
    if (f._orig && f._orig._targets.length) {
      g();
      var w = {
        x1: f._x,
        x2: f._x + parseInt(f.offsetWidth),
        y1: f._y,
        y2: f._y + parseInt(f.offsetHeight)
      };
      $WH.de(f);
      f = f._orig;
      for (var s = 0, q = f._targets.length; s < q; ++s) {
        var p = f._targets[s],
            r = j(p);
        if (w.x2 >= r.x1 && w.x1 < r.x2 && w.y2 >= r.y1 && w.y1 < r.y2) {
          t = true;
          if (f.onDrop) {
            f.onDrop(u, f, p, (v.x >= r.x1 && v.x <= r.x2 && v.y >= r.y1 && v.y <= r.y2))
          } else {
            $WH.ae(p, f)
          }
        }
      }
    }
    if (!t && f.onDrop) {
      f.onDrop(u, f, null)
    }
    $WH.dE(document, "mousemove", c);
    $WH.dE(document, "mouseup", e);
    $WH.Tooltip.disabled = false;
    f.className = f.className.replace(/dragged/, "");
    f = null
  }
  function n(q, p) {
    f.style.position = "absolute";
    f.style.left = k.x + q + "px";
    f.style.top = k.y + p + "px";
    f._x = k.x + q;
    f._y = k.y + p
  }
  function g() {
    f.style.left = "-2323px";
    f.style.top = "-2323px"
  }
  function j(p) {
    var q = $WH.ac(p);
    return {
      x1: q[0],
      x2: q[0] + parseInt(p.offsetWidth),
      y1: q[1],
      y2: q[1] + parseInt(p.offsetHeight)
    }
  }
  this.init = function (t, s) {
    t.onmousedown = m;
    var q = t.getElementsByTagName("a");
    for (var r = 0, p = q.length; r < p; ++r) {
      $WH.ns(q[r])
    }
    if (!t._targets) {
      t._targets = []
    }
    if (!t._container) {
      t._container = document.body
    }
    if (s != null) {
      if (s.targets) {
        for (var r = 0, p = s.targets.length; r < p; ++r) {
          t._targets.push($WH.ge(s.targets[r]))
        }
      }
      if (s.container) {
        t._container = $WH.ge(s.container)
      }
      if (s.onClick) {
        t.onClick = s.onClick
      }
      if (s.onDrop) {
        t.onDrop = s.onDrop
      }
      if (s.onDrag) {
        t.onDrag = s.onDrag
      }
    }
  }
};
var Facebook = {
  getCurrentOpenGraphUrl: function () {
    return $("head meta[property='og:url']").attr("content")
  },
  createLikeButton: function (c, e) {
    if (!e) {
      e = {}
    }
    var b, f, g;
    if (e.simple) {
      f = 90;
      g = 21;
      b = "button_count"
    } else {
      f = 400;
      g = 23;
      b = "standard"
    }
    return $("<iframe/>", {
      src: "//www.facebook.com/plugins/like.php?href=" + $WH.urlencode(c) + "&locale=en_US&layout=" + b + "&show_faces=false&action=like&font=arial&colorscheme=dark&width=" + f + "&height=" + g,
      scrolling: "no",
      frameborder: "0",
      allowtransparency: "true",
      css: {
        border: "none",
        overflow: "hidden",
        width: f + "px",
        height: g + "px",
        display: "none"
      }
    }).on("load", function () {
      $(this).show()
    })
  }
};
var Gatherer = new
function () {
  var requested = {};
  this.fetchItems = function (itemIDs, options) {
    fetchData("items", itemIDs, options)
  };
  this.fetchSpells = function (spellIDs, options) {
    fetchData("spells", spellIDs, options)
  };

  function validateID(id) {
    return typeof id == "number" || (typeof id == "string" && !id.match(/[^0-9]/))
  }
  function prepareEntityArray(type, entityIDs, options) {
    if (!requested[type]) {
      requested[type] = {}
    }
    if (entityIDs instanceof Array) {
      var entityArray = [];
      for (var i = 0, entityID; entityID = entityIDs[i]; i++) {
        if (validateID(entityID)) {
          if (requested[type][entityID] && !options.forceRequest) {} else {
            requested[type][entityID] = true;
            entityArray.push(entityID)
          }
        }
      }
      return entityArray
    } else {
      if (validateID(entityIDs)) {
        if (requested[type][entityIDs] && !options.forceRequest) {
          return []
        } else {
          requested[type][entityIDs] = true;
          return [entityIDs]
        }
      } else {
        if (typeof console != "undefined" && typeof console.error == "function") {
          console.error("Gatherer requires an array of IDs or single ID!")
        }
        return []
      }
    }
  }
  function fetchData(type, entityIDs, options) {
    if (!options) {
      options = {}
    }
    var entityArray = prepareEntityArray(type, entityIDs, options);
    if (!entityArray.length) {
      switch (typeof options.onSuccess) {
      case "string":
        eval(options.onSuccess + "()");
        break;
      case "function":
        options.onSuccess();
        break
      }
      return
    }
    entityArray.sort();
    var url = "/gatherer?" + type + "=" + entityArray.join(",");
    if (typeof options.onSuccess == "string") {
      url += "&callback=" + options.onSuccess
    }
    var callback = typeof options.onSuccess == "function" ? options.onSuccess : null;
    $.getScript(url, callback)
  }
};
var g_localTime = new Date();
var g_blogimages = {};

function GetStars(b, k, q, o) {
  var l = 5;
  var c = b;
  if (q) {
    b = q
  }
  b = Math.round(b * 2) / 2;
  var p = Math.round(b);
  var m = $("<span>").addClass("stars").addClass("max-" + l).addClass("stars-" + p);
  if (!g_user.id) {
    k = false
  }
  if (k) {
    m.addClass("ratable")
  }
  if (q) {
    m.addClass("rated")
  }
  var j = "<span>";
  var n = "&#8203;";
  var g = b;
  for (var f = 1; f <= l; ++f) {
    if (g < 1 && g > 0) {
      j += '<b class="half">'
    } else {
      j += "<b>"
    }--g;
    j += '<i class="clickable">' + n + "</i>"
  }
  for (var f = 1; f <= l; ++f) {
    j += "</b>"
  }
  j += "</span>";
  m.append(j);
  if (k) {
    var e = 0;
    m.find("i.clickable").each(function () {
      var r = ++e;
      $(this).click(function () {
        VoteGuide(o, c, r)
      })
    })
  }
  if (q) {
    var h = $("<span>").addClass("clear").click(function () {
      VoteGuide(o, c, 0)
    });
    m.append(h)
  }
  if (b >= 0) {
    m.mouseover(function (r) {
      $WH.Tooltip.showAtCursor(r, "Rating:&nbsp;" + b + "&nbsp;/&nbsp;" + l, 0, 0, "q")
    }).mousemove(function (r) {
      $WH.Tooltip.cursorUpdate(r)
    }).mouseout(function () {
      $WH.Tooltip.hide()
    })
  }
  return m
}
function VoteGuide(guideId, oldRating, newRating) {
  $("#guiderating").html(GetStars(oldRating, true, newRating, guideId));
  $.ajax({
    cache: false,
    url: "/guide=vote",
    type: "POST",
    error: function () {
      $("#guiderating").html(GetStars(oldRating, true, 0, guideId));
      alert("Voting failed. Try again later.")
    },
    success: function (json) {
      var data = eval("(" + json + ")");
      $("#guiderating-value").text(data.rating);
      $("#guiderating-votes").text(GetN5(data.nvotes))
    },
    data: {
      id: guideId,
      rating: newRating
    }
  })
}
$WH.g_hsConstants = {
  card: {
    zamIdMin: 1000000,
    craftable: {
      NOT: 0,
      NORMAL: 1,
      GOLD: 2,
      BOTH: 3
    },
    craftableSets: {
      normal: [3, 11, 13, 15]
    },
    quality: {
      FREE: 0,
      COMMON: 1,
      RARE: 3,
      EPIC: 4,
      LEGENDARY: 5
    },
    set: {
      CORE: 2,
      EXPERT1: 3,
      REWARD: 4,
      MISSIONS: 5,
      PROMO: 11,
      NAXX: 12,
      GVG: 13,
      BRM: 14,
      TGT: 15,
      CRED: 16
    },
    setShorthands: {
      3: "classic",
      12: "naxx",
      13: "gvg",
      14: "brm",
      15: "tgt"
    },
    type: {
      HERO: 3,
      MINION: 4,
      SPELL: 5,
      WEAPON: 7,
      HEROPOWER: 10
    }
  },
  "class": {
    0: "neutral",
    1: "warrior",
    2: "paladin",
    3: "hunter",
    4: "rogue",
    5: "priest",
    6: "deathknight",
    7: "shaman",
    8: "mage",
    9: "warlock",
    10: "monk",
    11: "druid"
  },
  adventure: {
    mode: {
      NORMAL: 1,
      EXPERT: 2,
      HEROIC: 3,
      CLASSCHALLENGE: 4
    }
  },
  boss: {
    idToFilterId: {
      273: 1,
      300: 2,
      274: 3,
      301: 4,
      278: 5,
      302: 6,
      275: 7,
      303: 8,
      276: 9,
      304: 10,
      277: 11,
      305: 12,
      279: 13,
      306: 14,
      280: 15,
      307: 16,
      281: 17,
      308: 18,
      282: 19,
      309: 20,
      283: 21,
      310: 22,
      284: 23,
      311: 24,
      285: 25,
      312: 26,
      287: 27,
      313: 28,
      286: 29,
      314: 30,
      319: 31,
      320: 32,
      321: 33,
      337: 34,
      338: 35,
      339: 36,
      322: 37,
      323: 38,
      324: 39,
      340: 40,
      341: 41,
      343: 42,
      325: 43,
      326: 44,
      327: 45,
      344: 46,
      345: 47,
      361: 48,
      328: 49,
      329: 50,
      330: 51,
      331: 52,
      346: 53,
      347: 54,
      348: 55,
      349: 56,
      332: 57,
      333: 58,
      334: 59,
      335: 60,
      350: 61,
      351: 62,
      352: 63,
      362: 64
    }
  }
};
$WH.g_cardIsCollectible = function (c, e) {
  var b = e ? true : c.collectible;
  return b && c.type != $WH.g_hsConstants.card.type.HERO && c.type != $WH.g_hsConstants.card.type.HEROPOWER
};
$WH.g_cardIsCraftable = function (b) {
  switch (typeof b) {
  case "number":
  case "string":
    b = g_hearthstone_cards[b]
  }
  if (!b.hasOwnProperty("id")) {
    return null
  }
  if (!$WH.g_cardIsCollectible(b)) {
    return $WH.g_hsConstants.card.craftable.NOT
  }
  switch (b.set) {
  case 3:
  case 13:
  case 15:
    return $WH.g_hsConstants.card.craftable.BOTH;
  case 11:
    return $WH.g_hsConstants.card.craftable.NORMAL;
  case 12:
  case 14:
    return $WH.g_hsConstants.card.craftable.GOLD;
  default:
    return $WH.g_hsConstants.card.craftable.NOT
  }
};
$WH.g_getDustValue = function (c, h, g, b) {
  if (typeof g_hearthstone_dust != "object") {
    return "?"
  }
  var f = b ? "" : 0;
  switch ($WH.g_cardIsCraftable(c)) {
  case $WH.g_hsConstants.card.craftable.NOT:
    return f;
  case $WH.g_hsConstants.card.craftable.NORMAL:
    if (g) {
      return f
    }
    break;
  case $WH.g_hsConstants.card.craftable.GOLD:
    if (!g) {
      return f
    }
    break
  }
  if (!h || $WH.in_array(["craft", "disenchant"], h) == -1) {
    h = "craft"
  }
  var e = g ? 1 : 0;
  return g_hearthstone_dust[h][c.quality] ? g_hearthstone_dust[h][c.quality][e] : f
};
$WH.g_createHearthstoneCardIcon = function (b, g, h) {
  var f = $WH.ce("span");
  f.className = "stat ";
  if (g == h) {
    g = "cost"
  }
  switch (g) {
  case "attack":
    if (b.type != $WH.g_hsConstants.card.type.SPELL) {
      f.innerHTML = b.attack || 0;
      if (b.type == $WH.g_hsConstants.card.type.WEAPON) {
        f.className += "damage"
      } else {
        f.className += "attack"
      }
      break
    }
  case "health":
    if (b.type != $WH.g_hsConstants.card.type.SPELL) {
      if (b.type == $WH.g_hsConstants.card.type.WEAPON) {
        f.innerHTML = b.durability || 0;
        f.className += "durability"
      } else {
        f.innerHTML = b.health || 0;
        f.className += "health"
      }
      break
    }
  case "dust":
    if (g == "dust") {
      var e = $WH.g_getDustValue(b, "craft", false, true);
      if (e) {
        f.innerHTML = e;
        f.className += " dust";
        switch (("" + e).length) {
        case 2:
        case 3:
          f.className += " small-text";
          break;
        case 4:
          f.className += " tiny-text";
          break
        }
        break
      }
    }
  case "type":
    for (var c in $WH.g_hsConstants.card.type) {
      if ($WH.g_hsConstants.card.type.hasOwnProperty(c) && b.type == $WH.g_hsConstants.card.type[c]) {
        f.className += c.toLowerCase();
        break
      }
    }
    break;
  default:
    f.innerHTML = b.cost || 0;
    f.className += "cost"
  }
  return f
};
$WH.g_getHearthstoneSetIcon = function (c, f, e) {
  if (typeof e != "object") {
    e = {}
  }
  if (typeof f != "string") {
    return
  }
  var h = $WH.g_getHearthstoneSetIconUrl(c, f);
  if (!h) {
    return
  }
  var b = {
    className: "icon-hsset-" + f,
    style: {
      background: "url(" + h + ")"
    }
  };
  if (e.textSpacing) {
    b.className += " text-spacing"
  }
  if (!e.noTitle && g_hearthstone_cardsets[c]) {
    b.title = $WH.sprintf(LANG.cardset_format, g_hearthstone_cardsets[c])
  }
  var g = $WH.ce("span", b);
  if (e.asString) {
    var j = $WH.ce("div");
    $WH.ae(j, g);
    return j.innerHTML
  }
  return g
};
$WH.g_getHearthstoneSetIconUrl = function (b, c) {
  switch (c) {
  case "tiny":
    c = 14;
    break;
  case "small":
    c = 24;
    break;
  case "medium":
    c = 44;
    break;
  case "large":
    c = 60;
    break
  }
  if (isNaN(c)) {
    return
  }
  if (!$WH.g_hsConstants.card.setShorthands[b]) {
    return
  }
  return g_staticUrl + "/images/hearthhead/icons/sets/" + $WH.g_hsConstants.card.setShorthands[b] + "/" + c + ".png"
};
$WH.g_createCardCollapsed = function (f, o) {
  if ($WH.in_array(["string", "number"], typeof f) != -1 && typeof g_hearthstone_cards == "object") {
    f = g_hearthstone_cards[f]
  }
  if (typeof f != "object") {
    return
  }
  if (!o) {
    o = {}
  }
  var p = $WH.ce("a");
  p.className = "collapsed-card q" + f.quality;
  p.href = "/card=" + f.id;
  p.setAttribute("data-id", f.id);
  p.setAttribute("data-whattach", "true");
  p.setAttribute("data-count", o.count);
  if (o.newTab) {
    p.target = "_blank"
  }
  var e = $WH.ce("span");
  e.className = "base";
  $WH.ae(p, e);
  var b = $WH.ce("span");
  b.className = "name";
  b.innerHTML = f["name_" + Locale.getName()] || f.name || LANG.unknown;
  $WH.ae(e, b);
  var g = $WH.g_getHearthstoneSetIcon(f.set, "tiny", {
    textSpacing: true
  });
  if (!g) {
    g = $WH.ce("span", {
      className: "icon-hsset-tiny text-spacing"
    })
  }
  $WH.aef(b, g);
  var m = $WH.ce("span");
  m.className = "bg";
  m.style.backgroundImage = "url(" + g_staticUrl + "/images/hearthstone/cards/" + Locale.getName() + "/mediumj/" + f.image + ".jpg" + (typeof g_hearthstone_build != "undefined" ? "?" + g_hearthstone_build : "") + ")";
  $WH.ae(m, $WH.ce("div"));
  $WH.ae(e, m);
  if (o.count > 1) {
    p.className += " count-gt-1"
  }
  if (o.count > 9) {
    p.className += " count-gt-9"
  }
  if (o.count > 19) {
    p.className += " count-gt-19"
  }
  var n = $WH.ce("span");
  n.className = "count";
  n.innerHTML = o.count;
  $WH.ae(e, n);
  var l = $WH.g_createHearthstoneCardIcon(f, o.leftIcon);
  $WH.ae(e, l);
  if (o.extraIcons && !$(l).hasClass("cost")) {
    o.extraIcons.unshift("cost")
  }
  var k = $WH.ce("span");
  k.className = "shadow-overlay";
  $WH.ae(e, k);
  var q = $WH.ce("span");
  q.className = "cover";
  $WH.ae(p, q);
  if (o.extraIcons) {
    for (var j = 0, h; h = o.extraIcons[j]; j++) {
      var c = $WH.g_createHearthstoneCardIcon(f, h, o.leftIcon);
      c.className += " extra-icon icon-" + (j + 1);
      $WH.ae(p, c)
    }
    p.className += " extra-icons-" + j
  }
  return p
};
$WH.g_getBossesFromWing = function (e, f) {
  var b = {};
  for (var c in g_hearthstone_bosses) {
    if (!g_hearthstone_bosses.hasOwnProperty(c)) {
      continue
    }
    if (g_hearthstone_bosses[c].wing == e) {
      if (typeof f != "undefined" && g_hearthstone_bosses[c].mode != f) {
        continue
      }
      b[g_hearthstone_bosses[c].id] = $.extend({}, g_hearthstone_bosses[c])
    }
  }
  return b
};
var Icon = {
  sizes: ["small", "medium", "large", "blizzard"],
  sizes2: [18, 36, 56, 64],
  premiumOffsets: [
    [-56, -36],
    [-56, 0],
    [0, 0],
    [0, 0]
  ],
  premiumBorderClasses: ["-premium", "-gold", "", "-premiumred", "-red", ""],
  STANDARD_BORDER: 2,
  privilegeBorderClasses: {
    uncommon: "-q2",
    rare: "-q3",
    epic: "-q4",
    legendary: "-q5"
  },
  create: function (e, q, l, c, h, p, b, o) {
    var k = $WH.ce("div"),
        f = $WH.ce("ins"),
        j = $WH.ce("del");
    if (q == null) {
      q = 1
    }
    k.className = "icon" + Icon.sizes[q];
    $WH.ae(k, f);
    if (!b) {
      $WH.ae(k, j)
    }
    Icon.setTexture(k, q, e);
    if (c) {
      var m = $WH.ce("a");
      m.href = c;
      if (c.indexOf("wowhead.com") == -1 && c.substr(0, 5) == "http:") {
        m.target = "_blank"
      }
      $WH.ae(k, m)
    } else {
      if (e) {
        var n = k.firstChild.style;
        var g = (n.backgroundImage.indexOf("/avatars/") != -1);
        if (!g) {
          k.onclick = Icon.onClick;
          var m = $WH.ce("a");
          m.href = "javascript:;";
          $WH.ae(k, m)
        }
      }
    }
    if (o && typeof m != "undefined") {
      m.rel = o
    }
    Icon.setNumQty(k, h, p);
    return k
  },
  createUser: function (g, j, f, e, c, k, b) {
    if (g == 2) {
      j = g_staticUrl + "/uploads/avatars/" + j + ".jpg"
    }
    var h = Icon.create(j, f, null, e, null, null, k);
    if (c != Icon.STANDARD_BORDER) {
      if (Icon.premiumBorderClasses[c]) {
        h.className += " " + h.className + Icon.premiumBorderClasses[c]
      }
    } else {
      if (b && Icon.privilegeBorderClasses.hasOwnProperty(b)) {
        h.className += " " + h.className + Icon.privilegeBorderClasses[b]
      }
    }
    if (g == 2) {
      Icon.moveTexture(h, f, Icon.premiumOffsets[f][0], Icon.premiumOffsets[f][1], true)
    }
    return h
  },
  getPrivilegeBorder: function (c) {
    var b = false;
    if (c >= 5000) {
      b = "uncommon"
    }
    if (c >= 10000) {
      b = "rare"
    }
    if (c >= 15000) {
      b = "epic"
    }
    if (c >= 25000) {
      b = "legendary"
    }
    return b
  },
  setTexture: function (f, e, c) {
    if (!c) {
      return
    }
    var b = f.firstChild.style;
    if (c.indexOf("/") != -1) {
      b.backgroundImage = "url(" + c + ")"
    } else {
      b.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/" + Icon.sizes[e] + "/" + c.toLowerCase() + ".jpg)"
    }
    Icon.moveTexture(f, e, 0, 0)
  },
  moveTexture: function (g, e, b, h, f) {
    var c = g.firstChild.style;
    if (b || h) {
      if (f) {
        c.backgroundPosition = b + "px " + h + "px"
      } else {
        c.backgroundPosition = (-b * Icon.sizes2[e]) + "px " + (-h * Icon.sizes2[e]) + "px"
      }
    } else {
      if (c.backgroundPosition) {
        c.backgroundPosition = ""
      }
    }
  },
  setNumQty: function (g, e, h) {
    var c = $WH.gE(g, "span");
    for (var f = 0, b = c.length; f < b; ++f) {
      if (c[f]) {
        $WH.de(c[f])
      }
    }
    if (e != null && ((e > 1 && e < 2147483647) || (e.length && e != "0" && e != "1"))) {
      c = g_createGlow(e, (($WH.isset("g_thottbot") && g_thottbot) ? "w" : "q1"));
      c.style.right = "0";
      c.style.bottom = "0";
      c.style.position = "absolute";
      $WH.ae(g, c)
    }
    if (h != null && h > 0) {
      c = g_createGlow("(" + h + ")", (($WH.isset("g_thottbot") && g_thottbot) ? "w" : "q"));
      c.style.left = "0";
      c.style.top = "0";
      c.style.position = "absolute";
      $WH.ae(g, c)
    }
  },
  getLink: function (b) {
    return $WH.gE(b, "a")[0]
  },
  showIconName: function (b) {
    if (b.firstChild) {
      var e = b.firstChild.style;
      if (e.backgroundImage.length && (e.backgroundImage.indexOf(g_staticUrl) >= 4 || g_staticUrl == "")) {
        var f = e.backgroundImage.lastIndexOf("/"),
            c = e.backgroundImage.indexOf(".jpg");
        if (f != -1 && c != -1) {
          Icon.displayIcon(e.backgroundImage.substring(f + 1, c))
        }
      }
    }
  },
  onClick: function () {
    Icon.showIconName(this)
  },
  displayIcon: function (c) {
    if (!Dialog.templates.icondisplay) {
      var b = 392;
      switch (Locale.getId()) {
      case LOCALE_ESES:
        b = 408;
        break;
      case LOCALE_RURU:
        b = 412;
        break
      }
      Dialog.templates.icondisplay = {
        title: LANG.icon,
        width: b,
        buttons: [
          ["arrow", LANG.original],
          ["x", LANG.close]
        ],
        fields: [{
          id: "icon",
          label: LANG.dialog_imagename,
          required: 1,
          type: "text",
          labelAlign: "left",
          compute: function (g, f, e, k) {
            k.className = "icon-dialog-content";
            var j = $WH.ce("div");
            var h = this.iconDiv = $WH.ce("div");
            h.update = function () {
              setTimeout(function () {
                g_safeSelect(g)
              }, 10);
              $WH.ee(h);
              $WH.ae(h, Icon.create(g.value, 2))
            };
            $WH.ae(h, Icon.create(f, 2));
            $WH.ae(j, h);
            $WH.ae(j, g);
            $WH.ae(k, j)
          }
        },
        {
          id: "location",
          label: " ",
          required: 1,
          type: "caption",
          compute: function (j, h, f, e, g) {
            $WH.ee(e);
            e.className = "icon-dialog-caption";
            var l = $WH.ce("div");
            var k = LANG.dialog_seeallusingicon;
            k = k.replace("$1", '<a href="/items?filter=cr=142;crs=0;crv=' + this.data.icon + '">' + LANG.types[3][3] + "</a>");
            k = k.replace("$2", '<a href="/spells?filter=cr=15;crs=0;crv=' + this.data.icon + '">' + LANG.types[6][3] + "</a>");
            k = k.replace("$3", '<a href="/achievements?filter=cr=10;crs=0;crv=' + this.data.icon + '">' + LANG.types[10][3] + "</a>");
            l.innerHTML = k;
            $WH.ae(e, l)
          }
        }],
        onInit: function (e) {
          this.updateIcon = this.template.updateIcon.bind(this, e)
        },
        onShow: function (e) {
          this.updateIcon();
          if (location.hash && location.hash.indexOf("#icon") == -1) {
            this.oldHash = location.hash
          } else {
            this.oldHash = ""
          }
          var f = "#icon";
          var g = ($WH.isset("g_pageInfo") && g_pageInfo.type && $WH.in_array([3, 6, 10], g_pageInfo.type) == -1);
          if (!g) {
            f += ":" + this.data.icon
          }
          location.hash = f
        },
        onHide: function (e) {
          if (this.oldHash) {
            $WH.g_setHash(this.oldHash)
          } else {
            $WH.g_clearHash()
          }
        },
        updateIcon: function (e) {
          this.iconDiv.update()
        },
        onSubmit: function (h, g, e, f) {
          if (e == "arrow") {
            var j = window.open(g_staticUrl + "/images/wow/icons/large/" + g.icon.toLowerCase() + ".jpg", "_blank");
            j.focus();
            return false
          }
          return true
        }
      }
    }
    if (!Icon.icDialog) {
      Icon.icDialog = new Dialog()
    }
    Icon.icDialog.show("icondisplay", {
      data: {
        icon: c
      }
    })
  },
  checkPound: function () {
    if (location.hash && location.hash.indexOf("#icon") == 0) {
      var c = location.hash.split(":");
      var b = false;
      if (c.length == 2) {
        b = c[1]
      } else {
        if (c.length == 1 && $WH.isset("g_pageInfo")) {
          switch (g_pageInfo.type) {
          case 3:
            b = g_items[g_pageInfo.typeId].icon.toLowerCase();
            break;
          case 6:
            b = g_spells[g_pageInfo.typeId].icon.toLowerCase();
            break;
          case 10:
            b = g_achievements[g_pageInfo.typeId].icon.toLowerCase();
            break
          }
        }
      }
      if (b) {
        Icon.displayIcon(b)
      }
    }
  }
};
$(document).ready(Icon.checkPound);
var Lightbox = new
function () {
  var g, p, q, l = {},
      e = {},
      m, j;

  function r() {
    $WH.aE(g, "click", h);
    $WH.aE(q, "click", f);
    $WH.aE(document, "keydown", k);
    $WH.aE(window, "resize", b)
  }
  function o() {
    $WH.dE(g, "click", h);
    $WH.dE(q, "click", f);
    $WH.dE(document, "keydown", k);
    $WH.dE(window, "resize", b)
  }
  function c() {
    if (m) {
      return
    }
    m = 1;
    var s = document.body;
    g = $WH.ce("div");
    g.className = "lightbox-overlay";
    p = $WH.ce("div");
    p.className = "lightbox-outer";
    q = $WH.ce("div");
    q.className = "lightbox-inner";
    g.style.display = p.style.display = "none";
    $WH.ae(s, g);
    $WH.ae(p, q);
    $WH.ae(s, p)
  }
  function k(s) {
    s = $WH.$E(s);
    switch (s.keyCode) {
    case 27:
      h();
      break
    }
  }
  function b(s) {
    if (s != 1234) {
      if (e.onResize) {
        e.onResize()
      }
    }
    g.style.height = document.body.offsetHeight + "px"
  }
  function f(s) {
    if (s.target && s.target.className == "lightbox-inner") {
      h()
    }
  }
  function h() {
    if (!m) {
      return
    }
    o();
    if (e.onHide) {
      e.onHide()
    }
    g.style.display = p.style.display = "none";
    WAS.restoreHidden();
    PoundChecker.resume();
    g_preventScroll(false)
  }
  function n() {
    g.style.display = p.style.display = l[j].style.display = "";
    Lightbox.setSize(q.offsetWidth, q.offsetHeight, 1)
  }
  this.setSize = function (s, t, u) {
    q.style.visibility = "hidden";
    if (!u) {
      q.style.width = s + "px";
      if (t) {
        q.style.height = t + "px"
      }
    }
    q.style.left = -parseInt(s / 2) + "px";
    if (t) {
      q.style.top = -parseInt(t / 2) + "px"
    }
    q.style.visibility = "visible"
  };
  this.show = function (w, v, t) {
    e = v || {};
    Menu.hide(true);
    $WH.Tooltip.hide();
    WAS.hideAll();
    PoundChecker.pause();
    c();
    r();
    if (j != w && l[j] != null) {
      l[j].style.display = "none"
    }
    j = w;
    var u = 0,
        s;
    if (l[w] == null) {
      u = 1;
      s = $WH.ce("div", {
        className: "lightbox-frame"
      });
      $WH.ae(q, s);
      l[w] = s
    } else {
      s = l[w];
      s.className = "lightbox-frame" + (s.className ? " " + s.className.replace(/lightbox-frame */, "") : "")
    }
    if (e.onShow) {
      e.onShow(s, u, t)
    }
    b(1234);
    n();
    g_preventScroll(true, ".lightbox-content")
  };
  this.reveal = function () {
    n()
  };
  this.hide = function () {
    h()
  };
  this.isVisible = function () {
    return (g && g.style.display != "none")
  }
};

function Line(g, o, c, m, l) {
  var h = Math.min(g, c),
      r = Math.max(g, c),
      n = Math.min(o, m),
      k = Math.max(o, m),
      f = (r - h),
      p = (k - n),
      j = Math.sqrt(Math.pow(f, 2) + Math.pow(p, 2)),
      s = Math.atan2(p, f),
      b = Math.sin(s),
      e = Math.cos(s);
  var q = $('<span class="line" />').css({
    top: n.toFixed(2) + "px",
    left: h.toFixed(2) + "px",
    width: f.toFixed(2) + "px",
    height: p.toFixed(2) + "px"
  }).append($("<var />").css({
    width: j.toFixed(2) + "px",
    "-o-transform": "rotate(" + s + "rad)",
    "-moz-transform": "rotate(" + s + "rad)",
    "-webkit-transform": "rotate(" + s + "rad)",
    filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=" + e + ", M12=" + (-1 * b) + ", M21=" + b + ", M22=" + e + ")"
  }));
  if (!(g == h && o == n) && !(c == h && m == n)) {
    q.addClass("flipped")
  }
  if (l != null) {
    q.addClass("line-" + l)
  }
  return q[0]
}
var Links = new
function () {
  var c = null;
  var f = null;
  var e = {
    item: 1
  };
  var b = {
    222: "hsachievement",
    223: "hsquest"
  };
  var g = {
    220: "http://www.hearthhead.com/",
    221: "http://www.hearthhead.com/",
    222: "http://www.hearthhead.com/",
    223: "http://www.hearthhead.com/",
    224: "http://www.hearthhead.com/",
    225: "http://www.hearthhead.com/",
    226: "http://www.hearthhead.com/"
  };
  this.onShow = function () {
    if (location.hash && location.hash != "#links") {
      f = location.hash
    }
    location.replace("#links")
  };
  this.onHide = function () {
    if (f && (f.indexOf("screenshots:") == -1 || f.indexOf("videos:") == -1)) {
      $WH.g_setHash(f)
    } else {
      $WH.g_clearHash()
    }
  };
  this.show = function (j) {
    if (!j || !j.type || !j.typeId) {
      return
    }
    var k = g_types[j.type];
    if (!c) {
      this.init()
    }
    if (e[k] && Dialog.templates.links.fields[1].id != "armoryurl") {
      Dialog.templates.links.fields.splice(1, 0, {
        id: "armoryurl",
        type: "text",
        label: "Armory URL",
        size: 40
      })
    }
    var l = "";
    if (j.linkColor && j.linkId && j.linkName) {
      l = g_getIngameLink(j.linkColor, j.linkId, j.linkName)
    }
    if (j.sound) {
      l = "/script PlaySoundKitID(" + j.sound + ")"
    }
    if (j.dressup && j.dressup.length) {
      l = '/run local function f(i,b)DressUpItemLink("item:"..i.."::::::::::::9:"..b);end;';
      for (var h = 0, n; n = j.dressup[h]; h++) {
        while (n.length < 2) {
          n.push(0)
        }
        l += "f(" + n.shift() + "," + (n.length > 1 ? ('"' + n.join(":") + '"') : n.shift()) + ");"
      }
    }
    if (l) {
      if (Dialog.templates.links.fields[Dialog.templates.links.fields.length - 2].id != "ingamelink") {
        Dialog.templates.links.fields.splice(Dialog.templates.links.fields.length - 1, 0, {
          id: "ingamelink",
          type: "text",
          label: "Ingame Link",
          size: 40
        })
      }
    }
    var m = {
      wowheadurl: (g[j.type] || "http://www.wowhead.com/") + k + "=" + j.typeId + (j.bonuses ? ("&bonus=" + j.bonuses.join(":")) : ""),
      armoryurl: "http://us.battle.net/wow/en/" + k + "/" + j.typeId,
      ingamelink: l,
      markuptag: "[" + (b[j.type] || k) + "=" + j.typeId + (j.bonuses ? (" bonus=" + j.bonuses.join(":")) : "") + "]"
    };
    c.show("links", {
      data: m,
      onShow: this.onShow,
      onHide: this.onHide,
      onSubmit: function () {
        return false
      }
    })
  };
  this.checkPound = function () {
    if (location.hash && location.hash == "#links") {
      $("#open-links-button").click()
    }
  };
  this.init = function () {
    c = new Dialog();
    Dialog.templates.links = {
      title: "Links",
      buttons: [
        ["x", LANG.close]
      ],
      fields: [{
        id: "wowheadurl",
        type: "text",
        label: "Wowhead URL",
        size: 40
      },
      {
        id: "markuptag",
        type: "text",
        label: "Markup Tag",
        size: 40
      }],
      onInit: function (h) {},
      onShow: function (h) {
        setTimeout(function () {
          g_safeSelect(h.ingamelink)
        }, 50);
        setTimeout(Lightbox.reveal, 100)
      }
    }
  };
  $(document).ready(this.checkPound)
};

function li_addListMenu(f) {
  var e = $WH.ce("span");
  e.className = "zul-bar-user-item-list-wrapper";
  if (!f) {
    e.style.position = "relative";
    e.style.opacity = 0.1;
    e.style.right = "-400px"
  }
  var b = $WH.ce("a");
  b.href = "javascript:;";
  b.id = "zul-bar-user-item-lists";
  li_initListMenu(b);
  var h = $WH.ce("span");
  h.className = "zul-bar-user-item-list-text";
  h.innerHTML = LANG.li_myprofiles;
  var c = $WH.ce("span");
  c.className = "zul-bar-user-item-list-number";
  c.innerHTML = g_user.templists.length;
  var g = $WH.ce("span");
  g.className = "fa fa-chevron-down";
  $WH.ae(b, h);
  $WH.ae(b, c);
  $WH.ae(b, g);
  $WH.ae(e, b);
  $("#zul-bar-user").prepend(e);
  if (!f) {
    $(e).animate({
      opacity: 1,
      right: 0
    }, {
      duration: 1000,
      easing: "easeOutBounce",
      complete: function () {
        if ($(document.body).hasClass("home")) {
          var j = $WH.ce("span");
          j.className = "zul-bar-user-item-list-warning";
          j.innerHTML = '<a href="/account=signin">' + LANG.li_logintosave + "</a>";
          j.style.display = "none";
          $WH.aef(this, j);
          $(j).fadeIn()
        }
      }
    })
  }
}
$(document).ready(function () {
  if (g_user.templists && g_user.templists.length) {
    setTimeout(li_addListMenu, 1000)
  }
});

function li_initListMenu(b) {
  var c = [];
  g_user.templists.sort(function (f, e) {
    return $WH.strcmp(f.name, e.name)
  });
  $.each(g_user.templists, function (e, f) {
    c.push(li_generateListMenuItem(f))
  });
  $(b).addClass("hassubmenu");
  Menu.add(b, c)
}
function li_generateListUrl(b) {
  return g_getRelativeHostPrefix("wowhead.com") + "/list=" + b.id + "/" + b.url
}
function li_generateListMenuItem(e, c) {
  var b = {
    className: (e.mode != 1 || (e.armory && !e.errcode) ? "listmanager-mode" + e.mode : "q10")
  };
  if (!c && e.mode == 1 && e.pinned) {
    b.fontIcon = "thumb-tack"
  }
  return [e.id, e.name, li_generateListUrl(e), null, b]
}
function li_createList(g, c, h, b, f) {
  g_AssertSession();
  if (g == 1) {
    if (!h || !b || !f) {
      if (c !== null) {
        alert(LANG.li_filloutdetails)
      }
      if (c) {
        return
      }
      var e = new Dialog();
      e.show("fetchlist", {
        data: {
          region: h,
          realm: b,
          character: f
        },
        onSubmit: function (j) {
          li_createList(1, false, j.region, j.realm, j.character);
          return false
        }
      });
      return
    }
    location.href = "/list/" + g_urlize(h + "-" + b + "-" + f, true)
  } else {
    new Ajax("/list&new", {
      method: "POST",
      params: "t=" + new Date().getTime(),
      onSuccess: function (l, j) {
        var k = li_onSaveTab(l, j);
        if (k) {
          location.href = li_generateListUrl(k)
        }
      }
    })
  }
}
function li_addToSaved(z, o, B, s) {
  z = z || window.event;
  var p;
  for (var w in g_types) {
    if (g_types[w] == o) {
      p = w;
      break
    }
  }
  if (!p || !B) {
    return
  }
  if (!isNaN(B)) {
    var r = (o == "currency" ? "g_gatheredcurrencies" : "g_" + o + "s");
    B = [$.extend({}, window[r][B])];
    if (o == "item") {
      var c = $WH.ge("tt" + B[0].id);
      if (c && c._bonusesBtn && c._bonusesBtn.selectedBonus) {
        var l = c._bonusesBtn.selectedBonus.split(":");
        var b = l.indexOf("u");
        if (b != -1) {
          l.splice(b, 1)
        }
        if (l && l.length > 0) {
          B[0].bonuses = l
        }
      }
    }
  }
  var m = {},
      q, g = {
      "-1": function (k, D) {
        var j = [];
        if (D.bonuses && D.bonuses.length) {
          for (var e in D.bonuses) {
            if (D.bonuses[e]) {
              j.push(D.bonuses[e])
            }
          }
        }
        return (k == "item" && (D.classs == 4 || D.classs == 2) && D.id) ? ([D.id]).concat(j) : false
      },
      "-2": function (e, j) {
        return (e == "spell" && j.cat == -5 ? j.id : false)
      },
      "-3": function (e, j) {
        return (e == "npc" && !j.untameable && j.npc && j.npc.type == 12 ? j.npc.id : (e == "npc" && j.type == 12 ? j.id : false))
      }
      };
  for (var u in g_list_tabs) {
    m[u] = [];
    for (var w = 0; w < B.length; ++w) {
      if (p == u) {
        m[u].push(B[w].id)
      } else {
        if (g[u] && (q = g[u](o, B[w]))) {
          m[u].push(q)
        }
      }
    }
  }
  for (var u in m) {
    if (m[u].length != B.length) {
      delete m[u]
    }
  }
  var A = function (J, e, H, F, D, j) {
    var k;
    var E = function (O, L) {
      var M = li_onSaveTab(O, L);
      if (M) {
        var N = $("#announcement-0").empty().offset().top;
        if ($(document).scrollTop() > N) {
          $("body").animate({
            scrollTop: N
          }, 1000)
        }
        j = j ? '"' + j + '"' : g_list_tabs[J];
        new Announcement({
          parent: "announcement-0",
          text: $WH.sprintf('[span class="listmanager-announcement"][span class="icon-star"][/span]' + $WH.sprintf(LANG.li_savedtotab, j) + ': [url="/list=$1/$2"]' + D + "[/url].[/span]", M.id, M.url),
          style: "",
          nocookie: 1,
          id: "list-" + M.id
        })
      }
    };
    var I = "";
    if (J == "-1") {
      for (var K = 0; K < e.length; ++K) {
        I += ((I == "") ? "" : ",") + e[K].join(":")
      }
    } else {
      I = e.join(",")
    }
    if (H == null) {
      var G = new Dialog();
      G.show("createlist", {
        data: {
          name: D,
          type: J,
          ids: I
        },
        onSubmit: function (M) {
          var L = "/list&new&type=" + M.type + "&ids=" + I;
          new Ajax(L, {
            method: "POST",
            params: "name=" + $WH.urlencode(M.name) + "&t=" + new Date().getTime(),
            onSuccess: E
          })
        }
      });
      return
    } else {
      if (F == null) {
        k = "/list&new-tab=" + H + "&type=" + J + "&ids=" + I
      } else {
        k = "/list=" + H + "&append-tab=" + F + "&ids=" + I
      }
    }
    new Ajax(k, {
      method: "POST",
      params: "t=" + new Date().getTime(),
      onSuccess: E
    })
  };
  var f = [
    [, LANG.li_choosealist]
  ];
  for (var w in g_user.lists) {
    var y = g_user.lists[w];
    if (y.mode == 1) {
      continue
    }
    var h = [];
    for (var u in m) {
      for (var t = 0; t < y.lists.length; ++t) {
        var n = y.lists[t];
        if (n.type != u) {
          continue
        }
        if (!h.length) {
          h.push([, LANG.li_addtoexistingtab])
        }
        h.push([n.id, n.name, A.bind(null, u, m[u], y.id, n.id, y.name, n.name)])
      }
    }
    h.push([, LANG.li_createnewtab]);
    for (var u in m) {
      h.push([-u, g_list_tabs[u], A.bind(null, u, m[u], y.id, null, y.name, null)])
    }
    f.push([y.id, y.name, , h])
  }
  if (g_user.canCreateList) {
    var C = LANG.li_newlist,
        v = 1;
    for (var w in g_user.lists) {
      if (g_user.lists[w].name == C || g_user.lists[w].name == (C + " (" + v + ")")) {
        v++
      }
    }
    if (v > 1) {
      C += " (" + v + ")"
    }
    var h = [];
    h.push([, LANG.li_chooseatab]);
    for (var u in m) {
      h.push([-u, g_list_tabs[u], A.bind(null, u, m[u], null, null, C, null)])
    }
    f.push([-1, LANG.li_createnewlist + "...", , h,
    {
      fontIcon: "plus"
    }])
  }
  if (g_user.id < 1) {
    f = [
      [0, LANG.li_addlogin, function () {
        LoginDialog.show()
      }]
    ]
  }
  if (s) {
    Menu.show(f, s)
  } else {
    Menu.showAtCursor(f, $WH.$E(z))
  }
}
function li_onSaveTab(xhr, opt) {
  var text = xhr.responseText;
  if (text.charAt(0) != "{" || text.charAt(text.length - 1) != "}") {
    return
  }
  var list = (JSON && JSON.parse(text)) || eval(text);
  if (!list || !list.id) {
    return
  }
  return list
}
function li_getCurrentUserList(c) {
  if (g_user.lists && g_user.lists.length) {
    for (var b in g_user.lists) {
      if (g_user.lists[b].id == c) {
        return g_user.lists[b]
      }
    }
  }
  return null
}
function li_getListStatus(id, onSuccess) {
  new Ajax("/list&status=" + id + "&t=" + Math.random(), {
    method: "POST",
    onSuccess: function (xhr, opt) {
      var response = eval(xhr.response)[0];
      if (!response.id) {
        return
      }
      li_setButtonStatus($WH.ge("list-status"), response);
      if (response.refresh) {
        setTimeout(li_getListStatus, response.refresh, id, onSuccess);
        return
      }
      if (response.status == 3 && onSuccess) {
        onSuccess()
      }
    }
  })
}
function li_setButtonStatus(c, e) {
  var f = LANG["li_status" + e.status];
  var g = $("#list-delete");
  g.hide();
  if (e.errcode > 0) {
    f = LANG["li_code" + e.errcode] + " #" + e.errcode;
    g.show()
  }
  var h = "";
  if (e.status == 1 || e.status == 2) {
    h = " fa-spin";
    f += LANG.colon + $WH.sprintf(LANG.li_linenumber, $WH.number_format(e.position))
  }
  if (c) {
    var b = " btn-";
    switch (e.status) {
    case 1:
    case 2:
      b += "warning";
      break;
    case 3:
      b += "success";
      break;
    case 4:
      b += "danger";
      break;
    case 0:
    default:
      b += "primary"
    }
    c.className = c.className.replace(/ +btn-[^ ]+\b/, b).replace(/( fa-spin)?( +status-[^ ]+\b)?/, h + " status-" + e.status);
    c.innerHTML = f
  }
}
function li_updateRealmSelect(f, c) {
  $WH.ee(c);
  $WH.ae(c, $WH.ce("option"));
  if (!li_realms || !li_realms[f]) {
    return
  }
  for (var b = 0; b < li_realms[f].length; ++b) {
    var e = $WH.ce("option");
    $WH.st(e, li_realms[f][b]);
    $WH.ae(c, e)
  }
}
function li_appendSticky() {
  var l = $WH.ge("infobox-sticky-li");
  if (!l) {
    return
  }
  var h = g_pageInfo.type;
  var g = g_pageInfo.typeId;
  if (lv_lists.length) {
    var c = $("#infobox-lists");
    if (!c) {
      c = $("th", $(l).parents().prev("tr"))
    }
    c.append(" (" + lv_lists.length + ")").wrapInner($('<a href="#lists"></a>').click(function () {
      tabsRelated.focus(tabsRelated.getTabById("lists"));
      return false
    }))
  }
  var b = $WH.ce("div");
  b.style.width = "150px";
  b.style.whiteSpace = "normal";
  b.style.margin = "0 auto";
  var k = $WH.array_filter(lv_lists, function (m) {
    return m.user == g_user.name
  });
  if (k.length) {
    $WH.st(b, "You have added this to");
    $WH.ae(b, $WH.ce("br"));
    for (var e = 0; e < k.length; ++e) {
      if (e > 4) {
        $WH.ae(b, $WH.ct(" and " + (k.length - e) + " more."));
        break
      }
      var f = k[e];
      var j = $WH.ce("a");
      j.href = li_generateListUrl(f);
      j.className = (f.mode != 1 || (f.armory && !f.errcode) ? "listmanager-mode" + f.mode : "q10");
      $WH.st(j, k[e].name);
      if (e > 0) {
        $WH.ae(b, $WH.ct(e == k.length - 1 ? LANG.and : ", "))
      }
      $WH.ae(b, j)
    }
  } else {
    if (g_user.id > 0) {
      $WH.st(b, LANG.li_notaddedtolistyet)
    }
  }
  var j = $WH.ce("a");
  j.href = "/account=signin";
  if (g_user.canCreateList) {
    j.href = "javascript:;";
    j.onclick = (function (m) {
      li_addToSaved.call(this, m, g_types[h], g)
    }).bind(j)
  }
  $WH.st(j, LANG.li_addtolist);
  $WH.ae(l, b);
  $WH.ae(l, j);
  li_appendSticky = function () {}
}
Dialog.templates.createlist = {
  title: LANG.li_createnewlist,
  width: 400,
  buttons: [
    ["check", LANG.ok],
    ["x", LANG.cancel]
  ],
  fields: [{
    id: "name",
    label: LANG.name,
    required: 1,
    type: "text"
  }]
};
Dialog.templates.fetchlist = {
  title: LANG.li_lookupbattlenetprofile,
  width: 400,
  buttons: [
    ["check", LANG.ok],
    ["x", LANG.cancel]
  ],
  fields: [{
    id: "region",
    label: LANG.region,
    required: 1,
    type: "select",
    options: {
      US: "US",
      EU: "EU",
      KR: "KR",
      TW: "TW",
      CN: "CN"
    },
    compute: function (g, f, c, h, e, b) {
      g.id = "dialog-region";
      $(g).change(function () {
        li_updateRealmSelect($(this).val(), $("#dialog-realm").get(0))
      })
    }
  },
  {
    id: "realm",
    label: LANG.realm,
    required: 1,
    type: "select",
    options: [],
    compute: function (g, f, c, h, e, b) {
      g.id = "dialog-realm";
      li_updateRealmSelect($("#dialog-region").val(), g)
    }
  },
  {
    id: "character",
    label: LANG.li_character,
    required: 1,
    type: "text"
  }]
};
$WH.g_ajaxIshRequest("/data=realms");
var g_listviews = {};

function Listview(b) {
  $WH.cO(this, b);
  if (this.id) {
    var k = (this.tabs ? "tab-" : "lv-") + this.id;
    if (this.parent) {
      var v = $WH.ce("div");
      v.id = k;
      $WH.ae($WH.ge(this.parent), v);
      this.container = v
    } else {
      this.container = $WH.ge(k)
    }
    if (this.tabs) {
      this.container.style.display = "none"
    }
  } else {
    return
  }
  var w = $WH.g_getGets();
  if ((w.debug != null || g_user.debug) && g_user.roles & U_GROUP_MODERATOR) {
    this.debug = true
  }
  if (this.template && Listview.templates[this.template]) {
    this.template = Listview.templates[this.template]
  } else {
    return
  }
  g_listviews[this.id] = this;
  if (this.data == null) {
    this.data = []
  }
  if (this.poundable == null) {
    if (this.template.poundable != null) {
      this.poundable = this.template.poundable
    } else {
      this.poundable = true
    }
  }
  if (this.searchable == null) {
    if (this.template.searchable != null) {
      this.searchable = this.template.searchable
    } else {
      this.searchable = false
    }
  }
  if (this.filtrable == null) {
    if (this.template.filtrable != null) {
      this.filtrable = this.template.filtrable
    } else {
      this.filtrable = false
    }
  }
  if (this.sortable == null) {
    if (this.template.sortable != null) {
      this.sortable = this.template.sortable
    } else {
      this.sortable = true
    }
  }
  if (this.customPound == null) {
    if (this.template.customPound != null) {
      this.customPound = this.template.customPound
    } else {
      this.customPound = false
    }
  }
  if (this.data.length == 1) {
    this.filtrable = false;
    this.searchable = false
  }
  if (this.searchable && this.searchDelay == null) {
    if (this.template.searchDelay != null) {
      this.searchDelay = this.template.searchDelay
    } else {
      this.searchDelay = 333
    }
  }
  if (this.clickable == null) {
    if (this.template.clickable != null) {
      this.clickable = this.template.clickable
    } else {
      this.clickable = true
    }
  }
  if (this.hideBands == null) {
    this.hideBands = this.template.hideBands
  }
  if (this.hideNav == null) {
    this.hideNav = this.template.hideNav
  }
  if (this.hideHeader == null) {
    this.hideHeader = this.template.hideHeader
  }
  if (this.hideCount == null) {
    this.hideCount = this.template.hideCount
  }
  if (this.computeDataFunc == null && this.template.computeDataFunc != null) {
    this.computeDataFunc = this.template.computeDataFunc
  }
  if (this.createCbControls == null && this.template.createCbControls != null) {
    this.createCbControls = this.template.createCbControls
  }
  if (this.createTooltipToggle == null && this.template.createTooltipToggle != null) {
    this.createTooltipToggle = this.template.createTooltipToggle
  }
  if (this.template.onBeforeCreate != null) {
    if (this.onBeforeCreate == null) {
      this.onBeforeCreate = this.template.onBeforeCreate
    } else {
      this.onBeforeCreate = [this.template.onBeforeCreate, this.onBeforeCreate]
    }
  }
  if (this.onAfterCreate == null && this.template.onAfterCreate != null) {
    this.onAfterCreate = this.template.onAfterCreate
  }
  if (this.onNoData == null && this.template.onNoData != null) {
    this.onNoData = this.template.onNoData
  }
  if (this.createNote == null && this.template.createNote != null) {
    this.createNote = this.template.createNote
  }
  if (this.sortOptions == null && this.template.sortOptions != null) {
    this.sortOptions = this.template.sortOptions
  }
  if (this.customFilter == null && this.template.customFilter != null) {
    this.customFilter = this.template.customFilter
  }
  if (this.onSearchSubmit == null && this.template.onSearchSubmit != null) {
    this.onSearchSubmit = this.template.onSearchSubmit
  }
  if (this.getItemLink == null && this.template.getItemLink != null) {
    this.getItemLink = this.template.getItemLink
  }
  if (this.noRowClick == null && this.template.noRowClick != null) {
    this.noRowClick = this.template.noRowClick
  }
  if (this.forceBandTop == null && this.template.forceBandTop != null) {
    this.forceBandTop = this.template.forceBandTop
  }
  if (this.completionText == null && this.template.completionText != null) {
    this.completionText = this.template.completionText
  }
  if (this.completionText == null) {
    this.completionText = LANG.lvcompletion
  }
  if (this.clip == null && this.template.clip != null) {
    this.clip = this.template.clip
  }
  if (this.clip || this.template.compute || this.id == "topics" || this.id == "recipes") {
    this.debug = false
  }
  if (this.mode == null) {
    this.mode = this.template.mode
  }
  if (this.template.noStyle != null) {
    this.noStyle = this.template.noStyle
  }
  if (this.nItemsPerPage == null) {
    if (this.template.nItemsPerPage != null) {
      this.nItemsPerPage = this.template.nItemsPerPage
    } else {
      this.nItemsPerPage = 50
    }
  }
  this.nItemsPerPage |= 0;
  if (this.nItemsPerPage <= 0) {
    this.nItemsPerPage = 0
  }
  this.nFilters = 0;
  this.resetRowVisibility();
  if (this.mode == Listview.MODE_TILED) {
    if (this.nItemsPerRow == null) {
      var t = this.template.nItemsPerRow;
      this.nItemsPerRow = (t != null ? t : 4)
    }
    this.nItemsPerRow |= 0;
    if (this.nItemsPerRow <= 1) {
      this.nItemsPerRow = 1
    }
  } else {
    if (this.mode == Listview.MODE_CALENDAR) {
      this.dates = [];
      this.nItemsPerRow = 7;
      this.nItemsPerPage = 1;
      this.nDaysPerMonth = [];
      if (this.template.startOnMonth != null) {
        this.startOnMonth = this.template.startOnMonth
      } else {
        this.startOnMonth = new Date()
      }
      this.startOnMonth.setDate(1);
      this.startOnMonth.setHours(0, 0, 0, 0);
      if (this.nMonthsToDisplay == null) {
        if (this.template.nMonthsToDisplay != null) {
          this.nMonthsToDisplay = this.template.nMonthsToDisplay
        } else {
          this.nMonthsToDisplay = 1
        }
      }
      var l = this.startOnMonth.getFullYear(),
          o = this.startOnMonth.getMonth();
      for (var q = 0; q < this.nMonthsToDisplay; ++q) {
        var z = new Date(l, o + q, 32);
        this.nDaysPerMonth[q] = 32 - z.getDate();
        for (var r = 1; r <= this.nDaysPerMonth[q]; ++r) {
          this.dates.push({
            date: new Date(l, o + q, r)
          })
        }
      }
      if (this.template.rowOffset != null) {
        this.rowOffset = this.template.rowOffset
      }
    } else {
      this.nItemsPerRow = 1
    }
  }
  this.columns = [];
  for (var r = 0, s = this.template.columns.length; r < s; ++r) {
    var A = this.template.columns[r],
        g = {};
    $WH.cO(g, A);
    this.columns.push(g)
  }
  if (this.extraCols != null) {
    for (var r = 0, s = this.extraCols.length; r < s; ++r) {
      var e = null;
      var c = this.extraCols[r];
      if (c.after || c.before) {
        var h = $WH.in_array(this.columns, (c.after ? c.after : c.before), function (j) {
          return j.id
        });
        if (h != -1) {
          e = (c.after ? h + 1 : h)
        }
      }
      if (e == null) {
        e = this.columns.length
      }
      if (c.id == "debug-id") {
        this.columns.splice(0, 0, c)
      } else {
        this.columns.splice(e, 0, c)
      }
    }
  }
  this.visibility = [];
  var p = [],
      n = [];
  if (this.visibleCols != null) {
    $WH.array_walk(this.visibleCols, function (j) {
      p[j] = 1
    })
  }
  if (this.hiddenCols != null) {
    $WH.array_walk(this.hiddenCols, function (j) {
      n[j] = 1
    })
  }
  if ($.isArray(this.sortOptions)) {
    for (var r = 0, s = this.sortOptions.length; r < s; ++r) {
      var c = this.sortOptions[r];
      if (p[c.id] != null || (!c.hidden && n[c.id] == null)) {
        this.visibility.push(r)
      }
    }
  } else {
    for (var r = 0, s = this.columns.length; r < s; ++r) {
      var c = this.columns[r];
      if (p[c.id] != null || (!c.hidden && n[c.id] == null)) {
        this.visibility.push(r)
      }
    }
  }
  if (this.sort == null && this.template.sort) {
    this.sort = this.template.sort.slice(0)
  }
  if (this.sort != null) {
    var f = this.sort;
    this.sort = [];
    for (var r = 0, s = f.length; r < s; ++r) {
      var c = parseInt(f[r]);
      if (isNaN(c)) {
        var u = 0;
        if (f[r].charAt(0) == "-") {
          u = 1;
          f[r] = f[r].substring(1)
        }
        var h = $WH.in_array(this.columns, f[r], function (j) {
          return j.id
        });
        if (h != -1) {
          if (u) {
            this.sort.push(-(h + 1))
          } else {
            this.sort.push(h + 1)
          }
        }
      } else {
        this.sort.push(c)
      }
    }
  } else {
    this.sort = []
  }
  if (this.debug) {
    this.columns.splice(0, 0, {
      id: "debug-id",
      compute: function (j, m) {
        if (j.id) {
          $WH.ae(m, $WH.ct(j.id))
        }
      },
      getVisibleText: function (j) {
        if (j.id) {
          return j.id
        } else {
          return ""
        }
      },
      getValue: function (j) {
        if (j.id) {
          return j.id
        } else {
          return 0
        }
      },
      sortFunc: function (m, j, y) {
        if (m.id == null) {
          return -1
        } else {
          if (j.id == null) {
            return 1
          }
        }
        return $WH.strcmp(m.id, j.id)
      },
      name: "ID",
      width: "5%",
      tooltip: "ID"
    });
    this.visibility.splice(0, 0, -1);
    for (var r = 0, s = this.visibility.length; r < s; ++r) {
      this.visibility[r] = this.visibility[r] + 1
    }
    for (var r = 0, s = this.sort.length; r < s; ++r) {
      if (this.sort[r] < 0) {
        this.sort[r] = this.sort[r] - 1
      } else {
        this.sort[r] = this.sort[r] + 1
      }
    }
  }
  if (this.tabs) {
    this.tabIndex = this.tabs.add(this.getTabName(), $.extend({
      id: this.id,
      onLoad: this.initialize.bind(this)
    }, this.tabOpts));
    this.tabClick = Tabs.trackClick.bind(this.tabs, this.tabs.tabs[this.tabIndex])
  } else {
    this.initialize()
  }
}
Listview.MODE_DEFAULT = 0;
Listview.MODE_CHECKBOX = 1;
Listview.MODE_DIV = 2;
Listview.MODE_TILED = 3;
Listview.MODE_CALENDAR = 4;
Listview.prototype = {
  initialize: function () {
    if (this.data.length) {
      if (this.computeDataFunc != null) {
        for (var f = 0, b = this.data.length; f < b; ++f) {
          this.computeDataFunc(this.data[f])
        }
      }
    }
    if (this.tabs) {
      this.pounded = (this.tabs.poundedTab == this.tabIndex);
      if (this.pounded) {
        this.readPound()
      }
    } else {
      this.readPound()
    }
    this.applySort();
    var c;
    if (this.onBeforeCreate != null) {
      if (typeof this.onBeforeCreate == "function") {
        c = this.onBeforeCreate()
      } else {
        for (var f = 0; f < this.onBeforeCreate.length; ++f) {
          (this.onBeforeCreate[f].bind(this))()
        }
      }
    }
    this.noData = $WH.ce("div");
    this.noData.className = "listview-nodata text";
    if (this.mode == Listview.MODE_DIV) {
      this.mainContainer = this.mainDiv = $WH.ce("div");
      if (!this.noStyle) {
        this.mainContainer.className = "listview-mode-div"
      }
    } else {
      this.mainContainer = this.table = $WH.ce("table");
      this.thead = $WH.ce("thead");
      this.tbody = $WH.ce("tbody");
      if (this.clickable) {
        this.tbody.className = "clickable"
      }
      if (this.mode == Listview.MODE_TILED || this.mode == Listview.MODE_CALENDAR) {
        if (!this.noStyle) {
          this.table.className = "listview-mode-" + (this.mode == Listview.MODE_TILED ? "tiled" : "calendar")
        }
        var g = (100 / this.nItemsPerRow) + "%",
            h = $WH.ce("colgroup"),
            e;
        for (var f = 0; f < this.nItemsPerRow; ++f) {
          e = $WH.ce("col");
          e.style.width = g;
          $WH.ae(h, e)
        }
        $WH.ae(this.mainContainer, h);
        if (this.sortOptions) {
          setTimeout((function () {
            this.updateSortArrow()
          }).bind(this), 0)
        }
      } else {
        if (!this.noStyle) {
          this.table.className = "listview-mode-default"
        }
        this.createHeader();
        this.updateSortArrow()
      }
      $WH.ae(this.table, this.thead);
      $WH.ae(this.table, this.tbody)
    }
    this.createBands();
    if (this.customFilter != null) {
      this.updateFilters()
    }
    this.updateNav();
    this.refreshRows();
    this.updateBrowseSession();
    if (this.onAfterCreate != null) {
      this.onAfterCreate(c)
    }
  },
  createHeader: function () {
    var j = $WH.ce("tr");
    if (this.mode == Listview.MODE_CHECKBOX && (!$WH.isset("g_thottbot") || !g_thottbot)) {
      var h = $WH.ce("th"),
          k = $WH.ce("div"),
          c = $WH.ce("a");
      h.style.width = "33px";
      c.href = "javascript:;";
      c.className = "listview-cb";
      $WH.ns(c);
      $WH.ae(c, $WH.ct(String.fromCharCode(160)));
      $WH.ae(k, c);
      $WH.ae(h, k);
      $WH.ae(j, h)
    }
    for (var g = 0, b = this.visibility.length; g < b; ++g) {
      var f = this.visibility[g],
          e = this.columns[f],
          h = $WH.ce("th");
      k = $WH.ce("div"), c = $WH.ce("a"), outerSpan = $WH.ce("span"), innerSpan = $WH.ce("span");
      e.__th = h;
      if (this.filtrable && (e.filtrable == null || e.filtrable)) {
        c.onmouseup = Listview.headerClick.bind(this, e, f);
        c.onclick = c.oncontextmenu = $WH.rf
      } else {
        if (this.sortable && (e.sortable == null || e.sortable)) {
          c.href = "javascript:;";
          c.onclick = this.sortBy.bind(this, f + 1, false)
        }
      }
      if (c.onclick) {
        c.onmouseover = Listview.headerOver.bind(this, c, e);
        c.onmouseout = $WH.Tooltip.hide;
        $WH.ns(c)
      } else {
        c.className = "static"
      }
      if (e.width != null) {
        h.style.width = e.width
      }
      if (e.align != null) {
        h.style.textAlign = e.align
      }
      if (e.span != null) {
        h.colSpan = e.span
      }
      $WH.ae(innerSpan, $WH.ct(e.name ? e.name : String.fromCharCode(160)));
      $WH.ae(outerSpan, innerSpan);
      $WH.ae(c, outerSpan);
      $WH.ae(k, c);
      $WH.ae(h, k);
      $WH.ae(j, h)
    }
    if (this.hideHeader) {
      this.thead.style.display = "none"
    }
    $WH.ae(this.thead, j)
  },
  createSortOptions: function (j) {
    if (!$.isArray(this.sortOptions)) {
      return
    }
    var g = $WH.ce("div");
    g.className = "listview-sort-options";
    g.innerHTML = LANG.lvnote_sort;
    var h = $WH.ce("span");
    h.className = "listview-sort-options-choices";
    var e = null;
    if ($.isArray(this.sort)) {
      e = this.sort[0]
    }
    var b;
    var c = [];
    for (var f = 0; f < this.sortOptions.length; f++) {
      if (this.sortOptions[f].hidden) {
        continue
      }
      b = $WH.ce("a");
      b.href = "javascript:;";
      b.innerHTML = this.sortOptions[f].name;
      b.onclick = this.sortGallery.bind(this, b, f + 1);
      if (e === f + 1) {
        b.className = "active"
      }
      c.push(b)
    }
    for (f = 0; f < c.length; f++) {
      $WH.ae(h, c[f])
    }
    $WH.ae(g, h);
    $WH.aef(j, g)
  },
  sortGallery: function (b, c) {
    var e = $(b);
    e.siblings("a").removeClass("active");
    e.addClass("active");
    this.sortBy(c)
  },
  createBands: function () {
    var p = $WH.ce("div"),
        r = $WH.ce("div"),
        s = $WH.ce("div"),
        q = $WH.ce("div");
    this.bandTop = p;
    this.bandBot = r;
    this.noteTop = s;
    this.noteBot = q;
    p.className = "listview-band-top";
    r.className = "listview-band-bottom";
    this.navTop = this.createNav(true);
    this.navBot = this.createNav(false);
    s.className = q.className = "listview-note";
    if (this.note) {
      s.innerHTML = this.note
    } else {
      if (this.createNote) {
        this.createNote(s, q)
      }
    }
    this.createSortOptions(s);
    if (this.debug) {
      $WH.ae(s, $WH.ct(" ("));
      var c = $WH.ce("a");
      c.onclick = this.getList.bind(this);
      $WH.ae(c, $WH.ct("CSV"));
      $WH.ae(s, c);
      $WH.ae(s, $WH.ct(")"))
    }
    if (this._errors) {
      var f = $WH.ce("small"),
          m = $WH.ce("b");
      m.className = "q10 icon-report";
      if (s.innerHTML) {
        m.style.marginLeft = "10px"
      }
      f.onmouseover = function (b) {
        $WH.Tooltip.showAtCursor(b, LANG.lvnote_witherrors, 0, 0, "q")
      };
      f.onmousemove = $WH.Tooltip.cursorUpdate;
      f.onmouseout = $WH.Tooltip.hide;
      $WH.st(m, LANG.error);
      $WH.ae(f, m);
      $WH.ae(s, f)
    }
    if (!s.firstChild && !(this.createCbControls || this.mode == Listview.MODE_CHECKBOX)) {
      $WH.ae(s, $WH.ct(String.fromCharCode(160)))
    }
    if (!(this.createCbControls || this.mode == Listview.MODE_CHECKBOX)) {
      $WH.ae(q, $WH.ct(String.fromCharCode(160)))
    }
    $WH.ae(p, this.navTop);
    if (this.searchable) {
      var t = this.updateFilters.bind(this, true),
          h = (this._truncated ? LANG.lvsearchdisplayedresults : LANG.lvsearchresults),
          f = $WH.ce("span"),
          e = $WH.ce("em"),
          o = $WH.ce("a"),
          n = $WH.ce("input");
      f.className = "listview-quicksearch";
      if (this.tabClick) {
        $(f).click(this.tabClick)
      }
      $WH.ae(f, e);
      o.href = "javascript:;";
      o.onclick = function () {
        var b = this.nextSibling;
        b.value = "";
        b.placeholder = h;
        t()
      };
      o.style.display = "none";
      $WH.ae(o, $WH.ce("span"));
      $WH.ae(f, o);
      $WH.ns(o);
      e.className = "fa fa-search";
      n.setAttribute("type", "text");
      n.placeholder = h;
      n.style.width = (this._truncated ? "19em" : "15em");
      g_onAfterTyping(n, t, this.searchDelay);
      n.onmouseover = function () {
        if ($WH.trim(this.value) != "") {
          this.className = ""
        }
      };
      n.onfocus = function () {
        this.className = ""
      };
      n.onblur = function () {
        if ($WH.trim(this.value) == "") {
          this.value = ""
        }
      };
      n.onkeypress = this.submitSearch.bind(this);
      $WH.ae(f, n);
      this.quickSearchBox = n;
      this.quickSearchGlass = e;
      this.quickSearchClear = o;
      $WH.ae(p, f)
    }
    $WH.ae(p, s);
    if (this.showLootSpecs) {
      this.classSelectorDiv = $WH.ce("div");
      this.classSelectorDiv.id = "class-selector";
      this.classSelectorDiv.style.paddingLeft = "3px";
      var j = "";
      j += '<div id="class-selector-c0" class="iconmedium active"><ins><span style="text-align: center; line-height: 30px; height: 30px; width: 30px;">' + LANG.su_note_all + '</span></ins><span><img src="' + g_staticUrl + '/images/Icon/medium/border/default.png" /></span><a href="javascript:;" data-classid="0"></a></div>';
      for (var l in g_file_classes) {
        j += '<div id="class-selector-c' + l + '" class="iconmedium"><ins><img src="' + g_staticUrl + "/images/wow/icons/medium/class_" + g_file_classes[l] + '.jpg" /></ins><span><img src="' + g_staticUrl + '/images/Icon/medium/border/default.png" /></span><a href="javascript:;" data-classid="' + l + '"></a></div>'
      }
      this.classSelectorDiv.innerHTML = j;
      $("div.iconmedium a", this.classSelectorDiv).bind("mouseover", function (b) {
        var v = parseInt($(b.target).attr("data-classid"));
        if (v) {
          var u = g_chr_classes[v];
          $WH.Tooltip.showAtCursor(b, u, 0, 0, "q")
        }
      });
      $("div.iconmedium", this.classSelectorDiv).bind("mouseout", function (b) {
        $WH.Tooltip.hide()
      });
      var g = this;
      $("div.iconmedium a", this.classSelectorDiv).bind("contextmenu", function (b) {
        return false
      });
      $("div.iconmedium a", this.classSelectorDiv).bind("mousedown", function (u) {
        var b = parseInt($(u.target).attr("data-classid"));
        switch (u.which) {
        case 3:
          if (b && $(u.target).parent().hasClass("active")) {
            $(u.target).parent().removeClass("active");
            Listview.funcBox.filterByClass.call(g, null);
            $("#class-selector-c0").addClass("active")
          }
          break;
        default:
          $(".iconmedium", g.classSelectorDiv).removeClass("active");
          $(u.target).parent().addClass("active");
          Listview.funcBox.filterByClass.call(g, b);
          break
        }
      });
      $(p).append(this.classSelectorDiv);
      $(p).append('<div class="pad" style="clear: left;"></div>');
      if ($WH.localStorage.get("dynamic_quest_class")) {
        l = $WH.localStorage.get("dynamic_quest_class");
        $("#class-selector-c" + l + " a", this.classSelectorDiv).trigger("mousedown")
      }
    }
    $WH.ae(r, this.navBot);
    $WH.ae(r, q);
    if (this.createCbControls || this.mode == Listview.MODE_CHECKBOX) {
      if (this.note && !this.showLootSpecs) {
        s.style.paddingBottom = "5px"
      }
      this.cbBarTop = this.createCbBar(true);
      this.cbBarBot = this.createCbBar(false);
      $WH.ae(p, this.cbBarTop);
      $WH.ae(r, this.cbBarBot);
      if (!this.noteTop.firstChild && !this.cbBarTop.firstChild) {
        this.noteTop.innerHTML = "&nbsp;"
      }
      if (!this.noteBot.firstChild && !this.cbBarBot.firstChild) {
        this.noteBot.innerHTML = "&nbsp;"
      }
      if (this.noteTop.firstChild && this.cbBarTop.firstChild && !this.showLootSpecs) {
        this.noteTop.style.paddingBottom = "6px"
      }
      if (this.noteBot.firstChild && this.cbBarBot.firstChild) {
        this.noteBot.style.paddingBottom = "6px"
      }
    }
    if (this.hideBands & 1) {
      p.style.display = "none"
    }
    if (this.hideBands & 2) {
      r.style.display = "none"
    }
    $WH.ae(this.container, this.bandTop);
    this.containerScroller = $WH.ce("div");
    this.containerScroller.className = "listview-scroller";
    $WH.ae(this.container, this.containerScroller);
    if (this.clip) {
      var k = $WH.ce("div");
      k.className = "listview-clip";
      k.style.width = this.clip.w + "px";
      k.style.height = this.clip.h + "px";
      this.clipDiv = k;
      $WH.ae(k, this.mainContainer);
      $WH.ae(k, this.noData);
      $WH.ae(this.containerScroller, k)
    } else {
      $WH.ae(this.containerScroller, this.mainContainer);
      $WH.ae(this.containerScroller, this.noData)
    }
    $WH.ae(this.container, this.bandBot)
  },
  createNav: function (j) {
    var e = $WH.ce("div"),
        f = $WH.ce("a"),
        c = $WH.ce("a"),
        b = $WH.ce("a"),
        m = $WH.ce("a"),
        l = $WH.ce("span"),
        k = $WH.ce("b"),
        h = $WH.ce("b"),
        g = $WH.ce("b");
    e.className = "listview-nav";
    f.href = c.href = b.href = m.href = "javascript:;";
    $WH.ae(f, $WH.ct(String.fromCharCode(171) + LANG.lvpage_first));
    $WH.ae(c, $WH.ct(String.fromCharCode(8249) + LANG.lvpage_previous));
    $WH.ae(b, $WH.ct(LANG.lvpage_next + String.fromCharCode(8250)));
    $WH.ae(m, $WH.ct(LANG.lvpage_last + String.fromCharCode(187)));
    $WH.ns(f);
    $WH.ns(c);
    $WH.ns(b);
    $WH.ns(m);
    f.onclick = this.firstPage.bind(this);
    c.onclick = this.previousPage.bind(this);
    b.onclick = this.nextPage.bind(this);
    m.onclick = this.lastPage.bind(this);
    if (this.mode == Listview.MODE_CALENDAR) {
      $WH.ae(k, $WH.ct("a"));
      $WH.ae(l, k)
    } else {
      $WH.ae(k, $WH.ct("a"));
      $WH.ae(h, $WH.ct("a"));
      $WH.ae(g, $WH.ct("a"));
      $WH.ae(l, k);
      $WH.ae(l, $WH.ct(LANG.hyphen));
      $WH.ae(l, h);
      $WH.ae(l, $WH.ct(LANG.lvpage_of));
      $WH.ae(l, g)
    }
    $WH.ae(e, f);
    $WH.ae(e, c);
    $WH.ae(e, l);
    $WH.ae(e, b);
    $WH.ae(e, m);
    if (j) {
      if (this.hideNav & 1) {
        e.style.display = "none"
      }
    } else {
      if (this.hideNav & 2) {
        e.style.display = "none"
      }
    }
    if (this.tabClick) {
      $("a", e).click(this.tabClick)
    }
    return e
  },
  createCbBar: function (b) {
    var c = $WH.ce("div");
    if (this.createCbControls) {
      this.createCbControls(c, b)
    }
    if (this.createTooltipToggle) {
      this.createTooltipToggle(c, b)
    }
    if (c.firstChild) {
      c.className = "listview-withselected" + (b ? "" : "2");
      $WH.ae(c, this.createToggleAll())
    }
    return c
  },
  createToggleAll: function () {
    var c = $WH.ce("a");
    c.className = "listview-toggleall";
    var b = function (f) {
      $WH.Tooltip.showAtCursor(f, ($("td:first-child input:checkbox:not(:checked)", $(this).parents(".listview")).length ? LANG.lvnote_selectall : LANG.lvnote_deselectall), 0, 0, "q")
    };
    c.onclick = (function (h, f, j) {
      var g = $("td:first-child", $(this).parents(".listview"));
      if ($("input:checkbox:not(:checked)", g).length) {
        Listview.cbSelect.call(h, true)
      } else {
        Listview.cbSelect.call(h, false)
      }
      f.call(this, j)
    }).bind(c, this, b);
    c.onmousedown = $WH.rf;
    c.onmouseover = b;
    c.onmousemove = $WH.Tooltip.cursorUpdate;
    c.onmouseout = $WH.Tooltip.hide;
    return c
  },
  refreshRows: function (l) {
    var c = (this.mode == Listview.MODE_DIV ? this.mainContainer : this.tbody);
    if (!c) {
      return
    }
    $WH.ee(c);
    if (this.nRowsVisible == 0) {
      if (!this.filtered && !this.forceBandTop) {
        this.bandTop.style.display = this.bandBot.style.display = "none";
        this.mainContainer.style.display = "none"
      }
      this.noData.style.display = "";
      this.showNoData();
      return
    }
    var r, e, f;
    if (!(this.hideBands & 1)) {
      this.bandTop.style.display = ""
    }
    if (!(this.hideBands & 2)) {
      this.bandBot.style.display = ""
    }
    if (this.nDaysPerMonth && this.nDaysPerMonth.length) {
      r = 0;
      for (var m = 0; m < this.rowOffset; ++m) {
        r += this.nDaysPerMonth[m]
      }
      e = r + this.nDaysPerMonth[m]
    } else {
      if (this.nItemsPerPage > 0) {
        r = this.rowOffset;
        e = Math.min(r + this.nRowsVisible, r + this.nItemsPerPage);
        if (this.filtered && this.rowOffset > 0) {
          for (var m = 0, o = 0; m < this.data.length && o < this.rowOffset; ++m) {
            var s = this.data[m];
            if (s.__hidden || s.__deleted) {
              ++r
            } else {
              ++o
            }
          }
          e += (r - this.rowOffset)
        }
      } else {
        r = 0;
        e = this.nRowsVisible
      }
    }
    var n = e - r;
    if (this.mode == Listview.MODE_DIV) {
      for (var h = 0; h < n; ++h) {
        var m = r + h,
            s = this.data[m];
        if (!s) {
          break
        }
        if (s.__hidden || s.__deleted) {
          ++n;
          continue
        }
        $WH.ae(this.mainDiv, this.getDiv(m))
      }
    } else {
      if (this.mode == Listview.MODE_TILED) {
        var g = 0,
            p = $WH.ce("tr");
        for (var h = 0; h < n; ++h) {
          var m = r + h,
              s = this.data[m];
          if (!s) {
            break
          }
          if (s.__hidden || s.__deleted) {
            ++n;
            continue
          }
          $WH.ae(p, this.getCell(m, l));
          if (++g == this.nItemsPerRow) {
            $WH.ae(this.tbody, p);
            if (h + 1 < n) {
              p = $WH.ce("tr")
            }
            g = 0
          }
        }
        if (g != 0) {
          for (; g < 4; ++g) {
            var q = $WH.ce("td");
            q.className = "empty-cell";
            $WH.ae(p, q)
          }
          $WH.ae(this.tbody, p)
        }
      } else {
        if (this.mode == Listview.MODE_CALENDAR) {
          var p = $WH.ce("tr");
          for (var m = 0; m < 7; ++m) {
            var b = $WH.ce("th");
            $WH.st(b, LANG.date_days[m]);
            $WH.ae(p, b)
          }
          $WH.ae(this.tbody, p);
          p = $WH.ce("tr");
          for (var g = 0; g < this.dates[r].date.getDay(); ++g) {
            var q = $WH.ce("td");
            q.className = "empty-cell";
            $WH.ae(p, q)
          }
          for (var h = r; h < e; ++h) {
            $WH.ae(p, this.getEvent(h));
            if (++g == 7) {
              $WH.ae(this.tbody, p);
              p = $WH.ce("tr");
              g = 0
            }
          }
          if (g != 0) {
            for (; g < 7; ++g) {
              var q = $WH.ce("td");
              q.className = "empty-cell";
              $WH.ae(p, q)
            }
            $WH.ae(this.tbody, p)
          }
        } else {
          for (var h = 0; h < n; ++h) {
            var m = r + h,
                s = this.data[m];
            if (!s) {
              break
            }
            if (s.__hidden || s.__deleted) {
              ++n;
              continue
            }
            $WH.ae(this.tbody, this.getRow(m, l))
          }
        }
      }
    }
    this.mainContainer.style.display = "";
    this.noData.style.display = "none";
    $WowheadPower.attachTouchTooltips(c)
  },
  showNoData: function () {
    var c = this.noData;
    $WH.ee(c);
    var b = -1;
    if (this.onNoData) {
      b = (this.onNoData.bind(this, c))()
    }
    if (b == -1) {
      if (this.noDataText) {
        $WH.ae(this.noData, $WH.ct(this.noDataText))
      } else {
        $WH.ae(this.noData, $WH.ct(this.filtered ? LANG.lvnodata2 : LANG.lvnodata))
      }
    }
  },
  getDiv: function (b) {
    var c = this.data[b];
    if (c.__div == null || this.minPatchVersion != c.__minPatch) {
      this.createDiv(c, b)
    }
    return c.__div
  },
  createDiv: function (c, b) {
    var e = $WH.ce("div");
    c.__div = e;
    if (this.minPatchVersion) {
      c.__minPatch = this.minPatchVersion
    }(this.template.compute.bind(this, c, e, b))()
  },
  getCell: function (c, b) {
    var e = this.data[c];
    if (b || e.__td == null) {
      this.createCell(e, c)
    }
    return e.__td
  },
  createCell: function (c, b) {
    var e = $WH.ce("td");
    c.__td = e;
    (this.template.compute.bind(this, c, e, b))()
  },
  getEvent: function (b) {
    var c = this.dates[b];
    if (c.__td == null) {
      this.createEvent(c, b)
    }
    return c.__td
  },
  createEvent: function (c, b) {
    c.events = $WH.array_filter(this.data, function (g) {
      if (g.__hidden || g.__deleted) {
        return false
      }
      var h = $WH.g_getEventNextDates(g, c.date);
      if (h[0] && h[1]) {
        h[0].setHours(0, 0, 0, 0);
        h[1].setHours(0, 0, 0, 0);
        return h[0] <= c.date && h[1] >= c.date
      }
      return false
    });
    var f = $WH.ce("td");
    c.__td = f;
    if (c.date.getFullYear() == g_serverTime.getFullYear() && c.date.getMonth() == g_serverTime.getMonth() && c.date.getDate() == g_serverTime.getDate()) {
      f.className = "calendar-today"
    }
    var e = $WH.ce("div");
    e.className = "calendar-date";
    $WH.st(e, c.date.getDate());
    $WH.ae(f, e);
    e = $WH.ce("div");
    e.className = "calendar-event";
    $WH.ae(f, e);
    (this.template.compute.bind(this, c, e, b))();
    if (this.getItemLink) {
      f.onclick = this.itemClick.bind(this, c)
    }
  },
  getRow: function (c, b) {
    var e = this.data[c];
    if (b || e.__tr == null) {
      this.createRow(e)
    }
    return e.__tr
  },
  setRow: function (b) {
    if (this.data[b.pos]) {
      this.data[b.pos] = b;
      this.data[b.pos].__tr = b.__tr;
      this.createRow(this.data[b.pos]);
      this.refreshRows()
    }
  },
  createRow: function (l) {
    var j = $WH.ce("tr");
    l.__tr = j;
    if (this.mode == Listview.MODE_CHECKBOX && (!$WH.isset("g_thottbot") || !g_thottbot)) {
      var e = $WH.ce("td");
      if (!l.__nochk) {
        e.className = "listview-cb";
        e.onclick = Listview.cbCellClick;
        var c = $WH.ce("input");
        $WH.ns(c);
        c.type = "checkbox";
        c.onclick = Listview.cbClick;
        if (l.__chk) {
          c.checked = true
        }
        l.__cb = c;
        $WH.ae(e, c)
      }
      $WH.ae(j, e)
    }
    for (var f = 0, g = this.visibility.length; f < g; ++f) {
      var h = this.visibility[f],
          b = this.columns[h],
          e = $WH.ce("td"),
          k;
      if (b.align != null) {
        e.style.textAlign = b.align
      }
      if (b.compute) {
        k = (b.compute.bind(this, l, e, j, h))()
      } else {
        if (l[b.value] != null) {
          k = l[b.value]
        } else {
          k = -1
        }
      }
      if (k != -1 && k != null) {
        e.insertBefore($WH.ct(k), e.firstChild)
      }
      $WH.ae(j, e)
    }
    if (this.mode == Listview.MODE_CHECKBOX && l.__chk) {
      j.className = "checked"
    }
    if (l.frommerge == 1) {
      j.className += " mergerow"
    }
    if (this.getItemLink) {
      j.onclick = this.itemClick.bind(this, l)
    }
  },
  itemClick: function (g, f) {
    if (this.noRowClick) {
      return
    }
    f = $WH.$E(f);
    var b = 0,
        c = f._target;
    while (c && b < 3) {
      if (c.nodeName == "A") {
        return
      }
      c = c.parentNode
    }
    location.href = this.getItemLink(g)
  },
  submitSearch: function (f) {
    f = $WH.$E(f);
    if (!this.onSearchSubmit || f.keyCode != 13) {
      return
    }
    for (var c = 0, b = this.data.length; c < b; ++c) {
      if (this.data[c].__hidden) {
        continue
      }(this.onSearchSubmit.bind(this, this.data[c]))()
    }
  },
  validatePage: function () {
    var e = this.nItemsPerPage,
        c = this.rowOffset,
        b = this.nRowsVisible;
    if (c < 0) {
      this.rowOffset = 0
    } else {
      if (this.mode == Listview.MODE_CALENDAR) {
        this.rowOffset = Math.min(c, this.nDaysPerMonth.length - 1)
      } else {
        this.rowOffset = this.getRowOffset(c + e > b ? b - 1 : c)
      }
    }
  },
  getRowOffset: function (c) {
    var b = this.nItemsPerPage;
    return (b > 0 && c > 0 ? Math.floor(c / b) * b : 0)
  },
  resetRowVisibility: function () {
    for (var c = 0, b = this.data.length; c < b; ++c) {
      this.data[c].__hidden = false
    }
    this.filtered = false;
    this.rowOffset = 0;
    this.nRowsVisible = this.data.length
  },
  getColText: function (f, b, c) {
    var e = "";
    if (this.template.getVisibleText) {
      e = $WH.trim(this.template.getVisibleText(f) + " ")
    }
    if (b.getVisibleText) {
      return e + b.getVisibleText(f)
    }
    if (b.getValue) {
      return e + b.getValue.call(this, f)
    }
    if (b.value) {
      return e + f[b.value]
    }
    if (b.compute) {
      return e + b.compute.call(this, f, $WH.ce("td"), $WH.ce("tr"), c)
    }
    return ""
  },
  resetFilters: function () {
    for (var f = 0, b = this.visibility.length; f < b; ++f) {
      var e = this.visibility[f];
      var c = this.columns[e];
      if (c.__filter) {
        c.__th.firstChild.firstChild.className = "";
        c.__filter = null;
        this.nFilters--
      }
    }
  },
  updateFilters: function (f) {
    $WH.Tooltip.hide();
    this.resetRowVisibility();
    var z, s, e;
    if (this.searchable) {
      this.quickSearchBox.parentNode.style.display = "";
      z = $WH.trim(this.quickSearchBox.value);
      if (z) {
        this.quickSearchGlass.style.display = "none";
        this.quickSearchClear.style.display = "";
        z = z.toLowerCase().replace(/\s+/g, " ");
        s = z.split(" ");
        e = s.length
      } else {
        this.quickSearchGlass.style.display = "";
        this.quickSearchClear.style.display = "none"
      }
    } else {
      if (this.quickSearchBox) {
        this.quickSearchBox.parentNode.style.display = "none"
      }
    }
    if (!z && this.nFilters == 0 && this.customFilter == null && this.classFilter == null) {
      if (f) {
        this.updateNav();
        this.refreshRows();
        this.updateBrowseSession()
      }
      return
    }
    var C = {
      1: function (j, k) {
        return j > k
      },
      2: function (j, k) {
        return j == k
      },
      3: function (j, k) {
        return j < k
      },
      4: function (j, k) {
        return j >= k
      },
      5: function (j, k) {
        return j <= k
      },
      6: function (j, E, k) {
        return E <= j && j <= k
      }
    };
    var r = {
      1: function (k, j, E) {
        return j > E
      },
      2: function (k, j, E) {
        return k <= E && E <= j
      },
      3: function (k, j, E) {
        return k < E
      },
      4: function (k, j, E) {
        return j >= E
      },
      5: function (k, j, E) {
        return k <= E
      },
      6: function (k, j, F, E) {
        return F <= j && k <= E
      }
    };
    var q = 0;
    for (var w = 0, y = this.data.length; w < y; ++w) {
      var l = this.data[w],
          o = 0;
      nSearchMatches = 0, matches = [];
      l.__hidden = true;
      if (this.customFilter && !this.customFilter(l, w)) {
        continue
      }
      if (this.customFilter2 && !this.customFilter2(l, w)) {
        continue
      }
      if (this.classFilter && !this.classFilter(l, w)) {
        continue
      }
      for (var v = 0, m = this.visibility.length; v < m; ++v) {
        var p = this.visibility[v];
        var g = this.columns[p];
        if (g.__filter) {
          var b = g.__filter,
              c = false;
          if (g.type != null && g.type == "range") {
            var D = g.getMinValue(l),
                B = g.getMaxValue(l);
            c = (r[b.type])(D, B, b.value, b.value2)
          } else {
            if (g.type == null || g.type == "num" || b.type > 0) {
              var t = null;
              if (g.getValue) {
                t = g.getValue(l)
              } else {
                if (g.value) {
                  t = parseFloat(l[g.value])
                }
              }
              if (!t) {
                t = 0
              }
              c = (C[b.type])(t, b.value, b.value2)
            } else {
              var n = this.getColText(l, g, p);
              if (n) {
                n = n.toString().toLowerCase();
                if (b.invert) {
                  c = n.match(b.regex) != null
                } else {
                  var A = 0;
                  for (var u = 0, h = b.words.length; u < h; ++u) {
                    if (n.indexOf(b.words[u]) != -1) {
                      ++A
                    } else {
                      break
                    }
                  }
                  c = (A == b.words.length)
                }
              }
            }
          }
          if (b.invert) {
            c = !c
          }
          if (c) {
            ++o
          } else {
            break
          }
        }
        if (z) {
          var n = this.getColText(l, g, p);
          if (n) {
            n = n.toString().toLowerCase();
            for (var u = 0, h = s.length; u < h; ++u) {
              if (!matches[u]) {
                if (n.indexOf(s[u]) != -1) {
                  matches[u] = 1;
                  ++nSearchMatches
                }
              }
            }
          }
        }
      }
      if (l.__alwaysvisible || ((this.nFilters == 0 || o == this.nFilters) && (!z || nSearchMatches == e))) {
        l.__hidden = false;
        ++q
      }
    }
    this.filtered = (q < this.data.length);
    this.nRowsVisible = q;
    if (f) {
      this.updateNav();
      this.refreshRows();
      this.updateBrowseSession()
    }
  },
  changePage: function () {
    this.validatePage();
    this.refreshRows();
    this.updateNav();
    this.updatePound();
    this.updateBrowseSession();
    var b = $WH.g_getScroll(),
        e = $WH.ac(this.container);
    if (b.y > e[1]) {
      scrollTo(b.x, e[1])
    }
  },
  firstPage: function () {
    this.rowOffset = 0;
    this.changePage();
    return false
  },
  previousPage: function () {
    this.rowOffset -= this.nItemsPerPage;
    this.changePage();
    return false
  },
  nextPage: function () {
    this.rowOffset += this.nItemsPerPage;
    this.changePage();
    return false
  },
  lastPage: function () {
    this.rowOffset = 99999999;
    this.changePage();
    return false
  },
  addSort: function (b, e) {
    var c = $WH.in_array(b, Math.abs(e), function (f) {
      return Math.abs(f)
    });
    if (c != -1) {
      e = b[c];
      b.splice(c, 1)
    }
    b.splice(0, 0, e)
  },
  sortBy: function (e, b) {
    var c = this.sortOptions || this.columns;
    if (e <= 0 || e > c.length) {
      return
    }
    this.searchSort = false;
    if (Math.abs(this.sort[0]) == e && !b) {
      this.sort[0] = -this.sort[0]
    } else {
      var f = -1;
      if (c[e - 1].type == "text") {
        f = 1
      }
      this.addSort(this.sort, f * e)
    }
    this.applySort();
    this.refreshRows();
    this.updateSortArrow();
    this.updatePound()
  },
  applySort: function () {
    if (this.sort.length == 0) {
      return
    }
    Listview.sort = this.sort;
    Listview.columns = this.columns;
    Listview.sortOptions = this.sortOptions;
    if (this.template.beforeSort) {
      this.template.beforeSort.call(this)
    }
    if (this.indexCreated) {
      this.data.sort(Listview.sortIndexedRows.bind(this))
    } else {
      this.data.sort(Listview.sortRows.bind(this))
    }
    this.updateSortIndex();
    this.updateBrowseSession()
  },
  setSort: function (c, e, b) {
    this.searchSort = false;
    if (this.sort.toString() != c.toString()) {
      this.sort = c;
      this.applySort();
      if (e) {
        this.refreshRows()
      }
      if (b) {
        this.updatePound()
      }
    }
  },
  readPound: function () {
    if (!this.poundable || !location.hash.length) {
      return false
    }
    var c = location.hash.substr(1);
    if (this.tabs) {
      var k = c.lastIndexOf(":");
      if (k == -1) {
        return false
      }
      c = c.substr(k + 1)
    }
    var b = parseInt(c);
    if (!isNaN(b)) {
      this.rowOffset = b;
      this.validatePage();
      if (this.poundable != 2) {
        var g = [];
        var j = c.match(/(\+|\-)[0-9]+/g);
        if (j != null) {
          var f = this.sortOptions || this.columns;
          for (var e = j.length - 1; e >= 0; --e) {
            var h = parseInt(j[e]) | 0;
            var c = Math.abs(h);
            if (c <= 0 || c > f.length) {
              break
            }
            this.addSort(g, h)
          }
          this.setSort(g, false, false)
        }
      }
      if (this.tabs) {
        this.tabs.setTabPound(this.tabIndex, this.getTabPound())
      }
    }
  },
  updateBrowseSession: function () {
    if ((!window.JSON) || (!$WH.localStorage.isSupported())) {
      return
    }
    if ((typeof fi_filters == "undefined") && (location.pathname != "/search")) {
      return
    }
    if (this.data.length < 3) {
      return
    }
    if (typeof this.getItemLink != "function") {
      return
    }
    var l = 5;
    var g = location.pathname + location.search;
    var f = (new Date(g_serverTime.getTime() - 1000 * 60 * 60 * 24 * 3)).getTime();
    var e = $WH.localStorage.get("lvBrowse");
    if (e) {
      e = window.JSON.parse(e);
      for (var c = 0; c < e.length; c++) {
        if ((e[c].path == g) || (e[c].when < f)) {
          e.splice(c--, 1)
        }
      }
      if (e.length >= l) {
        e.splice(l - 1, e.length - l - 1)
      }
    } else {
      e = []
    }
    var k = [],
        j, h = /^\/[-a-z]+=\d+/i;
    for (var c = 0; c < this.data.length; c++) {
      if (j = h.exec(this.getItemLink(this.data[c]))) {
        k.push(j[0])
      }
    }
    if (k.length < 3) {
      return
    }
    e.unshift({
      path: g,
      hash: location.hash,
      when: g_serverTime.getTime(),
      urls: k
    });
    $WH.localStorage.set("lvBrowse", window.JSON.stringify(e))
  },
  updateSortArrow: function () {
    if (!this.sort.length || !this.thead || this.mode == Listview.MODE_CALENDAR || this.searchSort) {
      return
    }
    var b = $WH.in_array(this.visibility, Math.abs(this.sort[0]) - 1);
    if (b == -1) {
      return
    }
    if (this.mode == Listview.MODE_TILED) {
      if (!this.sortOptions) {
        return
      }
      var e = $(".listview-sort-options a", this.noteTop).get(b);
      if (this.lsa && this.lsa != e) {
        this.lsa.className = ""
      }
      e.className = this.sort[0] < 0 ? "active sortdesc" : "active sortasc";
      this.lsa = e;
      return
    }
    if (this.mode == Listview.MODE_CHECKBOX && b < this.thead.firstChild.childNodes.length - 1) {
      b += 1
    }
    var c = this.thead.firstChild.childNodes[b].firstChild.firstChild.firstChild;
    if (this.lsa && this.lsa != c) {
      this.lsa.className = ""
    }
    c.className = (this.sort[0] < 0 ? "sortdesc" : "sortasc");
    this.lsa = c
  },
  updateSortIndex: function () {
    var c = this.data;
    for (var e = 0, b = c.length; e < b; ++e) {
      c[e].__si = e
    }
    this.indexCreated = true
  },
  updateTabName: function () {
    if (this.tabs && this.tabIndex != null) {
      this.tabs.setTabName(this.tabIndex, this.getTabName())
    }
  },
  updatePound: function (b) {
    if (!this.poundable) {
      return
    }
    var c = "",
        f = "";
    if (b) {
      if (location.hash.length && this.tabs) {
        var e = location.hash.lastIndexOf(":");
        if (e != -1 && !isNaN(parseInt(location.hash.substr(e + 1)))) {
          c = location.hash.substr(e + 1)
        }
      }
    } else {
      c = this.getTabPound()
    }
    if (this.customPound) {
      f = this.customPound
    } else {
      if (this.tabs) {
        f = this.id
      }
    }
    if (c && this.tabs) {
      this.tabs.setTabPound(this.tabIndex, c)
    }
    location.replace("#" + f + (f && c ? ":" : "") + c)
  },
  updateNav: function () {
    var h = [this.navTop, this.navBot],
        m = this.nItemsPerPage,
        l = this.rowOffset,
        g = this.nRowsVisible,
        k = 0,
        c = 0,
        j = 0,
        n = 0,
        e = new Date();
    if (g > 0) {
      if (!(this.hideNav & 1)) {
        h[0].style.display = ""
      }
      if (!(this.hideNav & 2)) {
        h[1].style.display = ""
      }
    } else {
      h[0].style.display = h[1].style.display = "none"
    }
    if (this.mode == Listview.MODE_CALENDAR) {
      for (var f = 0; f < this.nDaysPerMonth.length; ++f) {
        if (f == l) {
          if (f > 0) {
            c = 1
          }
          if (f > 1) {
            k = 1
          }
          if (f < this.nDaysPerMonth.length - 1) {
            j = 1
          }
          if (f < this.nDaysPerMonth.length - 2) {
            n = 1
          }
        }
      }
      e.setTime(this.startOnMonth.valueOf());
      e.setMonth(e.getMonth() + l)
    } else {
      if (m) {
        if (l > 0) {
          c = 1;
          if (l >= m + m) {
            k = 1
          }
        }
        if (l + m < g) {
          j = 1;
          if (l + m + m < g) {
            n = 1
          }
        }
      }
    }
    for (var f = 0; f < 2; ++f) {
      var b = h[f].childNodes;
      b[0].setAttribute("data-visible", k ? "yes" : "no");
      b[1].setAttribute("data-visible", c ? "yes" : "no");
      b[3].setAttribute("data-visible", j ? "yes" : "no");
      b[4].setAttribute("data-visible", n ? "yes" : "no");
      b = b[2].childNodes;
      if (this.mode == Listview.MODE_CALENDAR) {
        b[0].firstChild.nodeValue = LANG.date_months[e.getMonth()] + " " + e.getFullYear()
      } else {
        b[0].firstChild.nodeValue = l + 1;
        b[2].firstChild.nodeValue = m ? Math.min(l + m, g) : g;
        b[4].firstChild.nodeValue = g
      }
    }
    if (!k && !c && !j && !n) {
      $(h[0]).addClass("listview-nav-nocontrols");
      $(h[1]).addClass("listview-nav-nocontrols")
    } else {
      $(h[0]).removeClass("listview-nav-nocontrols");
      $(h[1]).removeClass("listview-nav-nocontrols")
    }
  },
  getTabName: function () {
    var c = this.name,
        f = this.data.length;
    for (var e = 0, b = this.data.length; e < b; ++e) {
      if (this.data[e].__hidden || this.data[e].__deleted) {
        --f
      }
    }
    if (f > 0 && !this.hideCount) {
      c += $WH.sprintf(LANG.qty, f)
    }
    return c
  },
  getTabPound: function () {
    var b = "";
    b += this.rowOffset;
    if (this.poundable != 2 && this.sort.length) {
      b += ("+" + this.sort.join("+")).replace(/\+\-/g, "-")
    }
    return b
  },
  getCheckedRows: function () {
    var f = [];
    for (var e = 0, b = this.data.length; e < b; ++e) {
      var c = this.data[e];
      if ((c.__cb && c.__cb.checked) || (!c.__cb && c.__chk)) {
        f.push(c)
      }
    }
    return f
  },
  resetCheckedRows: function () {
    for (var e = 0, b = this.data.length; e < b; ++e) {
      var c = this.data[e];
      if (c.__cb) {
        c.__cb.checked = false
      } else {
        if (c.__chk) {
          c.__chk = null
        }
      }
      if (c.__tr) {
        c.__tr.className = c.__tr.className.replace("checked", "")
      }
    }
  },
  deleteRows: function (e) {
    if (!e || !e.length) {
      return
    }
    for (var c = 0, b = e.length; c < b; ++c) {
      var f = e[c];
      if (!f.__hidden && !f.__hidden) {
        this.nRowsVisible -= 1
      }
      f.__deleted = true
    }
    this.updateTabName();
    if (this.rowOffset >= this.nRowsVisible) {
      this.previousPage()
    } else {
      this.refreshRows();
      this.updateNav();
      this.updateBrowseSession()
    }
  },
  setData: function (b) {
    this.data = b;
    this.indexCreated = false;
    this.resetCheckedRows();
    this.resetRowVisibility();
    if (this.tabs) {
      this.pounded = (this.tabs.poundedTab == this.tabIndex);
      if (this.pounded) {
        this.readPound()
      }
    } else {
      this.readPound()
    }
    this.applySort();
    this.updateSortArrow();
    if (this.customFilter != null || this.classFilter != null) {
      this.updateFilters()
    }
    this.updateNav();
    this.refreshRows();
    this.updateBrowseSession()
  },
  getClipDiv: function () {
    return this.clipDiv
  },
  getNoteTopDiv: function () {
    return this.noteTop
  },
  getNoDataDiv: function () {
    return this.noData
  },
  focusSearch: function () {
    g_safeFocus(this.quickSearchBox)
  },
  clearSearch: function () {
    this.quickSearchBox.value = ""
  },
  getList: function () {
    if (!this.debug) {
      return
    }
    var c = "";
    for (var b = 0; b < this.data.length; b++) {
      if (!this.data[b].__hidden) {
        c += this.data[b].id + ", "
      }
    }
    listviewIdList.show(c)
  },
  createIndicator: function (b, g, k, j) {
    if (!this.noteIndicators) {
      this.noteIndicators = $WH.ce("div");
      this.noteIndicators.className = "listview-indicators";
      $(this.noteIndicators).insertBefore($(this.noteTop))
    }
    var e = this.tabClick;
    var h = $('<span class="indicator"></span>').html(b).append(!g ? "" : $('<a class="indicator-x" style="outline: none">[x]</a>').attr("href", (typeof g == "function" ? "javascript:;" : g)).click(function () {
      if (e) {
        e()
      }
      if (typeof g == "function") {
        g()
      }
    })).css("cursor", (typeof k == "function" ? "pointer" : null)).click(function () {
      if (e) {
        e()
      }
      if (typeof k == "function") {
        k()
      }
    });
    if (j) {
      $WH.Tooltip.simple(h.get(0), j, "q")
    }
    $(this.noteIndicators).append(h);
    $(this.noteTop).css("padding-top", "7px");
    if (!this.showLootSpecs) {
      $(this.noteTop).css("padding-bottom", "11px")
    }
    return h[0]
  },
  removeIndicators: function () {
    if (this.noteIndicators) {
      $(this.noteIndicators).remove();
      this.noteIndicators = null
    }
    $(this.noteTop).css("padding-top", "")
  },
  createProgressBar: function (s, r, c, o, q, g) {
    if (!this.noteProgressBars) {
      this.noteProgressBars = $WH.ce("table");
      this.noteProgressBars.className = "listview-progressbars";
      $(this.noteProgressBars).insertBefore($(this.noteTop))
    }
    var m = 4;
    if (isNaN(q) || q < 1) {
      q = 1
    }
    if (q > m) {
      q = m
    }
    var p = this.noteProgressBars.lastChild,
        j = q;
    if (p && p.childNodes) {
      for (var h = 0; h < p.childNodes.length; ++h) {
        j += (p.childNodes[h].colSpan || 1)
      }
    }
    if (!p || j > m) {
      p = $WH.ce("tr");
      $WH.ae(this.noteProgressBars, p)
    }
    var e = $WH.ce("td");
    if (q > 1) {
      e.colSpan = q
    }
    if (c) {
      e.className = "clickable";
      e.onclick = function () {
        c.apply(this, o)
      }
    }
    if (s) {
      var b = $WH.ce("div");
      b.className = "heading";
      $WH.st(b, s);
      $WH.ae(e, b)
    }
    var f = $WH.ce("div");
    f.className = "bar-wrap";
    var k = $WH.ce("div");
    k.className = "bar-bg";
    $WH.ae(f, k);
    if (r[2]) {
      var n = $WH.ce("div");
      n.className = "bar yellow";
      n.style.width = Math.round(((r[1] + r[2] + r[5]) / r[0]) * 1000) / 10 + "%";
      $WH.ae(f, n)
    }
    var n = $WH.ce("div");
    n.className = "bar";
    n.style.width = Math.round(((r[1] + r[5]) / r[0]) * 1000) / 10 + "%";
    if (g) {
      n.className += " " + g
    }
    $WH.ae(f, n);
    if (r[5]) {
      var n = $WH.ce("div");
      n.className = "bar gray";
      n.style.width = Math.round((r[5] / r[0]) * 1000) / 10 + "%";
      $WH.ae(f, n)
    }
    var l = $WH.ce("span");
    $WH.st(l, (r[1] + r[5]) + (r[2] || r[3] ? " (" + (r[3] || r[2]) + ")" : "") + " / " + r[0]);
    $WH.ae(f, l);
    $WH.ae(e, f);
    $WH.ae(p, e);
    $(this.noteTop).css("padding-top", "")
  },
  removeProgressBars: function () {
    if (this.noteProgressBars) {
      $(this.noteProgressBars).remove();
      this.noteProgressBars = null
    }
    $(this.noteTop).css("padding-top", "")
  },
  addTooltipToggle: function (j, h) {
    if (!g_user.premium) {
      return
    }
    var e = false;
    for (var b = 0; b < this.data.length; b++) {
      if (h[this.data[b].id] && h[this.data[b].id].hasOwnProperty("screenshot")) {
        e = true;
        break
      }
    }
    if (!e) {
      return
    }
    $WH.Tooltip.hideScreenshots = true;
    if ($WH.localStorage.isSupported()) {
      $WH.Tooltip.hideScreenshots = $WH.localStorage.get("tooltipScreenshots") != "1"
    }
    var g = function () {
      $WH.Tooltip.hideScreenshots = !this.checked;
      if ($WH.localStorage.isSupported()) {
        if (this.checked) {
          $WH.localStorage.set("tooltipScreenshots", "1")
        } else {
          $WH.localStorage.remove("tooltipScreenshots")
        }
      }
      $("input[type=checkbox].tooltipToggle").prop("checked", !! this.checked)
    };
    var c = $WH.ce("label");
    var f = $WH.ce("input");
    f.type = "checkbox";
    f.className = "tooltipToggle";
    f.checked = !$WH.Tooltip.hideScreenshots;
    $WH.aE(f, "click", g.bind(f));
    $WH.ae(c, f);
    $WH.ae(c, $WH.ct(LANG.lvnote_screenshottooltips));
    $WH.ae(j, c)
  }
};
Listview.sortRows = function (f, e) {
  var k = Listview.sort,
      l = Listview.sortOptions || Listview.columns;
  if (this.searchSort && f.hasOwnProperty("searchpopularity") && e.hasOwnProperty("searchpopularity") && ((f.searchpopularity > 0) || (e.searchpopularity > 0))) {
    return $WH.strcmp(e.searchpopularity, f.searchpopularity)
  }
  for (var j = 0, c = k.length; j < c; ++j) {
    var h, g = l[Math.abs(k[j]) - 1];
    if (!g) {
      g = this.template
    }
    if (g.sortFunc) {
      h = g.sortFunc.call(this, f, e, k[j])
    } else {
      h = $WH.strcmp(f[g.value], e[g.value])
    }
    if (h != 0) {
      return h * k[j]
    }
  }
  return 0
}, Listview.sortIndexedRows = function (f, e) {
  var h = Listview.sort,
      j = Listview.sortOptions || Listview.columns,
      g;
  if (this.searchSort && f.hasOwnProperty("searchpopularity") && e.hasOwnProperty("searchpopularity") && ((f.searchpopularity > 0) || (e.searchpopularity > 0))) {
    return $WH.strcmp(e.searchpopularity, f.searchpopularity)
  }
  for (var c in h) {
    _ = j[Math.abs(h[c]) - 1];
    if (!_) {
      _ = this.template
    }
    if (_.sortFunc) {
      g = _.sortFunc.call(this, f, e, h[0])
    } else {
      g = $WH.strcmp(f[_.value], e[_.value])
    }
    if (g != 0) {
      return g * h[c]
    }
  }
  return (f.__si - e.__si)
}, Listview.cbSelect = function (e) {
  for (var g = 0, c = this.data.length; g < c; ++g) {
    var f = this.data[g];
    var j = e;
    if (f.__hidden) {
      continue
    }
    if (!f.__nochk && f.__cb) {
      var b = f.__cb,
          h = b.parentNode.parentNode;
      if (j == null) {
        j = !b.checked
      }
      if (b.checked != j) {
        b.checked = j;
        h.className = (b.checked ? h.className + " checked" : h.className.replace("checked", ""))
      }
    } else {
      if (j == null) {
        j = true
      }
    }
    f.__chk = j
  }
};
Listview.cbClick = function (b) {
  setTimeout(Listview.cbUpdate.bind(0, 0, this, this.parentNode.parentNode), 1);
  $WH.sp(b)
};
Listview.cbCellClick = function (b) {
  setTimeout(Listview.cbUpdate.bind(0, 1, this.firstChild, this.parentNode), 1);
  $WH.sp(b)
};
Listview.cbUpdate = function (e, b, c) {
  if (e) {
    b.checked = !b.checked
  }
  c.className = (b.checked ? c.className + " checked" : c.className.replace("checked", ""))
};
Listview.cbAddToList = function (b, c) {
  var e = this.getCheckedRows();
  if (!e.length) {
    return
  }
  li_addToSaved(b, c, e)
};
Listview.headerClick = function (b, c, f) {
  f = $WH.$E(f);
  if (this.tabClick) {
    this.tabClick()
  }
  if (f._button == 3 || f.shiftKey || f.ctrlKey) {
    $WH.Tooltip.hide();
    setTimeout(Listview.headerFilter.bind(this, b, null), 1)
  } else {
    this.sortBy(c + 1)
  }
  return false
};
Listview.headerFilter = function (c, g) {
  var l = "";
  if (c.__filter) {
    if (c.__filter.invert) {
      l += "!"
    }
    l += c.__filter.text
  }
  if (g == null) {
    var g = prompt($WH.sprintf(LANG.prompt_colfilter1 + (c.type == "text" ? LANG.prompt_colfilter2 : LANG.prompt_colfilter3), c.name), l)
  }
  if (g != null) {
    var f = {
      text: "",
      type: -1
    };
    g = $WH.trim(g.replace(/\s+/g, " "));
    if (!g && this.onEmptyFilter) {
      this.onEmptyFilter(c)
    } else {
      if (g) {
        if (g.charAt(0) == "!" || g.charAt(0) == "-") {
          f.invert = 1;
          g = g.substr(1)
        }
        if (c.type == "text") {
          f.type = 0;
          f.text = g;
          if (f.invert) {
            f.regex = g_createOrRegex(g)
          } else {
            f.words = g.toLowerCase().split(" ")
          }
        }
        var k, b;
        if (g.match(/(>|=|<|>=|<=)\s*([0-9\.]+)/)) {
          k = parseFloat(RegExp.$2);
          if (!isNaN(k)) {
            switch (RegExp.$1) {
            case ">":
              f.type = 1;
              break;
            case "=":
              f.type = 2;
              break;
            case "<":
              f.type = 3;
              break;
            case ">=":
              f.type = 4;
              break;
            case "<=":
              f.type = 5;
              break
            }
            f.value = k;
            f.text = RegExp.$1 + " " + k
          }
        } else {
          if (g.match(/([0-9\.]+)\s*\-\s*([0-9\.]+)/)) {
            k = parseFloat(RegExp.$1);
            b = parseFloat(RegExp.$2);
            if (!isNaN(k) && !isNaN(b)) {
              if (k > b) {
                var h = k;
                k = b;
                b = h
              }
              if (k == b) {
                f.type = 2;
                f.value = k;
                f.text = "= " + k
              } else {
                f.type = 6;
                f.value = k;
                f.value2 = b;
                f.text = k + " - " + b
              }
            }
          } else {
            var e = g.toLowerCase().split(" ");
            if (!c.allText && e.length == 1 && !isNaN(k = parseFloat(e[0]))) {
              f.type = 2;
              f.value = k;
              f.text = "= " + k
            } else {
              if (c.type == "text") {
                f.type = 0;
                f.text = g;
                if (f.invert) {
                  f.regex = g_createOrRegex(g)
                } else {
                  f.words = e
                }
              }
            }
          }
        }
        if (f.type == -1) {
          alert(LANG.message_invalidfilter);
          return
        }
      }
    }
    if (!c.__filter || f.text != c.__filter.text || f.invert != c.__filter.invert) {
      var j = c.__th.firstChild.firstChild;
      if (g && f.text) {
        if (!c.__filter) {
          j.className = "q5";
          this.nFilters++
        }
        c.__filter = f
      } else {
        if (c.__filter) {
          j.className = "";
          this.nFilters--
        }
        c.__filter = null
      }
      this.updateFilters(1)
    }
  }
};
Listview.headerOver = function (b, c, g) {
  if (!((this.sortable && (c.sortable == null || c.sortable)) || (this.filtrable && (c.filtrable == null || c.filtrable)))) {
    return
  }
  var f = "";
  if ($WH.isset("g_thottbot") && g_thottbot) {
    f += '<b class="w">' + (c.tooltip ? c.tooltip : c.name) + "</b>"
  } else {
    f += '<b class="q1">' + (c.tooltip ? c.tooltip : c.name) + "</b>"
  }
  if (c.__filter) {
    f += "<br />" + $WH.sprintf((c.__filter.invert ? LANG.tooltip_colfilter2 : LANG.tooltip_colfilter1), c.__filter.text)
  }
  f += '<br /><span class="q2">' + LANG.tooltip_lvheader1 + "</span>";
  if (this.filtrable && (c.filtrable == null || c.filtrable)) {
    f += '<br /><span class="q2">' + ($WH.Browser.opera ? LANG.tooltip_lvheader3 : LANG.tooltip_lvheader2) + "</span>"
  }
  $WH.Tooltip.show(b, f, 0, 0, "q")
};
Listview.extraCols = {
  id: {
    id: "id",
    name: "ID",
    width: "5%",
    compute: function (b, c) {
      if (b.id) {
        $WH.ae(c, $WH.ct(b.id))
      }
    }
  },
  patch: {
    id: "obj-patch",
    name: LANG.patch,
    compute: function (g, j) {
      if (typeof g.patch != "undefined") {
        var b = parseInt(g.patch);
        if (b == 0 || b == -1) {
          $WH.ae(j, $WH.ct("???"))
        } else {
          var c = Math.floor(b / 10000);
          var f = Math.floor(b / 100) % 100;
          var h = b % 100;
          var e = $WH.sprintf("$1.$2.$3", c, f, h);
          $WH.ae(j, $WH.ct(e))
        }
      }
    },
    sortFunc: function (e, c, f) {
      if (e.patch == c.patch) {
        return 0
      } else {
        if (e.patch < c.patch) {
          return -1
        } else {
          return 1
        }
      }
    }
  },
  date: {
    id: "obj-date",
    name: LANG.added,
    compute: function (e, f) {
      if (e.date) {
        if (e.date <= 86400) {
          $WH.ae(f, $WH.ct("???"))
        } else {
          var b = new Date(e.date * 1000);
          var c = (g_serverTime - b) / 1000;
          return g_formatDate(f, c, b, null, true)
        }
      }
    },
    sortFunc: function (e, c, f) {
      if (e.date == c.date) {
        return 0
      } else {
        if (e.date < c.date) {
          return -1
        } else {
          return 1
        }
      }
    }
  },
  cost: {
    id: "cost",
    name: LANG.cost,
    getValue: function (b) {
      if (b.cost) {
        return (b.cost[2] && b.cost[2][0] ? b.cost[2][0][1] : 0) || (b.cost[1] && b.cost[1][0] ? b.cost[1][0][1] : 0) || b.cost[0]
      }
    },
    compute: function (h, j) {
      if (h.cost) {
        var f = h.cost[0];
        var e = null;
        var c = h.cost[2];
        var b = h.cost[1];
        var g = 0;
        if (h.side != null) {
          e = h.side
        } else {
          if (h.react != null) {
            if (h.react[0] == 1 && h.react[1] == -1) {
              e = 1
            } else {
              if (h.react[0] == -1 && h.react[1] == 1) {
                e = 2
              }
            }
          }
        }
        Listview.funcBox.appendMoney(j, f, e, c, b, g)
      }
    },
    sortFunc: function (e, c, f) {
      if (e.cost == null) {
        return -1
      } else {
        if (c.cost == null) {
          return 1
        }
      }
      var k = 0,
          j = 0,
          h = 0,
          g = 0;
      if (e.cost[2] != null) {
        $WH.array_walk(e.cost[2], function (b, l, n, m) {
          k += Math.pow(10, m) + b[1]
        })
      }
      if (c.cost[2] != null) {
        $WH.array_walk(c.cost[2], function (b, l, n, m) {
          j += Math.pow(10, m) + b[1]
        })
      }
      if (e.cost[1] != null) {
        $WH.array_walk(e.cost[1], function (b, l, n, m) {
          h += Math.pow(10, m) + b[1]
        })
      }
      if (c.cost[1] != null) {
        $WH.array_walk(c.cost[1], function (b, l, n, m) {
          g += Math.pow(10, m) + b[1]
        })
      }
      return $WH.strcmp(k, j) || $WH.strcmp(h, g) || $WH.strcmp(e.cost[0], c.cost[0])
    }
  },
  count: {
    id: "count",
    name: LANG.count,
    value: "count",
    compute: function (c, e) {
      if (!(this._totalCount > 0 || c.outof > 0)) {
        return
      }
      if (c.outof) {
        var b = $WH.ce("div");
        b.className = "small q0";
        $WH.ae(b, $WH.ct($WH.sprintf(LANG.lvdrop_outof, c.outof)));
        $WH.ae(e, b)
      }
      return c.count > 0 ? c.count : "??"
    },
    getVisibleText: function (b) {
      var c = b.count;
      if (b.outof) {
        c += " " + b.outof
      }
      return c
    },
    sortFunc: function (e, c, f) {
      if (e.count == null) {
        return -1
      } else {
        if (c.count == null) {
          return 1
        }
      }
      return $WH.strcmp(e.count, c.count)
    }
  },
  percent: {
    id: "percent",
    name: "%",
    value: "percent",
    compute: function (row, td) {
      var personalLootDifficulty = this.selectedDifficulty == 5 || this.selectedDifficulty == 17;
      if ((row.modes && personalLootDifficulty) || (g_pageInfo && g_pageInfo.type == 1 && g_world_bosses[g_pageInfo.typeId]) || (g_pageInfo && g_pageInfo.type == 3 && (g_world_bosses[row.id] || row.personal_loot))) {
        $(td).addClass("tip").mouseover(function (event) {
          $WH.Tooltip.showAtCursor(event, LANG.personal_loot_tt, 0, 0, "q")
        }).mousemove(function (event) {
          $WH.Tooltip.cursorUpdate(event)
        }).mouseout(function () {
          $WH.Tooltip.hide()
        });
        return LANG.personal_loot_abbrev
      }
      if (row.count <= 0) {
        return "??"
      }
      if (row.pctstack) {
        var text = "";
        var data = eval("(" + row.pctstack + ")");
        for (var amt in data) {
          var pct = (data[amt] * row.percent) / 100;
          if (pct >= 1.95) {
            pct = parseFloat(pct.toFixed(0))
          } else {
            if (pct >= 0.195) {
              pct = parseFloat(pct.toFixed(1))
            } else {
              pct = parseFloat(pct.toFixed(2))
            }
          }
          text += $WH.sprintf(LANG.stackof_format, amt, pct) + "<br />"
        }
        $(td).addClass("tip").mouseover(function (event) {
          $WH.Tooltip.showAtCursor(event, text, 0, 0, "q")
        }).mousemove(function (event) {
          $WH.Tooltip.cursorUpdate(event)
        }).mouseout(function () {
          $WH.Tooltip.hide()
        })
      }
      var value = parseFloat(row.percent.toFixed(row.percent >= 1.95 ? 0 : (row.percent >= 0.195 ? 1 : 2)));
      if (row.pctstack) {
        $(td).append($("<span>").addClass("tip").text(value))
      } else {
        return value
      }
    },
    getVisibleText: function (b) {
      if (b.count <= 0) {
        return "??"
      }
      if (b.percent >= 1.95) {
        return b.percent.toFixed(0)
      } else {
        if (b.percent >= 0.195) {
          return parseFloat(b.percent.toFixed(1))
        } else {
          return parseFloat(b.percent.toFixed(2))
        }
      }
    },
    sortFunc: function (f, c, g) {
      if (f.count == null) {
        return -1
      } else {
        if (c.count == null) {
          return 1
        }
      }
      if (f.percent >= 1.95) {
        var e = f.percent.toFixed(0)
      } else {
        if (f.percent >= 0.195) {
          e = parseFloat(f.percent.toFixed(1))
        } else {
          e = parseFloat(f.percent.toFixed(2))
        }
      }
      if (c.percent >= 1.95) {
        var h = c.percent.toFixed(0)
      } else {
        if (c.percent >= 0.195) {
          h = parseFloat(c.percent.toFixed(1))
        } else {
          h = parseFloat(c.percent.toFixed(2))
        }
      }
      return $WH.strcmp(e, h)
    }
  },
  stock: {
    id: "stock",
    name: LANG.stock,
    width: "10%",
    value: "stock",
    compute: function (b, c) {
      if (b.stock > 0) {
        return b.stock
      } else {
        return String.fromCharCode(8734)
      }
    },
    getVisibleText: function (b) {
      if (b.stock > 0) {
        return b.stock
      } else {
        return String.fromCharCode(8734) + " infinity"
      }
    }
  },
  currency: {
    id: "currency",
    name: LANG.currency,
    getValue: function (b) {
      if (b.currency) {
        return (b.currency[0] ? b.currency[0][1] : 0)
      }
    },
    compute: function (c, e) {
      if (c.currency) {
        var b = null;
        if (c.side != null) {
          b = c.side
        } else {
          if (c.react != null) {
            if (c.react[0] == 1 && c.react[1] == -1) {
              b = 1
            } else {
              if (c.react[0] == -1 && c.react[1] == 1) {
                b = 2
              }
            }
          }
        }
        Listview.funcBox.appendMoney(e, null, b, null, c.currency)
      }
    },
    sortFunc: function (e, c, f) {
      if (e.currency == null) {
        return -1
      } else {
        if (c.currency == null) {
          return 1
        }
      }
      var h = 0,
          g = 0;
      $WH.array_walk(e.currency, function (b, j, l, k) {
        h += Math.pow(10, k) + b[1]
      });
      $WH.array_walk(c.currency, function (b, j, l, k) {
        g += Math.pow(10, k) + b[1]
      });
      return $WH.strcmp(h, g)
    }
  },
  mode: {
    id: "mode",
    name: "Mode",
    after: "name",
    type: "text",
    compute: function (e, f) {
      if (e.modes && e.modes.mode) {
        if (this.validateBonuses) {
          for (var b in this.validateBonuses) {
            if ($WH.in_array(e.bonustrees, this.validateBonuses[b]) != -1) {
              if (this.diffLangref && this.diffLangref[this.selectedDifficulty]) {
                return this.diffLangref[this.selectedDifficulty]
              } else {
                break
              }
            }
          }
        }
        if (e.bonustrees && this.diffLangref && this.diffLangref[this.selectedDifficulty]) {
          return this.diffLangref[this.selectedDifficulty]
        }
        var c = [983040, 65784];
        if (((e.modes.mode & c[0]) == c[0]) || ((e.modes.mode & c[1]) == c[1]) || (e.modes.mode & 3) == 3) {
          return LANG.su_note_all
        }
        return Listview.extraCols.mode.getVisibleText(e)
      }
    },
    getVisibleText: function (q) {
      var b = q.modes.mode & 983040;
      if (b) {
        switch (b) {
        case 65536:
          return LANG.tab_normal;
        case 131072:
          return LANG.tab_heroic;
        case 262144:
          return LANG.tab_mythic;
        case 524288:
          return LANG.tab_raidfinder;
        default:
          break
        }
      } else {
        var g = !! (q.modes.mode & 26);
        var j = !! (q.modes.mode & 97);
        var l = !! (q.modes.mode & 33554432);
        var h = !! (q.modes.mode & 67108864);
        var o = !! (q.modes.mode & 40);
        var f = !! (q.modes.mode & 80);
        var e = !! (q.modes.mode & 128);
        var c = (q.modes.mode & 65787) == 128;
        var m = !! (q.modes.mode & 65536);
        var k = (q.modes.mode & 65787) == 65536;
        var n;
        if (o && !f) {
          n = 10
        } else {
          if (f && !o) {
            n = 25
          }
        }
        var p;
        if (g && !j && !l && !h) {
          p = "normal"
        } else {
          if (j && !g && !l && !h) {
            p = "heroic"
          } else {
            if (l && !g && !j && !h) {
              p = "mythic"
            }
          }
        }
        if (p && !e && !m) {
          if (n && !l) {
            return $WH.sprintf(LANG["tab_" + p + "X"], n)
          } else {
            return LANG["tab_" + p]
          }
        }
        if (n && !e && !m) {
          return $WH.sprintf(LANG.lvzone_xman, n)
        }
        if (c) {
          return LANG.tab_raidfinder
        }
        if (k) {
          return LANG.tab_flexible
        }
      }
      return LANG.su_note_all
    },
    sortFunc: function (e, c, f) {
      return -$WH.strcmp(Listview.extraCols.mode.compute.call(this, e), Listview.extraCols.mode.compute.call(this, c))
    }
  },
  requires: {
    id: "requires",
    name: LANG.requires,
    type: "text",
    compute: function (c, e) {
      if (c.achievement && g_achievements[c.achievement]) {
        $WH.nw(e);
        e.className = "small";
        e.style.lineHeight = "18px";
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/achievement=" + c.achievement;
        b.className = "icontiny tinyspecial";
        b.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + g_achievements[c.achievement].icon.toLowerCase() + ".gif)";
        b.style.whiteSpace = "nowrap";
        $WH.st(b, g_achievements[c.achievement]["name_" + Locale.getName()]);
        $WH.ae(e, b)
      }
    },
    getVisibleText: function (b) {
      if (b.achievement && g_achievements[b.achievement]) {
        return g_achievements[b.achievement].name
      }
    },
    sortFunc: function (e, c, f) {
      return $WH.strcmp(this.getVisibleText(e), this.getVisibleText(c))
    }
  },
  reqskill: {
    id: "reqskill",
    name: LANG.skill,
    width: "10%",
    value: "reqskill",
    before: "yield"
  },
  yield: {
    id: "yield",
    name: LANG.yields,
    type: "text",
    align: "left",
    span: 2,
    value: "name",
    compute: function (f, h, e) {
      if (f.yield && g_items[f.yield]) {
        var c = $WH.ce("td");
        c.style.width = "1px";
        c.style.paddingRight = "0";
        c.style.borderRight = "none";
        $WH.ae(c, g_items.createIcon(f.yield, 1));
        $WH.ae(e, c);
        h.style.borderLeft = "none";
        var g = $WH.ce("div");
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/item=" + f.yield;
        b.className = "q" + g_items[f.yield].quality;
        $WH.ae(b, $WH.ct(g_items[f.yield]["name_" + Locale.getName()]));
        $WH.ae(g, b);
        $WH.ae(h, g)
      }
    },
    getVisibleText: function (b) {
      if (b.yield && g_items[b.yield]) {
        return g_items[b.yield]["name_" + Locale.getName()]
      }
    },
    sortFunc: function (e, c, f) {
      if (!e.yield || !g_items[e.yield] || !c.yield || !g_items[c.yield]) {
        return (e.yield && g_items[e.yield] ? 1 : (c.yield && g_items[c.yield] ? -1 : 0))
      }
      return -$WH.strcmp(g_items[e.yield].quality, g_items[c.yield].quality) || $WH.strcmp(g_items[e.yield]["name_" + Locale.getName()], g_items[c.yield]["name_" + Locale.getName()])
    }
  },
  compare: {
    id: "compare",
    name: LANG.completion,
    getValue: function (b) {
      return Math.floor(b.compare.progress * 100)
    },
    compute: function (c, e, b) {
      $WH.ae(e, Listview.funcBox.getComparisonText(c.compare, this.completionMode, this.dataSource, this.completionText))
    },
    sortFunc: function (e, c, f) {
      return e.compare.progress - c.compare.progress
    }
  },
  modify: {
    id: "modify",
    sortable: 0,
    filtrable: 0,
    compute: function (e, f, c) {
      if (this.createModifyButton) {
        f.style.cursor = "default";
        $(f).click(function (g) {
          g.stopPropagation()
        });
        var b = $WH.ce("a");
        b.href = "javascript:;";
        b.className = "icon-edit";
        b.innerHTML = LANG.li_menu_modify;
        $WH.ae(f, this.createModifyButton(e, b))
      }
    }
  },
  bpetquality: {
    id: "quality",
    name: LANG.quality,
    compute: function (e, f, c) {
      var b = (e.compare.data[0].bpet && e.compare.data[0].bpet.id) ? g_item_qualities[e.compare.data[0].bpet.quality] : "";
      $WH.ae(f, $WH.ct(b))
    },
    sortFunc: function (f, e, g) {
      var c = (f.compare.data[0].bpet && f.compare.data[0].bpet.id) ? f.compare.data[0].bpet.quality : -1;
      var h = (e.compare.data[0].bpet && e.compare.data[0].bpet.id) ? e.compare.data[0].bpet.quality : -1;
      return c - h
    }
  }
};
Listview.funcBox = {
  getCurrentItemBonuses: function (f) {
    var j = [];
    var k = f.bonuses ? f.bonuses : (this.itemBonusesFromDD ? this.itemBonusesFromDD : null);
    var g = !f.bonuses && this.itemBonusesFromDD;
    var e = g ? this.validateBonuses : [];
    if ((!k || !k.length) && f.context) {
      var c = Listview.funcBox.getBonusDataForContext.call(this, f.context);
      if (c.length == 2) {
        k = c[0];
        e = c[1];
        g = true
      }
    }
    if (k) {
      for (var b in k) {
        var h = k[b];
        if (($WH.in_array(j, h) == -1) && (!g || ($WH.in_array(f.bonustrees, e[b]) != -1))) {
          j.push(h)
        }
      }
    }
    return j
  },
  getItemLevelWithBonuses: function (e) {
    var c = e.level;
    var g = Listview.funcBox.getCurrentItemBonuses.call(this, e);
    if (g.length > 0 && $WH.isset("g_itembonuses")) {
      for (var b in g) {
        var f = g[b];
        if (g_itembonuses[f]) {
          $WH.array_walk(g_itembonuses[f], function (h) {
            if (h[0] == 1) {
              c += h[1]
            }
          })
        }
      }
    }
    return c
  },
  filterByClass: function (c) {
    if (c) {
      $WH.localStorage.set("dynamic_quest_class", c);
      this.classFilter = function (f) {
        for (var e in f.specs) {
          if ($WH.in_array(g_chr_specs_by_class[c], f.specs[e]) != -1) {
            return true
          }
        }
        return false
      };
      if (!$WH.isset("g_filterByClassAchievement")) {
        if (!($WH.isset("g_user") && g_user.id)) {
          return
        }
        $.ajax({
          url: "/website-achievement-explored",
          data: {
            trigger: "bosslootfilter"
          },
          success: function () {
            AchievementCheck()
          },
          type: "POST"
        });
        window.g_filterByClassAchievement = true
      }
    } else {
      $WH.localStorage.remove("dynamic_quest_class");
      this.classFilter = null;
      for (var b in this.data) {
        this.data[b].__tr = null
      }
    }
    this.updateFilters(1);
    this.applySort();
    this.refreshRows(true)
  },
  createSimpleCol: function (e, f, b, c) {
    return {
      id: e,
      name: (LANG[f] !== undefined ? LANG[f] : f),
      width: b,
      value: c
    }
  },
  initLootTable: function (c) {
    var b;
    if (this._totalCount != null) {
      b = this._totalCount
    } else {
      b = c.outof
    }
    if (b == 0) {
      if (c.count != -1) {
        c.percent = c.count
      } else {
        c.percent = 0
      }
    } else {
      c.percent = c.count / b * 100
    }(Listview.funcBox.initModeFilter.bind(this, c))()
  },
  initModeFilter: function (c) {
    if (this._lootModes == null) {
      this._lootModes = {
        99: 0
      }
    }
    if (this._distinctModes == null) {
      this._distinctModes = {
        99: 0
      }
    }
    if ((!c.modes || c.modes.mode == 4) && c.classs != 12 && c.commondrop) {
      this._lootModes[99]++;
      this._distinctModes[99]++
    } else {
      if (c.modes) {
        for (var b = -2; b <= 24; ++b) {
          if (this._lootModes[b] == null) {
            this._lootModes[b] = 0
          }
          if (c.modes.mode & 1 << parseInt(b) + 2) {
            this._lootModes[b]++
          }
        }
        if (this._distinctModes[c.modes.mode] == null) {
          this._distinctModes[c.modes.mode] = 0
        }
        this._distinctModes[c.modes.mode]++
      }
    }
  },
  addModeIndicator: function () {
    var b = 0;
    for (var m in this._distinctModes) {
      if (this._distinctModes[m]) {
        b++
      }
    }
    if (this._distinctModes[4] && b < 2) {
      return
    }
    var g = location.hash.match(/:mode=([^:]+)/),
        e = [0, -1, -2, 23, 24, 1, 3, 2, 4, 5, 14, 15, 16, 17, 99],
        p = {
        "-2": LANG.tab_heroic,
        "-1": LANG.tab_normal,
        0: LANG.tab_noteworthy,
        1: $WH.sprintf(LANG.tab_normalX, 10),
        2: $WH.sprintf(LANG.tab_normalX, 25),
        3: $WH.sprintf(LANG.tab_heroicX, 10),
        4: $WH.sprintf(LANG.tab_heroicX, 25),
        5: LANG.tab_raidfinder,
        14: LANG.tab_normal,
        15: LANG.tab_heroic,
        16: LANG.tab_mythic,
        17: LANG.tab_raidfinder,
        23: LANG.tab_mythic,
        24: LANG.tab_timewalking,
        99: ""
        },
        r = {};
    this.diffLangref = {};
    $.extend(this.diffLangref, p);
    if (WAS.showAds()) {
      r[1] = p[1];
      r[2] = p[2];
      r[3] = p[3];
      r[4] = p[4];
      r[5] = p[5];
      p[1] = LANG.lvitem_normal + 10;
      p[2] = LANG.lvitem_normal + 25;
      p[3] = LANG.lvitem_heroic + 10;
      p[4] = LANG.lvitem_heroic + 25;
      p[5] = LANG.lvitem_lfr;
      p[14] = LANG.lvitem_normal;
      p[15] = LANG.lvitem_heroic;
      p[16] = LANG.lvitem_mythic;
      p[17] = LANG.lvitem_lfr;
      p[23] = LANG.lvitem_mythic;
      p[24] = LANG.lvitem_timewalking
    }
    var h = this,
        c = [],
        q;
    var o = function (u, f, j) {
      g_setSelectedLink(this, "lootmode-" + h.tabIndex);
      h.selectedDifficulty = f;
      var t = Listview.funcBox.getItemBonusesForDifficulty.call(h, f);
      h.itemBonusesFromDD = t[0];
      h.validateBonuses = t[1];
      h.customPound = h.id + (f != null ? ":mode=" + g_urlize(p[f].replace(" ", "")) : "");
      h.customFilter = function (v) {
        return Listview.funcBox.filterMode(v, h._totalCount, u)
      };
      h.updateFilters(1);
      h.applySort();
      h.refreshRows(true);
      if (j) {
        h.updatePound(1)
      }
    };
    var l = null;
    for (var k = 0, n = e.length; k < n; ++k) {
      var m = e[k];
      if (!this._lootModes[m]) {
        continue
      }
      q = $("<a><span>" + p[m] + "</span> (" + this._lootModes[m] + ")</a>");
      q[0].f = o.bind(q[0], 1 << m + 2, m, 1);
      q.click(q[0].f);
      if (m == -2 || m == 3 || m == 4 || m == 15 || m == 16 || m == 23) {
        q.addClass("icon-heroic")
      }
      c.push({
        indicator: $('<span class="indicator-mode"></span>').append(q).append($("<b" + (m < -1 || m > 2 ? ' class="icon-heroic"' : "") + ">" + p[m] + " (" + this._lootModes[m] + ")</b>")),
        tooltip: r[m]
      });
      if (c.length == 1) {
        l = o.bind(q[0], 1 << m + 2, m, 0)
      }
      if (g && g[1] == g_urlize(p[m].replace(" ", ""))) {
        (q[0].f)()
      }
    }
    if (l && (!g_setSelectedLink.groups || !g_setSelectedLink.groups["lootmode-" + h.tabIndex])) {
      l()
    }
    var s = false;
    for (var m = 0, n = c.length; m < n; ++m) {
      q = $("a", c[m].indicator);
      if (!$("span", q).html() && c.length == 3) {
        s = true
      } else {
        this.createIndicator(c[m].indicator, null, q[0].f, c[m].tooltip)
      }
    }
    if (s) {
      l()
    }
    if (this.showLootSpecs) {
      this.classSelectorDiv.style.marginTop = "0px"
    }
    $(this.noteTop).append($('<div class="clear"></div>'))
  },
  filterMode: function (f, c, e) {
    if (c != null && f.count != null) {
      if (f._count == null) {
        f._count = f.count
      }
      var b = f._count;
      if (e != null && f.modes[e]) {
        b = f.modes[e].count;
        c = f.modes[e].outof
      }
      f.__tr = null;
      f.count = b;
      f.outof = c;
      if (c) {
        f.percent = b / c * 100
      } else {
        f.percent = b
      }
    }
    return (e != null ? ((!f.modes || f.modes.mode == 4) && f.classs != 12 && f.commondrop ? (e == 32) : (f.modes && (f.modes.mode & e))) : true)
  },
  getItemBonusesForDifficulty: function (c) {
    var b = [];
    if (c && $WH.isset("g_pageInfo")) {
      var f = c < 0 ? -c : c;
      var g = 0;
      var h = g_pageInfo.typeId;
      switch (g_pageInfo.type) {
      case 1:
        g = (g_npcs[h] && g_npcs[h].hasOwnProperty("location")) ? g_npcs[h].location[0] : 0;
        break;
      case 7:
        g = h;
        break;
      default:
        break
      }
      var e = 0;
      if ($WH.isset("g_mapdifficulties") && g_mapdifficulties[g] && g_mapdifficulties[g][f]) {
        e = g_mapdifficulties[g][f]
      } else {
        if ($WH.isset("g_difficulties") && g_difficulties[f]) {
          e = g_difficulties[f].order
        }
      }
      b = Listview.funcBox.getBonusDataForContext.call(this, e)
    }
    return b
  },
  getBonusDataForContext: function (h) {
    var e = [];
    if (h && $WH.isset("g_item_bonuscontexts") && g_item_bonuscontexts[h]) {
      var j = [];
      var f = [];
      for (var g in g_item_bonuscontexts[h]) {
        var c = g_item_bonuscontexts[h][g];
        j.push(c[1]);
        f.push(c[0])
      }
      e = [j, f]
    }
    return e
  },
  initSubclassFilter: function (c) {
    var b = c.classs || 0;
    if (this._itemClasses == null) {
      this._itemClasses = {}
    }
    if (this._itemClasses[b] == null) {
      this._itemClasses[b] = 0
    }
    this._itemClasses[b]++
  },
  addSubclassIndicator: function () {
    var l = location.hash.match(/:type=([^:]+)/),
        b = [];
    for (var k in g_item_classes) {
      b.push({
        i: k,
        n: g_item_classes[k]
      })
    }
    b.sort(function (j, f) {
      return $WH.strcmp(j.n, f.n)
    });
    var n = function (j, f) {
      g_setSelectedLink(this, "itemclass");
      e.customPound = e.id + (j != null ? ":type=" + j : "");
      e.customFilter = function (p) {
        return j == null || j == p.classs
      };
      e.updateFilters(1);
      e.applySort();
      e.refreshRows();
      if (f) {
        e.updatePound(1)
      }
    };
    var e = this,
        c = [],
        o;
    o = $("<a><span>" + LANG.su_note_all + "</span></a>");
    o[0].f = n.bind(o[0], null, 1);
    o.click(o[0].f);
    var h = n.bind(o[0], null, 0);
    h();
    c.push($('<span class="indicator-mode"></span>').append(o).append($("<b>" + LANG.su_note_all + "</b>")));
    for (var g = 0, m = b.length; g < m; ++g) {
      var k = b[g].i;
      if (!this._itemClasses[k]) {
        continue
      }
      o = $("<a><span>" + g_item_classes[k] + "</span> (" + this._itemClasses[k] + ")</a>");
      o[0].f = n.bind(o[0], k, 1);
      o.click(o[0].f);
      c.push($('<span class="indicator-mode"></span>').append(o).append($("<b>" + g_item_classes[k] + " (" + this._itemClasses[k] + ")</b>")));
      if (l && l[1] == g_urlize(k)) {
        (o[0].f)()
      }
    }
    if (c.length > 2) {
      for (var k = 0, m = c.length; k < m; ++k) {
        this.createIndicator(c[k], null, $("a", c[k])[0].f)
      }
    }
  },
  initStatisticFilter: function (b) {
    if (this._achievTypes == null) {
      this._achievTypes = {}
    }
    if (this._achievTypes[b.type] == null) {
      this._achievTypes[b.type] = 0
    }
    this._achievTypes[b.type]++
  },
  addStatisticIndicator: function () {
    var k = location.hash.match(/:type=([^:]+)/),
        b = [];
    for (var h in g_achievement_types) {
      b.push({
        i: h,
        n: g_achievement_types[h]
      })
    }
    b.sort(function (j, f) {
      return $WH.strcmp(j.n, f.n)
    });
    var n = function (j, f) {
      g_setSelectedLink(this, "achievType");
      c.customPound = c.id + (j != null ? ":type=" + j : "");
      c.customFilter = function (p) {
        return j == null || j == p.type
      };
      c.updateFilters(1);
      c.applySort();
      c.refreshRows();
      if (f) {
        c.updatePound(1)
      }
    };
    var c = this,
        m = [],
        o;
    o = $("<a><span>" + LANG.su_note_all + "</span></a>");
    o[0].f = n.bind(o[0], null, 1);
    o.click(o[0].f);
    var g = n.bind(o[0], null, 0);
    g();
    m.push($('<span class="indicator-mode"></span>').append(o).append($("<b>" + LANG.su_note_all + "</b>")));
    for (var e = 0, l = b.length; e < l; ++e) {
      var h = b[e].i;
      if (!this._achievTypes[h]) {
        continue
      }
      o = $("<a><span>" + g_achievement_types[h] + "</span> (" + this._achievTypes[h] + ")</a>");
      o[0].f = n.bind(o[0], h, 1);
      o.click(o[0].f);
      m.push($('<span class="indicator-mode"></span>').append(o).append($("<b>" + g_achievement_types[h] + " (" + this._achievTypes[h] + ")</b>")));
      if (k && k[1] == h) {
        (o[0].f)()
      }
    }
    if (m.length > 2) {
      for (var h = 0, l = m.length; h < l; ++h) {
        this.createIndicator(m[h], null, $("a", m[h])[0].f)
      }
    }
  },
  initQuestFilter: function (c) {
    if (this._questTypes == null) {
      this._questTypes = {}
    }
    for (var b = 1; b <= 4; ++b) {
      if (this._questTypes[b] == null) {
        this._questTypes[b] = 0
      }
      if (c._type && (c._type & 1 << b - 1)) {
        this._questTypes[b]++
      }
    }
  },
  addQuestIndicator: function () {
    var h = location.hash.match(/:type=([^:]+)/);
    var k = function (m, f) {
      g_setSelectedLink(this, "questType");
      l.customPound = l.id + (m != null ? ":type=" + m : "");
      l.customFilter = function (n) {
        return m == null || (n._type & 1 << m - 1)
      };
      l.updateFilters(1);
      l.applySort();
      l.refreshRows();
      if (f) {
        l.updatePound(1)
      }
    };
    var l = this,
        g = [],
        c;
    c = $("<a><span>" + LANG.su_note_all + "</span></a>");
    c[0].f = k.bind(c[0], null, 1);
    c.click(c[0].f);
    var j = k.bind(c[0], null, 0);
    j();
    g.push($('<span class="indicator-mode"></span>').append(c).append($("<b>" + LANG.su_note_all + "</b>")));
    for (var e = 1; e <= 4; ++e) {
      if (!this._questTypes[e]) {
        continue
      }
      c = $("<a><span>" + g_quest_indicators[e] + "</span> (" + this._questTypes[e] + ")</a>");
      c[0].f = k.bind(c[0], e, 1);
      c.click(c[0].f);
      g.push($('<span class="indicator-mode"></span>').append(c).append($("<b>" + g_quest_indicators[e] + " (" + this._questTypes[e] + ")</b>")));
      if (h && h[1] == e) {
        (c[0].f)()
      }
    }
    if (g.length > 2) {
      for (var e = 0, b = g.length; e < b; ++e) {
        this.createIndicator(g[e], null, $("a", g[e])[0].f)
      }
    }
  },
  initSpellFilter: function (c) {
    if (this._spellTypes == null) {
      this._spellTypes = {}
    }
    if (this._spellTypes[c.cat] == null) {
      this._spellTypes[c.cat] = 0
    }
    this._spellTypes[c.cat]++;
    if (c.talentspec && c.talentspec.length) {
      switch (c.cat) {
      case -14:
      case -12:
      case -2:
        if (this._spellSpecs == null) {
          this._spellSpecs = {}
        }
        for (var b = 0; b < c.talentspec.length; b++) {
          if (this._spellSpecs[c.talentspec[b]] == null) {
            this._spellSpecs[c.talentspec[b]] = 0
          }
          this._spellSpecs[c.talentspec[b]]++
        }
        break
      }
    }
  },
  addSpellIndicator: function () {
    var k = location.hash.match(/:type=([^:]+)/);
    var l = location.hash.match(/:spec=([^:]+)/);
    var p = function (s, f) {
      g_setSelectedLink(this, "spellType");
      var u = location.hash.match(/:spec=([^:]+)/);
      var t = u ? u[1] : null;
      g.customPound = g.id + (s != null ? ":type=" + s : "") + (t != null ? ":spec=" + t : "");
      g.customFilter = function (v) {
        return (t == null || ($WH.in_array(v.talentspec, t) != -1) || (v.cat == -13 && v.rank && v.rank.indexOf(g_chr_specs[t]) >= 0)) && (s == null || v.cat == s)
      };
      g.updateFilters(1);
      g.applySort();
      g.refreshRows();
      if (f) {
        g.updatePound(1)
      }
    };
    var m = function (u, f) {
      g_setSelectedLink(this, "spellSpec");
      var t = location.hash.match(/:type=([^:]+)/);
      var s = t ? t[1] : null;
      g.customPound = g.id + (s != null ? ":type=" + s : "") + (u != null ? ":spec=" + u : "");
      g.customFilter = function (v) {
        return (u == null || ($WH.in_array(v.talentspec, u) != -1) || (v.cat == -13 && v.rank && v.rank.indexOf(g_chr_specs[u]) >= 0)) && (s == null || v.cat == s)
      };
      g.updateFilters(1);
      g.applySort();
      g.refreshRows();
      if (f) {
        g.updatePound(1)
      }
    };
    var g = this,
        o = [],
        r;
    r = $("<a><span>" + LANG.su_note_all + "</span></a>");
    r[0].f = p.bind(r[0], null, 1);
    r.click(r[0].f);
    var h = p.bind(r[0], null, 0);
    h();
    o.push($('<span class="indicator-mode"></span>').append(r).append($("<b>" + LANG.su_note_all + "</b>")));
    for (var j in g_spell_categories) {
      if (!this._spellTypes[j]) {
        continue
      }
      r = $("<a><span>" + g_spell_categories[j] + "</span> (" + this._spellTypes[j] + ")</a>");
      r[0].f = p.bind(r[0], j, 1);
      r.click(r[0].f);
      o.push($('<span class="indicator-mode"></span>').append(r).append($("<b>" + g_spell_categories[j] + " (" + this._spellTypes[j] + ")</b>")));
      if (k && k[1] == j) {
        (r[0].f)()
      }
    }
    var e = -1;
    var b = [];
    if (this._wowClass) {
      b = g_chr_specs_by_class[this._wowClass]
    } else {
      for (j in g_chr_specs) {
        if (g_chr_specs.hasOwnProperty(j)) {
          b.push(j)
        }
      }
    }
    for (var q = 0; q < b.length; q++) {
      j = b[q];
      if (!this._spellSpecs[j]) {
        continue
      }
      if (e == -1) {
        r = $("<a><span>" + LANG.su_note_all + "</span></a>");
        r[0].f = m.bind(r[0], null, 1);
        r.click(r[0].f);
        m.call(r[0], null, 0);
        o.push($('<span class="indicator-mode"></span>').append(r).append($("<b>" + LANG.su_note_all + "</b>")));
        e = o.length - 1
      }
      r = $("<a><span>" + g_chr_specs[j] + "</span> (" + this._spellSpecs[j] + ")</a>");
      r[0].f = m.bind(r[0], j, 1);
      r.click(r[0].f);
      o.push($('<span class="indicator-mode"></span>').append(r).append($("<b>" + g_chr_specs[j] + " (" + this._spellSpecs[j] + ")</b>")));
      if (l && l[1] == j) {
        (r[0].f)()
      }
    }
    var c;
    if (o.length > 2) {
      for (var j = 0, n = o.length; j < n; ++j) {
        c = this.createIndicator(o[j], null, $("a", o[j])[0].f);
        if (j > 0 && j == e) {
          c.style.clear = "left"
        }
      }
    }
  },
  initComparisonFilter: function (g, c) {
    if (g.__deleted) {
      return
    }
    if (this._comparisonSources == null) {
      this._comparisonSources = {
        all: 0,
        identical: 0,
        similar: 0,
        extra: 0,
        missing: 0
      }
    }
    if (g.compare.data.length < 2) {
      return
    }
    this._comparisonSources.all++;
    if (g.compare.progress == 1) {
      this._comparisonSources.identical++
    } else {
      if (g.compare.progress > 0) {
        this._comparisonSources.similar++
      } else {
        if (g.compare.primary == this.dataSource) {
          this._comparisonSources.extra++
        } else {
          this._comparisonSources.missing++
        }
      }
    }
    if (this._comparisonCategories == null) {
      this._comparisonCategories = {
        total: [0, 0, 0, 0,
        {},
        0]
      }
    }
    if (!this.compareSummary) {
      return
    }
    if (g.compare.primary != this.dataSource) {
      this._comparisonCategories.total[0]++
    }
    if (g.compare.progress == 1) {
      this._comparisonCategories.total[g.compare.auxiliary ? 5 : 1]++
    } else {
      if (g.compare.progress > 0) {
        this._comparisonCategories.total[2] += (c ? 1 : g.compare.progress);
        this._comparisonCategories.total[3]++
      }
    }
    if (!this.compareSummary.categoryId) {
      return
    }
    var e, f, b = g[this.compareSummary.categoryId];
    if (!$WH.is_array(b)) {
      b = [b]
    }
    for (f = 0; f < b.length; f++) {
      e = b[f];
      if (this.compareSummary.names[e]) {
        if (this._comparisonCategories[e] == null) {
          this._comparisonCategories[e] = [0, 0, 0, 0,
          {
            all: 0,
            identical: 0,
            similar: 0,
            extra: 0,
            missing: 0
          },
          0]
        }
        if (g.compare.primary != this.dataSource) {
          this._comparisonCategories[e][0]++
        }
        this._comparisonCategories[e][4].all++;
        if (g.compare.progress == 1) {
          this._comparisonCategories[e][g.compare.auxiliary ? 5 : 1]++;
          this._comparisonCategories[e][4].identical++
        } else {
          if (g.compare.progress > 0) {
            this._comparisonCategories[e][2] += (c ? 1 : g.compare.progress);
            this._comparisonCategories[e][3]++;
            this._comparisonCategories[e][4].similar++
          } else {
            if (g.compare.primary == this.dataSource) {
              this._comparisonCategories[e][4].extra++
            } else {
              this._comparisonCategories[e][4].missing++
            }
          }
        }
      }
    }
  },
  addComparisonFilter: function () {
    this.removeIndicators();
    this.removeProgressBars();
    Listview.funcBox.addComparisonIndicator.call(this);
    Listview.funcBox.addComparisonProgressBars.call(this)
  },
  addComparisonIndicator: function () {
    if (!this._comparisonSources.all) {
      return
    }
    var l = location.hash.match(/:compare=([^:]+)/);
    var n = function (w, f) {
      g_setSelectedLink(this, h.id + "-compareSource");
      var t = location.hash.match(/:catg=([^:]+)/);
      var v = (t && t[1]) ? t[1] : null;
      var u = h.compareSummary.categoryId;
      h.customPound = h.id + (w != null ? ":compare=" + w : "") + (v != null ? ":catg=" + v : "");
      h.customFilter = function (y) {
        return ((w === null) || (w == "identical" && y.compare.progress == 1) || (w == "similar" && y.compare.progress > 0 && y.compare.progress < 1) || (w == "extra" && (y.compare.progress == -1 || (y.compare.progress == 0 && y.compare.primary == this.dataSource))) || (w == "missing" && y.compare.progress == 0 && y.compare.primary != this.dataSource)) && (v === null || v == y[u] || ($WH.is_array(y[u]) && $WH.in_array(y[u], v) >= 0))
      };
      h.updateFilters(1);
      h.applySort();
      h.refreshRows();
      if (f) {
        h.updatePound(1)
      }
    };
    var h = this,
        p = [],
        c = ["all", "identical", "similar", "extra", "missing"],
        r, s = this._comparisonSources;
    var e = location.hash.match(/:catg=([^:]+)/);
    var b = (e && e[1]) ? e[1] : null;
    var g = h.compareSummary.categoryId;
    if ((b !== null) && (this._comparisonCategories[b])) {
      s = this._comparisonCategories[b][4]
    }
    for (var k = 0; k < c.length; ++k) {
      var o = c[k];
      if (!s[o]) {
        continue
      }
      var q = this.completionMode ? this.completionText[o] : LANG["lvcomparison_" + o],
          j = "";
      if (o == "all") {
        o = null
      } else {
        j = " (" + s[o] + ")"
      }
      r = $("<a><span>" + q + "</span>" + j + "</a>");
      r[0].f = n.bind(r[0], o, 1);
      r.click(r[0].f);
      p.push($('<span class="indicator-mode"></span>').append(r).append($("<b>" + q + j + "</b>")));
      if (l && l[1] == o) {
        (r[0].f)()
      } else {
        if (o === null) {
          (n.bind(r[0], o, 0))()
        }
      }
    }
    for (var k = 0, m = p.length; k < m; ++k) {
      this.createIndicator(p[k], null, $("a", p[k])[0].f)
    }
    if (this.onAfterAddComparison) {
      this.onAfterAddComparison.call(this)
    }
  },
  addComparisonProgressBars: function () {
    if (!this._comparisonCategories.total[0]) {
      return
    }
    var h = location.hash.match(/:catg=([^:]+)/),
        k = this,
        g = this.compareSummary.categoryId;
    var j = function (m, l) {
      g_setSelectedLink(this, k.id + "-category");
      var f = location.hash.match(/:compare=([^:]+)/);
      var n = (f && f[1]) ? f[1] : null;
      k.customPound = k.id + (n != null ? ":compare=" + n : "") + (m != null ? ":catg=" + m : "");
      k.customFilter = function (o) {
        return (m === null || m == o[g]) && ((n === null) || (n == "identical" && o.compare.progress == 1) || (n == "similar" && o.compare.progress > 0 && o.compare.progress < 1) || (n == "extra" && (o.compare.progress == -1 || (o.compare.progress == 0 && o.compare.primary == this.dataSource))) || (n == "missing" && o.compare.progress == 0 && o.compare.primary != this.dataSource))
      };
      k.updateFilters(1);
      k.applySort();
      k.refreshRows();
      if (l) {
        k.updatePound(1);
        $WH.ee(k.noteIndicators);
        Listview.funcBox.addComparisonIndicator.call(k)
      }
    };
    this.createProgressBar(LANG.overallprogress, this._comparisonCategories.total, j, [null, 1], 4);
    $("tr:last-child td:last-child", this.noteProgressBars).click();
    if (this.compareSummary.order) {
      for (var e = 0; e < this.compareSummary.order.length; ++e) {
        var c = this.compareSummary.order[e];
        if (!this.compareSummary.names[c] || !this._comparisonCategories[c]) {
          continue
        }
        var b = this._comparisonCategories[c];
        if (!b[0]) {
          if (!b[4].all) {
            continue
          }
          b = [b[4].all, b[4].extra, 0, 0]
        }
        this.createProgressBar(this.compareSummary.names[c], b, j, [c, 1]);
        if (h && h[1] == c) {
          $("tr:last-child td:last-child", this.noteProgressBars).click()
        }
      }
    }
  },
  addItemSummary: function () {
    if (!this.noteItemSummary) {
      this.noteItemSummary = $WH.ce("div");
      this.noteItemSummary.className = "listview-summary-wrapper";
      $(this.noteItemSummary).insertAfter($(this.noteTop))
    }
    $WH.ee(this.noteItemSummary);
    g_summaries["listview-summary-" + this.id] = null;
    var f = $WH.ce("div");
    f.className = "listview-summary-background";
    $WH.ae(this.noteItemSummary, f);
    var j = $WH.ce("div");
    j.className = "listview-summary";
    $WH.ae(f, j);
    var h = $WH.ce("div");
    h.className = "listview-summary-inner";
    $WH.ae(j, h);
    var b = $WH.ce("a");
    b.className = "listview-summary-left";
    b.onclick = function () {
      var l = $(this);
      var m = l.siblings(".listview-summary-inner");
      m.animate({
        scrollLeft: -1 * m.width()
      }, 1000);
      l.removeClass("show");
      l.siblings(".listview-summary-right").addClass("show")
    };
    $WH.ae(b, $WH.ce("span"));
    $WH.ae(j, b);
    b = $WH.ce("a");
    b.className = "listview-summary-right";
    b.onclick = function () {
      var l = $(this);
      var m = l.siblings(".listview-summary-inner");
      m.animate({
        scrollLeft: m.width()
      }, 1000);
      l.removeClass("show");
      l.siblings(".listview-summary-left").addClass("show")
    };
    $WH.ae(b, $WH.ce("span"));
    $WH.ae(j, b);
    var g = [];
    for (var e = 0; e < this.data.length; ++e) {
      if (this.data[e].raw[0] != 4 && this.data[e].raw[0] != 19) {
        var c = this.data[e].raw.slice(1, this.data[e].raw.length);
        c[8] = 0;
        g.push([c])
      }
    }
    this.attachedSummary = new Summary({
      id: "listview-summary-" + this.id,
      template: "listmanager",
      parent: h,
      groups: g,
      level: this.characterSettings.level,
      talentSpec: this.characterSettings.talentSpec,
      charClass: this.characterSettings.charClass,
      race: this.characterSettings.race,
      selectedTalents: this.characterSettings.selectedTalents,
      noMaxHighlight: this.compareSummaryNoMaxHighlight,
      totalName: this.compareSummaryTotalName
    });
    var k = function () {
      var m = $(this),
          l = $("table.grid", m);
      if (m.width() < l.width()) {
        m.siblings(".listview-summary-right").addClass("show")
      } else {
        m.siblings(".listview-summary-left, .listview-summary-right").removeClass("show")
      }
    };
    if (!this.summaryResizeAdded) {
      $(window).resize((function (l) {
        $(".listview .listview-summary-inner").each(l)
      }).bind(null, k));
      this.summaryResizeAdded = true
    }
    setTimeout((function (l, m) {
      $(".listview-summary-inner", l).each(m)
    }).bind(null, this.noteItemSummary, k), 0);
    if (this.showPaperdoll) {
      f.className += " has-paperdoll";
      Listview.funcBox.addPaperdoll.call(this, f)
    }
  },
  addPaperdoll: function (b) {
    if (!this.notePaperdoll || !$WH.ge(this.notePaperdoll.id)) {
      this.notePaperdoll = $WH.ce("div");
      this.notePaperdoll.id = "listview-paperdoll-" + this.id;
      this.notePaperdoll.className = "listview-paperdoll";
      if (b) {
        $(b).prepend(this.notePaperdoll)
      } else {
        $(this.notePaperdoll).insertAfter($(this.noteTop))
      }
    }
    $WH.ee(this.notePaperdoll);
    var c = $.extend({
      id: "paperdoll-" + this.id,
      parent: this.notePaperdoll.id,
      data: this.data
    }, this.characterSettings);
    if (this.onCreatePaperdollSlot) {
      c.onCreateSlot = this.onCreatePaperdollSlot
    }
    new Paperdoll(c)
  },
  assocArrCmp: function (f, e, c) {
    if (f == null) {
      return -1
    } else {
      if (e == null) {
        return 1
      }
    }
    var j = Math.max(f.length, e.length);
    for (var h = 0; h < j; ++h) {
      if (f[h] == null) {
        return -1
      } else {
        if (e[h] == null) {
          return 1
        }
      }
      var g = $WH.strcmp(c[f[h]], c[e[h]]);
      if (g != 0) {
        return g
      }
    }
    return 0
  },
  assocBinFlags: function (g, b) {
    var e = [];
    for (var c in b) {
      if (!isNaN(c) && (g & 1 << c - 1)) {
        e.push(c)
      }
    }
    e.sort(function (h, f) {
      return $WH.strcmp(b[h], b[f])
    });
    return e
  },
  location: function (l, e, f) {
    if (l.location == null) {
      return -1
    }
    var c = f ? f : 3;
    var b = l.location.slice(0, c);
    if (b.length < l.location.length) {
      b.push(-1)
    }
    for (var g = 0, j = b.length; g < j; ++g) {
      if (g > 0) {
        $WH.ae(e, $WH.ct(LANG.comma))
      }
      var h = b[g];
      if (h == -1) {
        $WH.ae(e, $WH.ct(LANG.ellipsis))
      } else {
        var k = $WH.ce("a");
        k.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
        k.href = g_getRelativeHostPrefix() + "/zone=" + h;
        $WH.ae(k, $WH.ct(g_zones[h]));
        $WH.ae(e, k)
      }
    }
  },
  arrayText: function (c, g) {
    if (c == null) {
      return
    } else {
      if (!$WH.is_array(c)) {
        return g[c]
      }
    }
    var f = "";
    for (var e = 0, b = c.length; e < b; ++e) {
      if (e > 0) {
        f += " "
      }
      if (!g[c[e]]) {
        continue
      }
      f += g[c[e]]
    }
    return f
  },
  createCenteredIcons: function (b, f, j, c, h) {
    if (b != null) {
      var r = $WH.ce("div"),
          u = $WH.ce("div");
      $WH.ae(document.body, r);
      if (j && (b.length != 1 || c != 2)) {
        var p = $WH.ce("div");
        p.style.position = "relative";
        p.style.width = "1px";
        var v = $WH.ce("div");
        v.className = "q0";
        v.style.position = "absolute";
        v.style.right = "2px";
        v.style.lineHeight = "26px";
        v.style.fontSize = "11px";
        v.style.whiteSpace = "nowrap";
        $WH.ae(v, $WH.ct(j));
        $WH.ae(p, v);
        $WH.ae(r, p);
        r.style.paddingLeft = $(v).width() + "px"
      }
      var l = g_items;
      if (c == 1) {
        l = g_spells
      } else {
        if (c == 3) {
          l = g_petabilities
        }
      }
      for (var n = 0, o = b.length; n < o; ++n) {
        var q;
        if (b[n] == null) {
          q = $WH.ce("div");
          q.style.width = q.style.height = "26px"
        } else {
          var k, g, e;
          if (typeof b[n] == "object") {
            k = b[n][0];
            g = b[n][1];
            e = b[n][2]
          } else {
            k = b[n]
          }
          if (typeof k == "string") {
            q = Icon.create(k, 0, null, e)
          } else {
            if (k) {
              q = l.createIcon(k, 0, g)
            } else {
              q = Icon.create("inventoryslot_empty", 0, null, "javascript:;")
            }
          }
          if (h) {
            q.children[2].rel = h[n]
          }
        }
        if (b.length == 1 && c == 2) {
          if (k && g_items[k]) {
            $WH.ee(r);
            var s = g_items[k],
                t = $WH.ce("a"),
                m = $WH.ce("span");
            m.style.paddingTop = "4px";
            t.href = g_getRelativeHostPrefix() + "/item=" + k;
            t.className = "q" + s.quality + " icontiny tinyspecial";
            t.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + s.icon.toLowerCase() + ".gif)";
            t.style.whiteSpace = "nowrap";
            $WH.st(t, s["name_" + Locale.getName()]);
            $WH.ae(m, t);
            if (g > 1) {
              $WH.ae(m, $WH.ct(" (" + g + ")"))
            }
            if (j) {
              var p = $WH.ce("span");
              p.className = "q0";
              p.style.fontSize = "11px";
              p.style.whiteSpace = "nowrap";
              $WH.ae(p, $WH.ct(j));
              $WH.ae(r, p);
              if ($(v).length > 0) {
                m.style.paddingLeft = $(v).width() + "px"
              }
            }
            $WH.ae(r, m)
          }
        } else {
          q.style.cssFloat = q.style.styleFloat = "left";
          $WH.ae(r, q);
          r.style.margin = "0 auto";
          r.style.textAlign = "left";
          r.style.width = (26 * b.length) + "px"
        }
      }
      u.className = "clear";
      $WH.ae(f, r);
      $WH.ae(f, u);
      return true
    }
  },
  createSocketedIcons: function (c, f, e, h, o) {
    var n = 0,
        l = $WH.ce("div"),
        b = $WH.ce("div");
    for (var g = 0, j = c.length; g < j; ++g) {
      var m, k = e[g];
      if (g_items && g_items[k]) {
        m = g_items.createIcon(k, 0)
      } else {
        if ($WH.isset("g_gems") && g_gems && g_gems[k]) {
          m = Icon.create(g_gems[k].icon, 0, null, g_getRelativeHostPrefix() + "/item=" + k)
        } else {
          m = Icon.create(null, 0, null, "javascript:;")
        }
      }
      m.className += " iconsmall-socket-" + g_file_gems[c[g]] + (!e || !k ? "-empty" : "");
      m.style.cssFloat = m.style.styleFloat = "left";
      if (h && h[g]) {
        m.insertBefore($WH.ce("var"), m.childNodes[1]);
        ++n
      }
      $WH.ae(l, m)
    }
    l.style.margin = "0 auto";
    l.style.textAlign = "left";
    l.style.width = (26 * c.length) + "px";
    b.className = "clear";
    $WH.ae(f, l);
    $WH.ae(f, b);
    if (o && n == c.length) {
      l = $WH.ce("div");
      l.style.paddingTop = "4px";
      $WH.ae(l, $WH.ct(o));
      $WH.ae(f, l)
    }
  },
  addBattlePetExpandedView: function (g, f, k, s, c) {
    if (!c) {
      c = g
    }
    var m = function () {
      setTimeout((function () {
        if (Platform.isTouch() && !$(".expanded-pet-view", this).is(":visible")) {
          var z = $("a", this).attr("href");
          if (z) {
            location.href = z
          }
        }
      }).bind(this), 5)
    };
    if (c.tagName == "TD") {
      c.onmouseover = function () {
        $(this).addClass("expand-pet-view");
        m.call(this)
      };
      c.onmouseout = function () {
        $(this).removeClass("expand-pet-view")
      }
    } else {
      c.onmouseover = function () {
        $(this).parents("td").addClass("expand-pet-view");
        m.call(this)
      };
      c.onmouseout = function () {
        $(this).parents("td").removeClass("expand-pet-view")
      }
    }
    var h = $WH.ce("div");
    h.className = "expanded-pet-view";
    if (f.compare) {
      $WH.ae(h, Listview.funcBox.getComparisonText(f.compare, this.completionMode, this.dataSource, this.completionText))
    }
    if (f.companion) {
      h.className += " companion"
    }
    if (f.untameable) {
      h.className += " untameable"
    }
    if (f.elite) {
      h.className += " elite"
    }
    var y = $WH.ce("img");
    y.src = g_staticUrl + "/modelviewer/thumbs/npc/" + f.model + ".png";
    y.height = y.width = 240;
    $WH.ae(h, y);
    var o = $WH.ce("div");
    o.className = "icon";
    $WH.ae(o, Icon.create(f.icon, 1, null, this.getItemLink(f)));
    $WH.ae(h, o);
    o = $WH.ce("div");
    o.className = "type";
    o.style.backgroundPosition = ((f.type - 1) * -35) + "px 0";
    o.onmouseover = function (A, z) {
      $WH.Tooltip.showAtCursor(z, g_petability_types[f.type], 0, 0, "q")
    };
    o.onmousemove = $WH.Tooltip.cursorUpdate;
    o.onmouseout = $WH.Tooltip.hide;
    $WH.ae(h, o);
    var w = $WH.ce("div");
    w.className = "name";
    if (f.elite) {
      y = $WH.ce("img");
      y.src = g_staticUrl + "/images/icons/boss.gif";
      y.height = 16;
      y.width = 12;
      y.style.verticalAlign = "middle";
      y.onmouseover = function (z) {
        $WH.Tooltip.showAtCursor(z, LANG.lvspecies_elite, 0, 0, "q")
      };
      y.onmousemove = $WH.Tooltip.cursorUpdate;
      y.onmouseout = $WH.Tooltip.hide;
      $WH.ae(w, y);
      $WH.ae(w, $WH.ct(" "))
    }
    var t = $WH.ce("a");
    t.href = this.getItemLink(f);
    t.className = "q" + k.quality;
    t.innerHTML = f.npc.name;
    $WH.ae(w, t);
    $WH.ae(h, w);
    var p = $WH.ce("div");
    p.className = "leveltype";
    if (f.elite) {
      p.innerHTML = (f.companion ? LANG.lvspecies_companion : $WH.sprintf(LANG.lvspecieselite_levelcombo, k.level, g_petability_types[f.type]))
    } else {
      p.innerHTML = (f.companion ? LANG.lvspecies_companion : $WH.sprintf(LANG.lvspecies_levelcombo, k.level, g_petability_types[f.type]))
    }
    $WH.ae(h, p);
    if (!f.companion) {
      var v = $WH.ce("table");
      v.className = "stats";
      var l = ["health", "power", "speed"],
          r = $WH.ce("tr"),
          q = $WH.ce("tr"),
          b, j;
      for (var n = 0; n < l.length; ++n) {
        b = $WH.ce("td");
        j = $WH.ce("span");
        j.className = l[n] + "-icon";
        b.onmouseover = (function (A, z) {
          $WH.Tooltip.showAtCursor(z, A, 0, 0, "q")
        }).bind(null, LANG[l[n]]);
        b.onmousemove = $WH.Tooltip.cursorUpdate;
        b.onmouseout = $WH.Tooltip.hide;
        $WH.ae(b, j);
        $WH.ae(r, b);
        b = $WH.ce("td");
        b.innerHTML = s[l[n]];
        b.onmouseover = (function (A, z) {
          $WH.Tooltip.showAtCursor(z, A, 0, 0, "q")
        }).bind(null, LANG[l[n]]);
        b.onmousemove = $WH.Tooltip.cursorUpdate;
        b.onmouseout = $WH.Tooltip.hide;
        $WH.ae(q, b)
      }
      $WH.ae(v, r);
      $WH.ae(v, q);
      $WH.ae(h, v);
      var e = $WH.ce("div");
      e.className = "abilities";
      if (f.untameable) {
        span = $WH.ce("div");
        span.className = "label q0";
        span.innerHTML = LANG.untameable;
        $WH.ae(e, span);
        for (var n = 0; n < f.abilities.length; ++n) {
          o = $WH.ce("div");
          o.className = "icon-" + (n + 1);
          $WH.ae(o, Icon.create(g_petabilities[f.abilities[n]].icon, 0, null, g_getRelativeHostPrefix() + "/petability=" + f.abilities[n]));
          $WH.ae(e, o)
        }
      } else {
        for (var n = 1; n <= 3; n++) {
          o = $WH.ce("span");
          o.className = "connector-" + n;
          $WH.ae(e, o)
        }
        for (var n = 0; n < f.abilities.length; ++n) {
          o = $WH.ce("div");
          o.className = "icon-" + (n + 1);
          if (n < 3 && k.level >= $WH.g_battlePetAbilityLevels[1]) {
            o.className += " iconsmall-gold"
          }
          var u = null;
          if (k.level < $WH.g_battlePetAbilityLevels[n] || $WH.g_battlePetAbilityLevels[n] > 1) {
            u = $WH.g_battlePetAbilityLevels[n]
          }
          if (k.level < $WH.g_battlePetAbilityLevels[n]) {
            o.className += " inactive"
          }
          $WH.ae(o, Icon.create(g_petabilities[f.abilities[n]].icon, 0, null, g_getRelativeHostPrefix() + "/petability=" + f.abilities[n], u));
          $WH.ae(e, o)
        }
      }
      $WH.ae(h, e)
    }
    $WH.ae(g, h)
  },
  getItemType: function (e, b, c) {
    if (c != null && g_item_subsubclasses[e] != null && g_item_subsubclasses[e][b] != null) {
      return {
        url: g_getRelativeHostPrefix() + "/items=" + e + "." + b + "." + c,
        text: g_item_subsubclasses[e][b][c]
      }
    } else {
      if (b != null && g_item_subclasses[e] != null) {
        return {
          url: g_getRelativeHostPrefix() + "/items=" + e + "." + b,
          text: g_item_subclasses[e][b]
        }
      } else {
        return {
          url: g_getRelativeHostPrefix() + "/items=" + e,
          text: g_item_classes[e]
        }
      }
    }
  },
  getQuestCategory: function (b) {
    return g_quest_sorts[b]
  },
  getQuestReputation: function (f, c) {
    if (c.reprewards) {
      for (var e = 0, b = c.reprewards.length; e < b; ++e) {
        if (c.reprewards[e][0] == f) {
          return c.reprewards[e][1]
        }
      }
    }
  },
  getFactionCategory: function (c, b) {
    if (c) {
      return g_faction_categories[c]
    } else {
      return g_faction_categories[b]
    }
  },
  createTextRange: function (c, b) {
    c |= 0;
    b |= 0;
    if (c > 1 || b > 1) {
      if (c != b && b > 0) {
        return c + "-" + b
      } else {
        return c + ""
      }
    }
    return null
  },
  coGetColor: function (f, c, b) {
    if (f.user && g_customColors[f.user]) {
      return " comment-" + g_customColors[f.user]
    }
    switch (c) {
    case -1:
      var e = null;
      if (!b) {
        e = f.divPost.childNodes[1].className.match(/comment-([a-z]+)/)
      } else {
        e = f.divBody[0].className.match(/comment-([a-z]+)/)
      }
      if (e != null) {
        return " comment-" + e[1]
      }
      break;
    case 3:
      if (f.roles & U_GROUP_PREMIUM) {
        return " comment-gold"
      }
    case 4:
      if (f.roles & U_GROUP_ADMIN) {
        return " comment-blue"
      }
      if (f.roles & U_GROUP_GREEN_TEXT) {
        return " comment-green"
      }
      if (f.roles & U_GROUP_VIP) {
        return " comment-gold"
      }
      if (f.roles & U_GROUP_PREMIUM) {
        return " comment-red"
      }
      break
    }
    if (f.roles & U_GROUP_ADMIN) {
      return " comment-blue"
    }
    if ((f.commentv2 && f.sticky) || (f.roles & U_GROUP_GREEN_TEXT) || (f.rating >= 10)) {
      return " comment-green"
    }
    if (f.rating && f.rating < -2) {
      return " comment-bt"
    }
    if (f.roles & U_GROUP_PREMIUM) {
      return " comment-gold"
    }
    return ""
  },
  coFlagUpOfDate: function (e) {
    var b = e.commentCell.find(".comment-notification");
    var c = e.user == g_user.name || ((g_user.roles & (U_GROUP_ADMIN | U_GROUP_MODERATOR)) != 0);
    if (!c) {
      return
    }
    if (confirm("Mark comment " + e.id + " as up to date?")) {
      e.container.removeClass("comment-outofdate");
      $.post("/comment=out-of-date", {
        id: e.id,
        remove: 1
      }, function (f) {
        if (f == "ok") {
          MessageBox(b, LANG.lvcomment_uptodateresponse)
        } else {
          MessageBox(b, "Error: " + f)
        }
      })
    }
    return
  },
  coFlagOutOfDate: function (f) {
    var b = f.commentCell.find(".comment-notification");
    var c = f.user == g_user.name || ((g_user.roles & (U_GROUP_ADMIN | U_GROUP_MODERATOR)) != 0);
    if (c) {
      if (confirm("Mark comment " + f.id + " as out of date?")) {
        f.container.addClass("comment-outofdate");
        $.post("/comment=out-of-date", {
          id: f.id
        }, function (g) {
          if (g == "ok") {
            MessageBox(b, LANG.lvcomment_outofdateresponse)
          } else {
            MessageBox(b, "Error: " + g)
          }
        })
      }
      return
    }
    var e = null;
    while (true) {
      e = prompt(LANG.lvcomment_outofdate_tip);
      if (e == null || e == false) {
        return
      } else {
        if (e.toString().length > 0) {
          break
        }
      }
      alert(LANG.youmustprovideareason_stc)
    }
    $.post("/comment=out-of-date", {
      id: f.id,
      reason: e
    }, function (g) {
      if (g == "ok") {
        MessageBox(b, LANG.lvcomment_outofdateresponsequeued)
      } else {
        MessageBox(b, "Error: " + g)
      }
    })
  },
  coDelete: function (e) {
    var c = e.user == g_user.name || ((g_user.roles & (U_GROUP_ADMIN | U_GROUP_MOD | U_GROUP_BUREAU)) != 0);
    var b = e.commentCell.find(".comment-notification");
    if (c) {
      if (!confirm(LANG.confirm_deletecomment)) {
        return
      }
      $.post("/comment=delete", {
        id: e.id
      });
      if (!e.commentv2) {
        this.deleteRows([e]);
        return
      }
      e.container.addClass("comment-deleted");
      MessageBox(b, LANG.commentdeleted_tip);
      e.deletedInfo = [g_serverTime, g_user.name];
      e.deleted = true;
      Listview.templates.comment.updateCommentCell(e);
      return
    }
  },
  coUndelete: function (e) {
    var c = e.user == g_user.name || ((g_user.roles & (U_GROUP_ADMIN | U_GROUP_MOD)) != 0);
    var b = e.commentCell.find(".comment-notification");
    if (confirm(LANG.votetoundelete_tip)) {
      $.post("/comment=undelete", {
        id: e.id
      });
      if (c) {
        MessageBox(b, "This comment has been restored.");
        if (e.commentv2) {
          e.container.removeClass("comment-deleted");
          e.deletedInfo = null;
          e.deleted = false;
          Listview.templates.comment.updateCommentCell(e)
        }
      } else {
        MessageBox(b, LANG.votedtodelete_tip)
      }
    }
  },
  coEdit: function (j, g, e) {
    if (e) {
      j.divBody.hide();
      j.divResponse.hide()
    }
    var h = $("<div/>");
    h.addClass("comment-edit");
    j.divEdit = h[0];
    if (g == -1) {
      if (g_users[j.user] != null) {
        j.roles = g_users[j.user].roles
      }
    }
    var b = Listview.funcBox.coEditAppend(h, j, g, e);
    var c = $("<div/>");
    c.addClass("comment-edit-buttons");
    var f = $("<button/>", {
      text: LANG.compose_save
    });
    f.click(Listview.funcBox.coEditButton.bind(f[0], j, true, g, e));
    c.append(f);
    c.append($WH.ct(" "));
    f = $("<button/>", {
      text: LANG.compose_cancel
    });
    f.click(Listview.funcBox.coEditButton.bind(f[0], j, false, g, e));
    c.append(f);
    h.append(c);
    h.insertAfter(j.divBody);
    g_safeFocus(b)
  },
  coEditAppend: function (M, D, k, u, b, I) {
    var B = Listview.funcBox.coGetCharLimit(k);
    if (k == 1 || k == 3 || k == 4) {
      D.user = g_user.name;
      D.roles = g_user.roles;
      D.rating = 1
    } else {
      if (k == 2) {
        D.roles = g_user.roles;
        D.rating = 1
      }
    }
    if (b) {
      D.roles &= ~U_GROUP_PENDING
    }
    if (k == -1 || k == 0) {
      var j = $("<div/>", {
        text: LANG.compose_mode
      });
      j.addClass("comment-edit-modes");
      var F = $("<a/>", {
        href: "javascript:;",
        text: LANG.compose_edit
      });
      F.click(Listview.funcBox.coModeLink.bind(F[0], 1, k, D));
      F.addClass("selected");
      j.append(F);
      j.append($WH.ct("|"));
      var L = $("<a/>", {
        href: "javascript:;",
        text: LANG.compose_preview
      });
      L.click(Listview.funcBox.coModeLink.bind(L[0], 2, k, D));
      j.append(L);
      M.append(j)
    }
    var h = $("<div/>", {
      css: {
        display: "none"
      }
    });
    h.addClass("text comment-body" + Listview.funcBox.coGetColor(D, k, u));
    var z = $("<div/>");
    z.addClass("comment-edit-body");
    var c = $('<div style="float: left" />');
    c.addClass("toolbar");
    var O = $('<div style="float: left" />');
    O.addClass("menu-buttons");
    var e = $("<textarea/>", {
      val: D.body,
      rows: 10,
      css: {
        clear: "left"
      }
    });
    e.addClass("comment-editbox");
    switch (k) {
    case 1:
      e.attr("name", "commentbody");
      e.focus(g_revealCaptcha.bind(null, "klrbetkjerbt46", false, false, "Listview commentbody"));
      break;
    case 2:
      e.attr({
        name: "desc",
        originalValue: D.body
      });
      break;
    case 3:
      e.attr("name", "body");
      e.focus(g_revealCaptcha.bind(null, "klrbetkjerbt46", false, false, "Listview body"));
      break;
    case 4:
      e.attr({
        name: "sig",
        originalValue: D.body,
        rows: 3
      });
      e.css("height", "auto");
      break
    }
    if (k != -1 && k != 0) {
      var o = $("<a/>"),
          w = $("<div/>"),
          r = $("<div/>"),
          q = screen.availWidth <= 480;
      var t = Listview.funcBox.coLivePreview.bind(e[0], D, k, w[0]);
      o.addClass("disclosure-" + (q ? "off" : "on"));
      o.text(LANG.compose_livepreview);
      o.attr("href", "javascript:;");
      o.click(function () {
        t(1);
        var P = g_toggleDisplay(w);
        o.toggleClass("disclosure-on", P);
        o.toggleClass("disclosure-off", !P)
      });
      r.addClass("pad");
      h.append(g_getMajorHeading(o, 3, null, {
        classes: "first"
      }));
      h.append(w);
      h.append(r);
      g_onAfterTyping(e[0], t, 50);
      e.focus(function () {
        t();
        h.css("display", (q ? "none" : ""));
        if (k != 4 && !I) {
          e.css("height", "22em")
        }
      })
    } else {
      if (k != 4 && !I) {
        e.focus(function () {
          e.css("height", "22em")
        })
      }
    }
    var A = [{
      id: "b",
      icon: "bold",
      title: LANG.markup_b,
      pre: "[b]",
      post: "[/b]"
    },
    {
      id: "i",
      icon: "italic",
      title: LANG.markup_i,
      pre: "[i]",
      post: "[/i]"
    },
    {
      id: "u",
      icon: "underline",
      title: LANG.markup_u,
      pre: "[u]",
      post: "[/u]"
    },
    {
      id: "s",
      icon: "strikethrough",
      title: LANG.markup_s,
      pre: "[s]",
      post: "[/s]"
    },
    {
      id: "small",
      icon: "text-height",
      title: LANG.markup_small,
      pre: "[small]",
      post: "[/small]"
    },
    {
      id: "url",
      icon: "link",
      title: LANG.markup_url,
      nopending: true,
      onclick: function () {
        var P = prompt(LANG.prompt_linkurl, "http://");
        if (P) {
          g_insertTag(e[0], "[url=" + P + "]", "[/url]")
        }
      }
    },
    {
      id: "quote",
      icon: "quote-left",
      title: LANG.markup_quote,
      pre: "[quote]",
      post: "[/quote]"
    },
    {
      id: "code",
      icon: "code",
      title: LANG.markup_code,
      pre: "[code]",
      post: "[/code]"
    },
    {
      id: "ul",
      icon: "list-ul",
      title: LANG.markup_ul,
      pre: "[ul]\n[li]",
      post: "[/li]\n[/ul]",
      rep: function (P) {
        return P.replace(/\n/g, "[/li]\n[li]")
      }
    },
    {
      id: "ol",
      icon: "list-ol",
      title: LANG.markup_ol,
      pre: "[ol]\n[li]",
      post: "[/li]\n[/ol]",
      rep: function (P) {
        return P.replace(/\n/g, "[/li]\n[li]")
      }
    },
    {
      id: "li",
      icon: "circle",
      title: LANG.markup_li,
      pre: "[li]",
      post: "[/li]"
    }];
    if (!u) {
      for (var J = 0, s = A.length; J < s; ++J) {
        var C = A[J];
        if (k == 4 && C.id == "quote") {
          break
        }
        if ((g_user.roles & U_GROUP_PENDING) && C.nopending) {
          continue
        }
        var l = $("<button/>", {
          click: function (P, Q) {
            Q.preventDefault();
            (P.onclick != null ? P.onclick : g_insertTag.bind(0, e[0], P.pre, P.post, P.rep))()
          }.bind(null, C)
        });
        l[0].setAttribute("type", "button");
        l.attr("title", C.title);
        var m = $("<i/>", {
          "class": "fa fa-" + C.icon
        });
        l.append(m);
        c.append(l)
      }
    } else {
      for (var J = 0, s = A.length; J < s; ++J) {
        var C = A[J];
        if ((g_user.rolls & U_GROUP_PENDING) && C.nopending) {
          continue
        }
        var n = "tb-" + C.id;
        var l = $("<button/>", {
          click: function (P, Q) {
            Q.preventDefault();
            (P.onclick != null ? P.onclick : g_insertTag.bind(0, e[0], P.pre, P.post, P.rep))()
          }.bind(null, C),
          "class": n,
          title: C.title
        });
        l[0].setAttribute("type", "button");
        l.append("<ins/>");
        c.append(l)
      }
      c.addClass("formatting button sm")
    }
    var G = function (Q, P) {
      var R = prompt($WH.sprintf(LANG.markup_prompt, Q), "");
      if (R != null) {
        g_insertTag(e[0], "[" + P + "=" + (parseInt(R) || 0) + "]", "")
      }
    };
    var K = LANG.ellipsis;
    var E = [
      [9, LANG.types[10][0] + K, G.bind(null, LANG.types[10][1], "achievement")],
      [11, LANG.types[13][0] + K, G.bind(null, LANG.types[13][1], "class")],
      [7, LANG.types[8][0] + K, G.bind(null, LANG.types[8][1], "faction")],
      [0, LANG.types[3][0] + K, G.bind(null, LANG.types[3][1], "item")],
      [1, LANG.types[4][0] + K, G.bind(null, LANG.types[4][1], "itemset")],
      [2, LANG.types[1][0] + K, G.bind(null, LANG.types[1][1], "npc")],
      [3, LANG.types[2][0] + K, G.bind(null, LANG.types[2][1], "object")],
      [8, LANG.types[9][0] + K, G.bind(null, LANG.types[9][1], "pet")],
      [4, LANG.types[5][0] + K, G.bind(null, LANG.types[5][1], "quest")],
      [12, LANG.types[14][0] + K, G.bind(null, LANG.types[14][1], "race")],
      [13, LANG.types[15][0] + K, G.bind(null, LANG.types[15][1], "skill")],
      [5, LANG.types[6][0] + K, G.bind(null, LANG.types[6][1], "spell")],
      [6, LANG.types[7][0] + K, G.bind(null, LANG.types[7][1], "zone")]
    ];
    var g = [
      [14, LANG.types[222][0] + K, G.bind(null, LANG.types[222][1], "hsachievement")],
      [15, LANG.types[220][0] + K, G.bind(null, LANG.types[220][1], "card")],
      [18, LANG.types[225][0] + K, G.bind(null, LANG.types[225][1], "cardback")],
      [20, LANG.types[104][0] + K, G.bind(null, LANG.types[104][1], "deck")],
      [16, LANG.types[221][0] + K, G.bind(null, LANG.types[221][1], "mechanic")],
      [17, LANG.types[223][0] + K, G.bind(null, LANG.types[223][1], "hsquest")],
      [19, LANG.types[226][0] + K, G.bind(null, LANG.types[226][1], "season")]
    ];
    var y = [];
    if ($WH.g_isHearthhead()) {
      y.push([, "Hearthstone"]);
      y = y.concat(g);
      y.push([, LANG.other]);
      y.push([9999, "World of Warcraft", , E])
    } else {
      y.push([, "World of Warcraft"]);
      y = y.concat(E);
      y.push([, "Hearthstone"]);
      y = y.concat(g)
    }
    var N = [
      [0, LANG.markup_links, , y]
    ];
    z.append(c);
    z.append(O);
    z.append($('<div style="clear: left" />'));
    z.append(e);
    z.append($("<br/>"));
    Menu.addButtons(O[0], N);
    if (k == 4) {
      z.append($WH.ct($WH.sprintf(LANG.compose_limit2, B, 3)))
    } else {
      z.append($WH.ct($WH.sprintf(LANG.compose_limit, B)))
    }
    var v = $('<span class="comment-remaining"> ' + $WH.sprintf(LANG.compose_remaining, B - D.body.length) + "</span>");
    z.append(v);
    e.keyup(Listview.funcBox.coUpdateCharLimit.bind(0, e, v, B));
    e.keydown(Listview.funcBox.coUpdateCharLimit.bind(0, e, v, B));
    if ((k == -1 || k == 0) && g_user.roles & U_GROUP_MODERATOR) {
      var p = $("<div/>", {
        "class": "pad"
      });
      var f = $("<div/>", {
        text: (g_user.roles & U_GROUP_ADMIN ? "Admin" : "Moderator") + " response"
      });
      var H = $("<textarea/>", {
        val: D.response,
        rows: 3,
        css: {
          height: "6em"
        }
      });
      z.append(p);
      z.append(f);
      z.append(H)
    }
    M.append(z);
    M.append(h);
    $("<div/>").append('<div class="pad"/>').append(g_getMajorHeading($('<a class="disclosure-off"/>').text(LANG.compose_formattinghelp).click(function () {
      g_disclose(this.parentNode.nextSibling, this)
    }), 3, null, {
      classes: "first"
    })).append($('<div style="display: none"/>').append(Markup.toHtml("[markupdoc help=user]"))).insertAfter(M.parent());
    return e
  },
  coLivePreview: function (h, g, b, c) {
    if (c != 1 && b.style.display == "none") {
      return
    }
    var e = this,
        l = Listview.funcBox.coGetCharLimit(g),
        j = (e.value.length > l ? e.value.substring(0, l) : e.value);
    if (g == 4) {
      var k;
      if ((k = j.indexOf("\n")) != -1 && (k = j.indexOf("\n", k + 1)) != -1 && (k = j.indexOf("\n", k + 1)) != -1) {
        j = j.substring(0, k)
      }
    }
    var m = Markup.rolesToClass(h.roles);
    var f = Markup.toHtml(j, {
      allow: m,
      mode: Markup.MODE_COMMENT,
      roles: h.roles
    });
    if (f) {
      b.innerHTML = f
    } else {
      b.innerHTML = '<span class="q6">...</span>'
    }
  },
  coEditButton: function (k, c, j, n) {
    if (c) {
      var g = $WH.gE(k.divEdit, "textarea");
      var f = g[0];
      if (!Listview.funcBox.coValidate(f, j)) {
        return
      }
      if (f.value != k.body || (g[1] && g[1].value != k.response)) {
        var l = 0;
        if (k.lastEdit != null) {
          l = k.lastEdit[1]
        }++l;
        k.lastEdit = [g_serverTime, l, g_user.name];
        if (!k.commentv2) {
          Listview.funcBox.coUpdateLastEdit(k)
        }
        var m = Listview.funcBox.coGetCharLimit(j);
        var o = Markup.rolesToClass(k.roles);
        var h = Markup.toHtml((f.value.length > m ? f.value.substring(0, m) : f.value), {
          allow: o,
          mode: Markup.MODE_COMMENT,
          roles: k.roles
        });
        var b = ((g[1] && g[1].value.length > 0) ? Markup.toHtml("[div][/div][wowheadresponse=" + g_user.name + " roles=" + g_user.roles + "]" + g[1].value + "[/wowheadresponse]", {
          allow: Markup.CLASS_STAFF,
          mode: Markup.MODE_COMMENT,
          roles: g_user.roles
        }) : "");
        if (k.commentv2) {
          k.body = f.value;
          if (g_user.roles & U_GROUP_MODERATOR && g[1]) {
            k.response = g[1].value
          }
          Listview.templates.comment.updateCommentCell(k)
        } else {
          if (!n) {
            k.divBody.innerHTML = h;
            k.divResponse.innerHTML = b
          } else {
            k.divBody.html(h);
            k.divResponse.html(b)
          }
          k.body = f.value;
          if (g_user.roles & U_GROUP_MODERATOR && g[1]) {
            k.response = g[1].value
          }
        }
        var e = "body=" + $WH.urlencode(k.body);
        if (k.response !== undefined) {
          e += "&response=" + $WH.urlencode(k.response)
        }
        if (j == -1) {
          new Ajax("/forums=editpost&id=" + k.id, {
            method: "POST",
            params: e
          })
        } else {
          new Ajax("/comment=edit&id=" + k.id, {
            method: "POST",
            params: e
          })
        }
      }
    }
    if (k.commentv2) {
      Listview.templates.comment.updateCommentCell(k)
    } else {
      if (!n) {
        k.divBody.style.display = "";
        k.divResponse.style.display = "";
        k.divLinks.firstChild.style.display = ""
      } else {
        k.divBody.show();
        k.divResponse.show()
      }
    }
    if (!k.commentv2) {
      $WH.de(k.divEdit);
      k.divEdit = null
    }
  },
  coGetCharLimit: function (b) {
    if (b == 2) {
      return 7500
    }
    if (b == 4) {
      return 250
    }
    if (g_user.roles & U_GROUP_STAFF) {
      return 16000000
    }
    var c = 1;
    if (g_user.premium) {
      c = 3
    }
    switch (b) {
    case 0:
    case 1:
      return 7500 * c;
    case -1:
    case 3:
      return 15000 * c
    }
  },
  coUpdateCharLimit: function (b, c, e) {
    var f = $(b).val();
    if (f.length > e) {
      $(b).val(f.substring(0, e))
    } else {
      $(c).html(" " + $WH.sprintf(LANG.compose_remaining, e - f.length)).removeClass("q10");
      if (f.length == e) {
        $(c).addClass("q10")
      }
    }
  },
  coModeLink: function (j, c, k) {
    var p = Listview.funcBox.coGetCharLimit(c);
    var e = Markup.MODE_COMMENT;
    $WH.array_walk($WH.gE(this.parentNode, "a"), function (m) {
      m.className = ""
    });
    this.className = "selected";
    var h = $WH.gE(this.parentNode.parentNode, "textarea"),
        f = h[0],
        o = f.parentNode,
        b = $(".comment-body", o.parentNode)[0];
    if (c == 4) {
      e = Markup.MODE_SIGNATURE
    }
    switch (j) {
    case 1:
      o.style.display = "";
      b.style.display = "none";
      g_safeFocus(o.firstChild);
      break;
    case 2:
      o.style.display = "none";
      var l = (f.value.length > p ? f.value.substring(0, p) : f.value);
      if (c == 4) {
        var n;
        if ((n = l.indexOf("\n")) != -1 && (n = l.indexOf("\n", n + 1)) != -1 && (n = l.indexOf("\n", n + 1)) != -1) {
          l = l.substring(0, n)
        }
      }
      var q = Markup.rolesToClass(k.roles);
      var g = Markup.toHtml(l, {
        allow: q,
        mode: e,
        roles: k.roles
      });
      if (h[1] && h[1].value.length > 0) {
        g += Markup.toHtml("[div][/div][wowheadresponse=" + g_user.name + " roles=" + g_user.roles + "]" + h[1].value + "[/wowheadresponse]", {
          allow: Markup.CLASS_STAFF,
          mode: e,
          roles: g_user.roles
        })
      }
      b.innerHTML = g;
      b.style.display = "";
      break
    }
  },
  coValidate: function (b, e) {
    e |= 0;
    if (e == 1 || e == -1) {
      if ($WH.trim(b.value).length < 1) {
        alert(LANG.message_forumposttooshort);
        return false
      }
    } else {
      if ($WH.trim(b.value).length < 1) {
        alert(LANG.message_commenttooshort);
        return false
      }
    }
    var c = Listview.funcBox.coGetCharLimit(e);
    if (b.value.length > c) {
      if (!confirm($WH.sprintf(e == 1 ? LANG.confirm_forumposttoolong : LANG.confirm_commenttoolong, c, b.value.substring(c - 30, c)))) {
        return false
      }
    }
    return true
  },
  coSortNewestFirst: function (b) {
    $WH.sc("comments_sort", 1000, "1", "/", ".wowhead.com");
    $(b).parent().find("a.selected").removeClass("selected");
    b.className = "selected";
    this.mainDiv.className += " listview-aci";
    this.setSort([-5, 4, 6, -1, -2], true, false)
  },
  coSortOldestFirst: function (b) {
    $WH.sc("comments_sort", 1000, "2", "/", ".wowhead.com");
    $(b).parent().find("a.selected").removeClass("selected");
    b.className = "selected";
    this.mainDiv.className += " listview-aci";
    this.setSort([-5, 4, 6, 1, 2], true, false)
  },
  coSortHighestRatedFirst: function (b) {
    $WH.sc("comments_sort", 1000, "3", "/", ".wowhead.com");
    $(b).parent().find("a.selected").removeClass("selected");
    b.className = "selected";
    this.mainDiv.className = this.mainDiv.className.replace("listview-aci", "");
    this.setSort([-5, 4, 6, -3, 2], true, false)
  },
  coFilterByPatchVersion: function (b) {
    this.minPatchVersion = b.value;
    this.refreshRows()
  },
  coUpdateLastEdit: function (h) {
    var c = h.divLastEdit;
    if (!c) {
      return
    }
    if (h.lastEdit != null) {
      var g = h.lastEdit;
      c.childNodes[1].firstChild.nodeValue = g[2];
      c.childNodes[1].href = "/user=" + g[2];
      var e = new Date(g[0]);
      var f = (g_serverTime - e) / 1000;
      if (c.childNodes[3].firstChild) {
        $WH.de(c.childNodes[3].firstChild)
      }
      g_formatDate(c.childNodes[3], f, e);
      var b = "";
      if (h.rating != null) {
        b += $WH.sprintf(LANG.lvcomment_patch, g_getPatchVersion(e))
      }
      if (g[1] > 1) {
        b += LANG.dash + $WH.sprintf(LANG.lvcomment_nedits, g[1])
      }
      c.childNodes[4].nodeValue = b;
      c.style.display = ""
    } else {
      c.style.display = "none"
    }
  },
  coFormatFileSize: function (e) {
    var c = -1;
    var b = "KMGTPEZY";
    while (e >= 1024 && c < 7) {
      e /= 1024;
      ++c
    }
    if (c < 0) {
      return e + " byte" + (e > 1 ? "s" : "")
    } else {
      return e.toFixed(1) + " " + b[c] + "B"
    }
  },
  dateEventOver: function (f, b, k) {
    var c = $WH.g_getEventNextDates(b, f),
        m = "";
    if (c[0] && c[1]) {
      var j = c[0],
          g = c[1],
          h, l;
      j.setFullYear(f.getFullYear(), f.getMonth(), f.getDate());
      g.setFullYear(f.getFullYear(), f.getMonth(), f.getDate());
      if (f.getFullYear() == c[0].getFullYear() && f.getMonth() == c[0].getMonth() && f.getDate() == c[0].getDate()) {
        h = true
      }
      if (f.getFullYear() == c[1].getFullYear() && f.getMonth() == c[1].getMonth() && f.getDate() == c[1].getDate()) {
        l = true
      }
      if (h && l) {
        m = g_formatTimeSimple(j, LANG.lvscreenshot_from, 1) + " " + g_formatTimeSimple(g, LANG.date_to, 1)
      } else {
        if (h) {
          m = g_formatTimeSimple(j, LANG.tab_starts)
        } else {
          if (l) {
            m = g_formatTimeSimple(g, LANG.tab_ends)
          } else {
            m = LANG.allday
          }
        }
      }
    }
    $WH.Tooltip.showAtCursor(k, '<span class="q1">' + b.name + "</span><br />" + m, 0, 0, "q")
  },
  comparisonTextOver: function (k, f, c, m, l) {
    var o = '<table class="compare"><tr>';
    var b;
    o += "<tr>";
    for (var h = 0; h < k.data.length; ++h) {
      b = (k.data[h].status == c ? "this" : "other");
      o += "<td><b>" + f ? m[b] : LANG["lvcomparison_" + b] + "</b></td>"
    }
    o += "</tr>";
    for (var h = 0; h < k.tooltip.length; ++h) {
      var n = 1;
      if (k.progress < 1) {
        n = (k.tooltip[h][k.data[0].status] ? 1 : 0);
        for (var g = 1; n && g < k.data.length; ++g) {
          if (k.tooltip[h][k.data[g].status] == "&lt;" + LANG.fiany + "&gt;") {
            continue
          }
          if (!k.tooltip[h][k.data[g].status] || k.tooltip[h][k.data[g].status] != k.tooltip[h][k.data[0].status]) {
            n = 0
          }
        }
      }
      o += "<tr>";
      for (var g = 0; g < k.data.length; ++g) {
        o += '<td class="q' + n + '">' + k.tooltip[h][k.data[g].status] + "</td>"
      }
      o += "</tr>"
    }
    o += "</table>";
    $WH.Tooltip.showAtCursor(l, o, 0, 0, "q")
  },
  ssCellOver: function () {
    this.className = "screenshot-caption-over"
  },
  ssCellOut: function () {
    this.className = "screenshot-caption"
  },
  ssCellClick: function (c, g) {
    g = $WH.$E(g);
    if (g.shiftKey || g.ctrlKey) {
      return
    }
    var b = 0,
        f = g._target;
    while (f && b < 3) {
      if (f.nodeName == "A") {
        return
      }
      if (f.nodeName == "IMG") {
        break
      }
      f = f.parentNode
    }
    ScreenshotViewer.show({
      screenshots: this.data,
      pos: c,
      hashname: this.id
    })
  },
  ssCreateCb: function (f, c) {
    if (c.__nochk) {
      return
    }
    var e = $WH.ce("div");
    e.className = "listview-cb";
    e.onclick = Listview.cbCellClick;
    var b = $WH.ce("input");
    b.type = "checkbox";
    b.onclick = Listview.cbClick;
    $WH.ns(b);
    if (c.__chk) {
      b.checked = true
    }
    c.__cb = b;
    $WH.ae(e, b);
    $WH.ae(f, e)
  },
  viCellClick: function (c, g) {
    g = $WH.$E(g);
    if (g.shiftKey || g.ctrlKey) {
      return
    }
    var b = 0,
        f = g._target;
    while (f && b < 3) {
      if (f.nodeName == "A") {
        return
      }
      if (f.nodeName == "IMG") {
        break
      }
      f = f.parentNode
    }
    VideoViewer.show({
      videos: this.data,
      pos: c
    })
  },
  moneyAchievementOver: function (b) {
    $WH.Tooltip.showAtCursor(b, "<b>" + LANG.tooltip_achievementpoints + "</b>", 0, 0, "q1")
  },
  moneyCurrencyOver: function (c, j, k) {
    var l = g_gatheredcurrencies[c]["name_" + Locale.getName()];
    switch (c) {
    case 395:
      var g = [
        [80, 16, LANG.tooltip_ppbheroic],
        [80, 23, LANG.tooltip_ppbraid],
        [85, 75, LANG.tooltip_ppbheroic],
        [90, 100, LANG.tooltip_ppbheroic]
      ];
      break;
    case 396:
      var g = [
        [90, 40, $WH.sprintf(LANG.tooltip_ppb10man, LANG.tooltip_ppbraid)],
        [90, 40, $WH.sprintf(LANG.tooltip_ppb25man, LANG.tooltip_ppbraid)]
      ];
      break;
    default:
      var g = [];
      break
    }
    if (g.length && j) {
      l += '<br /><span class="q">';
      for (var f = 0, b = g.length; f < b; ++f) {
        var h = Math.ceil(j / g[f][1]);
        if (f > 0) {
          l += "<br />"
        }
        l += $WH.sprintf(LANG["tooltip_pointsperboss" + (h == 1 ? 1 : 2)], h, g[f][0], g[f][2])
      }
      l += "</span>"
    }
    $WH.Tooltip.showAtCursor(k, l, 0, 0, "q1")
  },
  appendMoney: function (j, b, h, f, c, p) {
    var n, m, l = 0;
    if (h == 1 || h == "alliance") {
      h = 1
    } else {
      if (h == 2 || h == "horde") {
        h = 2
      } else {
        h = 3
      }
    }
    if (b >= 10000) {
      l = 1;
      n = $WH.ce("span");
      n.className = "moneygold";
      $WH.ae(n, $WH.ct($WH.number_format(Math.floor(b / 10000))));
      $WH.ae(j, n);
      b %= 10000
    }
    if (b >= 100) {
      if (l) {
        $WH.ae(j, $WH.ct(" "))
      } else {
        l = 1
      }
      n = $WH.ce("span");
      n.className = "moneysilver";
      $WH.ae(n, $WH.ct(Math.floor(b / 100)));
      $WH.ae(j, n);
      b %= 100
    }
    if (b >= 1) {
      if (l) {
        $WH.ae(j, $WH.ct(" "))
      } else {
        l = 1
      }
      n = $WH.ce("span");
      n.className = "moneycopper";
      $WH.ae(n, $WH.ct(b));
      $WH.ae(j, n)
    }
    if (f != null) {
      for (var e = 0; e < f.length; ++e) {
        if (l) {
          $WH.ae(j, $WH.ct(" "))
        } else {
          l = 1
        }
        var q = f[e][0];
        var g = f[e][1];
        var k = g_items.getIcon(q);
        n = $WH.ce("a");
        n.href = g_getRelativeHostPrefix() + "/item=" + q;
        n.className = "moneyitem";
        n.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + k.toLowerCase() + ".gif)";
        $WH.ae(n, $WH.ct(g));
        $WH.ae(j, n)
      }
    }
    if (c != null) {
      for (var e = 0; e < c.length; ++e) {
        if (l) {
          $WH.ae(j, $WH.ct(" "))
        } else {
          l = 1
        }
        var o = c[e][0];
        var g = c[e][1];
        if (!g_gatheredcurrencies[o]) {
          $.each(g_currencies, function (s, r) {
            g_gatheredcurrencies[s] = [];
            g_gatheredcurrencies[s]["name_" + Locale.getName()] = r[0];
            g_gatheredcurrencies[s].icon = [];
            g_gatheredcurrencies[s].icon.push(r[1]);
            g_gatheredcurrencies[s].icon.push(r[1])
          })
        }
        var k = g_gatheredcurrencies.getIcon(o, (h == 3 ? 0 : h - 1));
        if ((!k) && $WH.isset("g_currencies") && g_currencies.hasOwnProperty(o)) {
          k = g_currencies[o].icon
        }
        if (!k) {
          k = "inv_misc_questionmark"
        }
        n = $WH.ce("a");
        n.href = g_getRelativeHostPrefix() + "/currency=" + o;
        n.className = "icontinyr tip q1";
        n.style.display = "inline-block";
        n.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + k.toLowerCase() + ".gif)";
        n.onmouseover = Listview.funcBox.moneyCurrencyOver.bind(n, o, g);
        n.onmousemove = $WH.Tooltip.cursorUpdate;
        n.onmouseout = $WH.Tooltip.hide;
        $WH.ae(j, n);
        $WH.ae(n, $WH.ct($WH.number_format(g)))
      }
    }
    if (p > 0) {
      if (l) {
        $WH.ae(j, $WH.ct(" "))
      } else {
        l = 1
      }
      n = $WH.ce("span");
      n.className = "moneyachievement tip";
      n.onmouseover = Listview.funcBox.moneyAchievementOver;
      n.onmousemove = $WH.Tooltip.cursorUpdate;
      n.onmouseout = $WH.Tooltip.hide;
      $WH.ae(n, $WH.ct($WH.number_format(p)));
      $WH.ae(j, n)
    }
  },
  viewColors: function (b, c) {
    if (c >= 50000) {
      b.css("color", "#FF4040");
      b.css("font-weight", "bold")
    } else {
      if (c >= 25000) {
        b.css("color", "#FF8000");
        b.css("font-weight", "bold")
      } else {
        if (c >= 10000) {
          b.css("color", "#A335EE")
        } else {
          if (c >= 5000) {
            b.css("color", "#0070DD")
          } else {
            if (c >= 1000) {
              b.css("color", "#1EFF00")
            }
          }
        }
      }
    }
  },
  getUpperSource: function (b, c) {
    switch (b) {
    case 2:
      if (c.bd) {
        return LANG.source_bossdrop
      }
      if (c.z) {
        return LANG.source_zonedrop
      }
      break;
    case 4:
      return LANG.source_quests;
    case 5:
      return LANG.source_vendors
    }
    return g_sources[b]
  },
  getLowerSource: function (b, f, e) {
    switch (b) {
    case 3:
      if (f.p && g_sources_pvp[f.p]) {
        return {
          text: g_sources_pvp[f.p]
        }
      }
      break
    }
    switch (e) {
    case 0:
    case 1:
    case 2:
      if (f.z) {
        var c = {
          url: g_getRelativeHostPrefix() + "/zone=" + f.z,
          text: g_zones[f.z]
        };
        if (f.t && b == 5) {
          c.pretext = LANG.lvitem_vendorin
        }
        if (f.dd && f.dd != 99) {
          if (f.dd < 0) {
            c.posttext = $WH.sprintf(LANG.lvitem_dd, "", (f.dd < -1 ? LANG.lvitem_heroic : LANG.lvitem_normal))
          } else {
            if (f.dd >= 14) {
              c.posttext = (f.dd == 15 || f.dd == 16) ? LANG.lvitem_heroic : LANG.lvitem_normal
            } else {
              c.posttext = $WH.sprintf(LANG.lvitem_dd, (f.dd & 1 ? LANG.lvitem_raid10 : LANG.lvitem_raid25), (f.dd > 2 ? LANG.lvitem_heroic : LANG.lvitem_normal))
            }
          }
        }
        return c
      }
      break;
    case 5:
      return {
        url: g_getRelativeHostPrefix() + "/quests=" + f.c2 + "." + f.c,
        text: Listview.funcBox.getQuestCategory(f.c)
      };
      break;
    case 6:
      if (f.c && f.s) {
        return {
          url: g_getRelativeHostPrefix() + "/spells=" + f.c + "." + f.s,
          text: g_spell_skills[f.s]
        }
      } else {
        return {
          url: g_getRelativeHostPrefix() + "/spells=0",
          text: "??"
        }
      }
      break
    }
  },
  getExpansionText: function (b) {
    var c = "";
    if (b.expansion == 1) {
      c += " bc"
    } else {
      if (b.expansion == 2) {
        c += " wotlk wrath"
      } else {
        if (b.expansion == 3) {
          c += " cat cata cataclysm"
        }
      }
    }
    return c
  },
  getComparisonText: function (g, c, b, j) {
    var m = $WH.ce("span");
    m.className = "compare-text";
    if (!c) {
      m.style.display = "block";
      m.style.margin = "0 auto";
      m.style.textAlign = "left";
      m.style.width = "53px"
    }
    if (!j) {
      j = LANG.lvcompletion
    }
    var e = g.hasOwnProperty("progressAmount") ? g.progressAmount : g.progress;
    if (e < 0) {
      e = 0
    }
    var k = $WH.ce("span");
    k.className = "progress-icon progress-" + (e == 1 ? "8" : Math.min(Math.round(e * 8), 7));
    $WH.ae(m, k);
    var l = $WH.ce("span");
    if (c) {
      if (g.progress == 1) {
        $WH.st(l, j.identical)
      } else {
        if (g.progress == -1) {
          $WH.st(l, j.duplicate)
        } else {
          if (!g.progress && g.primary == b) {
            $WH.st(l, j.extra)
          } else {
            if (!g.progress) {
              $WH.st(l, j.missing)
            } else {
              var n = $WH.ce("span");
              n.className = "tip";
              $WH.st(n, Math.floor(g.progress * 100) + "%");
              $WH.ae(l, $WH.ct(j.similar + " ("));
              $WH.ae(l, n);
              $WH.ae(l, $WH.ct(")"))
            }
          }
        }
      }
    } else {
      $WH.st(l, Math.floor(g.progress * 100) + "%")
    }
    var h = true;
    for (var f in g.tooltip) {
      h = h && (g.tooltip[f].length != g.data.length)
    }
    if (g.tooltip.length && h) {
      m.onmouseover = Listview.funcBox.comparisonTextOver.bind(m, g, c, b, j);
      m.onmousemove = $WH.Tooltip.cursorUpdate;
      m.onmouseout = $WH.Tooltip.hide;
      if (!c) {
        l.className = "tip"
      }
    }
    $WH.ae(m, $WH.ct(" "));
    $WH.ae(m, l);
    return m
  }
};
Listview.templates = {
  building: {
    sort: [1, 2],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      value: "name",
      compute: function (e, h, g) {
        var f = $WH.ce("td");
        f.style.width = "1px";
        f.style.paddingRight = "0";
        f.style.borderRight = "none";
        if (e.icon) {
          $WH.ae(f, Icon.create(e.icon, (this.iconSize == null ? 0 : this.iconSize), null, this.getItemLink(e), 1))
        } else {
          $WH.ae(f, Icon.create("inv_misc_questionmark", (this.iconSize == null ? 0 : this.iconSize), null, this.getItemLink(e), 1))
        }
        $WH.ae(g, f);
        h.style.borderLeft = "none";
        var c = e.name;
        if (e.levelname != e.name) {
          c += " / " + e.levelname
        }
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(e);
        $WH.ae(b, $WH.ct(c));
        $WH.ae(h, b)
      }
    },
    {
      id: "level",
      name: LANG.level,
      type: "number",
      value: "level",
      width: "5%"
    },
    {
      id: "leveldescription",
      name: LANG.description,
      type: "text",
      align: "left",
      width: "50%",
      sortable: false,
      filtrable: false,
      value: "leveldescription",
      compute: function (b, c) {
        $WH.ae(c, $WH.ce("div", {
          className: "listview-blurb small",
          innerHTML: b.leveldescription
        }))
      }
    },
    {
      id: "plot",
      name: LANG.plot,
      type: "text",
      compute: function (c, h) {
        var e = 0;
        for (var g in c.plots) {
          if (!c.plots.hasOwnProperty(g)) {
            continue
          }
          if (e++ > 0) {
            $WH.ae(h, $WH.ct(", "))
          }
          var f = c.plots[g];
          if (g_garrison_plots.hasOwnProperty(f.id)) {
            var b = $WH.ce("a");
            b.href = g_getRelativeHostPrefix() + "/buildings=" + f.id;
            $WH.st(b, g_garrison_plots[f.id])
          } else {
            var b = $WH.ce("span");
            $WH.st(b, f.plotname)
          }
          $WH.ae(h, b)
        }
      },
      sortFunc: function (e, c, f) {
        var g = "",
            j = "";
        for (var h in e.plots) {
          if (e.plots.hasOwnProperty(h)) {
            g = g_garrison_plots.hasOwnProperty(e.plots[h].id) ? g_garrison_plots[e.plots[h].id] : e.plots[h].plotname;
            break
          }
        }
        for (var h in c.plots) {
          if (c.plots.hasOwnProperty(h)) {
            j = g_garrison_plots.hasOwnProperty(c.plots[h].id) ? g_garrison_plots[c.plots[h].id] : c.plots[h].plotname;
            break
          }
        }
        return $WH.strcmp(g, j)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/building=" + b.id
    }
  },
  buildinggallery: {
    sort: [1, 2],
    mode: 3,
    nItemsPerPage: 24,
    nItemsPerRow: 3,
    poundable: 1,
    sortOptions: [{
      id: "name",
      name: LANG.name,
      sortFunc: function (e, c) {
        var f = this.id.indexOf("horde") >= 0 ? "horde" : "alliance";
        return $WH.strcmp(e[f == "alliance" ? "name" : "levelname"], c[f == "alliance" ? "name" : "levelname"]) || (e.level - c.level)
      }
    },
    {
      id: "level",
      name: LANG.level,
      value: "level"
    },
    {
      id: "plot",
      name: LANG.plot,
      sortFunc: function (e, c, f) {
        var g = "",
            j = "";
        for (var h in e.plots) {
          if (e.plots.hasOwnProperty(h)) {
            g = g_garrison_plots.hasOwnProperty(e.plots[h].id) ? g_garrison_plots[e.plots[h].id] : e.plots[h].plotname;
            break
          }
        }
        for (var h in c.plots) {
          if (c.plots.hasOwnProperty(h)) {
            j = g_garrison_plots.hasOwnProperty(c.plots[h].id) ? g_garrison_plots[c.plots[h].id] : c.plots[h].plotname;
            break
          }
        }
        return $WH.strcmp(g, j)
      }
    }],
    columns: [],
    value: "name",
    compute: function (e, k, f) {
      var j = this.id.indexOf("horde") >= 0 ? "horde" : "alliance";
      k.className = "building-cell";
      var b = $WH.ce("a");
      b.className = "building-cell-building";
      b.href = g_getRelativeHostPrefix("wowhead.com") + "/building=" + e.id;
      if (j == "horde") {
        b.rel = "buff"
      }
      var c = $WH.ce("span");
      c.style.backgroundImage = 'url("' + g_staticUrl + "/images/wow/garr/" + e[j + "_file"] + '.png")';
      c.style.backgroundPosition = "-" + e[j + "_x1"] + "px -" + e[j + "_y1"] + "px";
      c.style.width = "" + (parseInt(e[j + "_x2"], 10) - parseInt(e[j + "_x1"], 10)) + "px";
      c.style.height = "" + (parseInt(e[j + "_y2"], 10) - parseInt(e[j + "_y1"], 10)) + "px";
      $WH.ae(b, c);
      $WH.ae(k, b);
      var h = $WH.ce("div");
      h.className = "building-cell-name";
      var g = $WH.ce("div");
      g.className = "screenshot-caption";
      $(g).click(function () {
        location.href = g_getRelativeHostPrefix("wowhead.com") + "/building=" + e.id
      });
      $WH.aE(k, "mouseover", Listview.funcBox.ssCellOver.bind(g));
      $WH.aE(k, "mouseout", Listview.funcBox.ssCellOut.bind(g));
      $WH.ae(g, $WH.ct(e[j == "alliance" ? "name" : "levelname"] + " " + LANG.level + " " + e.level));
      $WH.ae(h, g);
      $WH.ae(k, h)
    },
    sortFunc: function (e, c) {
      return $WH.strcmp(e.name, c.name)
    }
  },
  faction: {
    sort: [1],
    mode: 1,
    nItemsPerPage: -1,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (e, f) {
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(e);
        $WH.ae(b, $WH.ct(e.name));
        if (e.expansion) {
          var c = $WH.ce("span");
          c.className = g_GetExpansionClassName(e.expansion);
          $WH.ae(c, b);
          $WH.ae(f, c)
        } else {
          $WH.ae(f, b)
        }
      },
      getVisibleText: function (b) {
        var c = b.name + Listview.funcBox.getExpansionText(b);
        return c
      }
    },
    {
      id: "side",
      name: LANG.side,
      type: "text",
      compute: function (b, e) {
        if (b.side && b.side != 3) {
          var c = $WH.ce("span");
          c.className = (b.side == 1 ? "icon-alliance" : "icon-horde");
          c.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, g_sides[b.side], 0, 0, "q")
          };
          c.onmousemove = $WH.Tooltip.cursorUpdate;
          c.onmouseout = $WH.Tooltip.hide;
          $WH.ae(e, c)
        }
      },
      getVisibleText: function (b) {
        if (b.side) {
          return g_sides[b.side]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_sides[e.side], g_sides[c.side])
      }
    },
    {
      id: "standing",
      name: LANG.reputation,
      value: "standing",
      compute: function (b, c) {
        c.style.padding = 0;
        $WH.ae(c, g_createReputationBar(b.standing, b.friendshiprep))
      },
      hidden: 1
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      width: "16%",
      compute: function (e, f) {
        if (e.category2 != null) {
          f.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
          var b = $WH.ce("a"),
              c = g_getRelativeHostPrefix() + "/factions=" + e.category2;
          if (e.category) {
            c += "." + e.category
          }
          b.href = c;
          $WH.ae(b, $WH.ct(Listview.funcBox.getFactionCategory(e.category, e.category2)));
          $WH.ae(f, b)
        }
      },
      getVisibleText: function (b) {
        return Listview.funcBox.getFactionCategory(b.category, b.category2)
      },
      sortFunc: function (e, c, g) {
        var f = Listview.funcBox.getFactionCategory;
        return $WH.strcmp(f(e.category, e.category2), f(c.category, c.category2))
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/faction=" + b.id
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "faction")
      }).bind(this);
      $WH.ae(e, b)
    }
  },
  follower: {
    sort: [-5, 1],
    mode: 1,
    searchable: 1,
    filtrable: 1,
    completionText: LANG.lvcompletion_collection,
    columns: [{
      id: "namealliance",
      name: LANG.som.alliance + " " + LANG.name,
      type: "text",
      align: "left",
      value: "namealliance",
      compute: function (e, h, c) {
        var b = $WH.ce("a");
        b.className = "q" + e.quality + " listview-cleartext";
        b.href = this.getItemLink(e, 1);
        if (e.hasOwnProperty("abilities") && $WH.is_array(e.abilities) && e.hasOwnProperty("custom") && e.custom) {
          b.rel = "q=" + e.quality + "&level=" + e.level + "&abil=" + e.abilities.join(":")
        }
        h.style.paddingLeft = "2.5em";
        if (e.portraitalliance) {
          h.style.backgroundImage = 'url("' + g_staticUrl + "/images/wow/garr/" + e.portraitalliance + '.png")';
          h.style.backgroundRepeat = "no-repeat";
          h.style.backgroundSize = "3em 3em";
          h.style.backgroundPosition = "-0.75em -0.25em"
        }
        $WH.ae(b, $WH.ct(e.namealliance));
        var g = $WH.ce("div");
        $WH.ae(h, g);
        $WH.ae(g, b);
        if (e.hasOwnProperty("active") && !parseInt(e.active)) {
          g.style.position = "relative";
          var f = $WH.ce("div");
          f.className = "listview-name-info q10";
          $WH.ae(f, $WH.ct(LANG.inactive));
          $WH.aef(g, f)
        }
        $WH.ae(h, g)
      }
    },
    {
      id: "classalliance",
      name: LANG.som.alliance + " " + LANG.classs,
      type: "text",
      align: "left",
      value: "classalliance",
      width: "20%",
      compute: function (c, e, b) {
        $WH.st(e, c.classalliance)
      }
    },
    {
      id: "namehorde",
      name: LANG.som.horde + " " + LANG.name,
      type: "text",
      align: "left",
      value: "namehorde",
      compute: function (e, h, c) {
        var b = $WH.ce("a");
        b.className = "q" + e.quality + " listview-cleartext";
        b.href = this.getItemLink(e, 2);
        if (e.hasOwnProperty("abilities") && $WH.is_array(e.abilities) && e.hasOwnProperty("custom") && e.custom) {
          b.rel = "q=" + e.quality + "&level=" + e.level + "&abil=" + e.abilities.join(":")
        }
        h.style.paddingLeft = "2.5em";
        if (e.portraithorde) {
          h.style.backgroundImage = 'url("' + g_staticUrl + "/images/wow/garr/" + e.portraithorde + '.png")';
          h.style.backgroundRepeat = "no-repeat";
          h.style.backgroundSize = "3em 3em";
          h.style.backgroundPosition = "-0.75em -0.25em"
        }
        $WH.ae(b, $WH.ct(e.namehorde));
        var g = $WH.ce("div");
        $WH.ae(h, g);
        $WH.ae(g, b);
        if (e.hasOwnProperty("active") && !e.active) {
          g.style.position = "relative";
          var f = $WH.ce("div");
          f.className = "listview-name-info q10";
          $WH.ae(f, $WH.ct(LANG.inactive));
          $WH.aef(g, f)
        }
        $WH.ae(h, g)
      }
    },
    {
      id: "classhorde",
      name: LANG.som.horde + " " + LANG.classs,
      type: "text",
      align: "left",
      value: "classhorde",
      width: "20%",
      compute: function (c, e, b) {
        $WH.st(e, c.classhorde)
      }
    },
    {
      id: "counters",
      name: LANG.counters,
      hidden: 1,
      type: "text",
      width: "168px",
      compute: function (j, e) {
        if (!j.hasOwnProperty("abilities")) {
          return
        }
        var h = j.abilities;
        if (!$WH.is_array(h)) {
          if (($WH.in_array(this.hiddenCols, "namehorde") != -1) && h.hasOwnProperty("1")) {
            h = h["1"]
          } else {
            if (($WH.in_array(this.hiddenCols, "namealliance") != -1) && h.hasOwnProperty("2")) {
              h = h["2"]
            } else {
              return
            }
          }
        }
        e.style.padding = "0 6px";
        e.style.textAlign = "left";
        for (var l = 0; l < h.length; l++) {
          var f = g_garrison_abilities[h[l]];
          for (var c in f.counters) {
            if (!f.counters.hasOwnProperty(c)) {
              continue
            }
            if (!g_garrison_mechanics.hasOwnProperty(f.counters[c])) {
              continue
            }
            var b = g_garrison_mechanics[f.counters[c]];
            var k = $WH.ce("div");
            k.style.display = "inline-block";
            if (b.hasOwnProperty("icon")) {
              var g = Icon.create(b.icon, 0, null, "/garrisonability=" + f.id);
              g.className += " garrison-ability";
              g.style.cssFloat = "left";
              $WH.ae(k, g)
            }
            $WH.ae(e, k)
          }
        }
      },
      getVisibleText: function (e) {
        var c = "";
        if (!e.hasOwnProperty("abilities")) {
          return c
        }
        var h = e.abilities;
        if (!$WH.is_array(h)) {
          if (($WH.in_array(this.hiddenCols, "namehorde") != -1) && h.hasOwnProperty("1")) {
            h = h["1"]
          } else {
            if (($WH.in_array(this.hiddenCols, "namealliance") != -1) && h.hasOwnProperty("2")) {
              h = h["2"]
            } else {
              return c
            }
          }
        }
        for (var b = 0; b < h.length; b++) {
          var f = g_garrison_abilities[h[b]];
          for (var g in f.counters) {
            if (!f.counters.hasOwnProperty(g)) {
              continue
            }
            c += f.counters[g].name + " "
          }
        }
        return c
      }
    },
    {
      id: "quality",
      name: LANG.quality,
      type: "text",
      value: "quality",
      width: "10%",
      compute: function (c, e) {
        var b = $WH.ce("span");
        b.className = "q" + c.quality;
        $WH.st(b, g_item_qualities[c.quality]);
        $WH.ae(e, b)
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.quality, c.quality)
      }
    },
    {
      id: "level",
      name: LANG.level,
      type: "number",
      value: "level",
      width: "5%"
    },
    {
      id: "itemlevelaverage",
      name: LANG.avg,
      type: "number",
      value: "avgilvl",
      width: "5%",
      hidden: 1
    },
    {
      id: "itemlevelweapon",
      name: g_item_classes[2],
      type: "number",
      value: "itemlevelweapon",
      width: "5%"
    },
    {
      id: "itemlevelarmor",
      name: g_item_classes[4],
      type: "number",
      value: "itemlevelarmor",
      width: "5%"
    },
    {
      id: "completed",
      name: LANG.completion,
      width: "10%",
      hidden: true,
      compute: function (g, f, j, o) {
        var h = 3;
        if (this.hiddenCols) {
          for (var n = 0; n < this.hiddenCols.length; n++) {
            if (this.hiddenCols[n] == "namealliance") {
              h = 2;
              break
            }
            if (this.hiddenCols[n] == "namehorde") {
              h = 1;
              break
            }
          }
        }
        if (g.npcalliance == g.npchorde) {
          h = false
        }
        for (var k in g_user.lists) {
          var e = g_user.lists[k];
          if (!(e.id in g_completion.follower)) {
            continue
          }
          var b = ($WH.in_array(g_completion.follower[e.id], g.id) != -1);
          if (h) {
            if (h != 3) {
              b |= ($WH.in_array(g_completion.follower[e.id], "" + g.id + "." + h) != -1)
            } else {
              b |= ($WH.in_array(g_completion.follower[e.id], "" + g.id + ".1") != -1);
              b |= ($WH.in_array(g_completion.follower[e.id], "" + g.id + ".2") != -1)
            }
          }
          var m = $WH.ce("a");
          m.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + e.id + "/" + e.url;
          m.className = "progress-icon " + (b ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(m, (b ? this.completionText.identical : this.completionText.missing) + ": " + e.character + " - " + e.realm + " " + e.region);
          $WH.ae(f, m)
        }
      },
      sortFunc: function (g, f, h) {
        var j = 3;
        if (this.hiddenCols) {
          for (var e = 0; e < this.hiddenCols.length; e++) {
            if (this.hiddenCols[e] == "namealliance") {
              j = 2;
              break
            }
            if (this.hiddenCols[e] == "namehorde") {
              j = 1;
              break
            }
          }
        }
        var c = j,
            l = j;
        if (g.npcalliance == g.npchorde) {
          c = false
        }
        if (f.npcalliance == f.npchorde) {
          l = false
        }
        var k = function (q, o) {
          var p = 0;
          if (!g_user.lists) {
            return p
          }
          for (var b = g_user.lists.length - 1; b >= 0; b--) {
            var m = g_user.lists[b];
            if (!(m.id in g_completion.follower)) {
              continue
            }
            var n = $WH.in_array(g_completion.follower[m.id], q) != -1;
            if (o) {
              if (o != 3) {
                n |= ($WH.in_array(g_completion.follower[m.id], "" + q + "." + o) != -1)
              } else {
                n |= ($WH.in_array(g_completion.follower[m.id], "" + q + ".1") != -1);
                n |= ($WH.in_array(g_completion.follower[m.id], "" + q + ".2") != -1)
              }
            }
            p = (p << 1) | (n ? 1 : 0)
          }
          return p
        };
        return $WH.strcmp(k(g.id, c), k(f.id, l))
      }
    }],
    getItemLink: function (e, c) {
      if (!c && this.hiddenCols) {
        for (var b = 0; b < this.hiddenCols.length; b++) {
          if (this.hiddenCols[b] == "namealliance") {
            c = 2;
            break
          }
          if (this.hiddenCols[b] == "namehorde") {
            c = 1;
            break
          }
        }
      }
      if (e.npcalliance == e.npchorde) {
        c = false
      }
      return g_getRelativeHostPrefix() + "/follower=" + e.id + (c ? ("." + c) : "")
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("follower" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.push(parseInt(b));
            break
          }
        }
      }
    }
  },
  followergallery: {
    sort: [1, 2],
    mode: 3,
    nItemsPerPage: 48,
    nItemsPerRow: 4,
    poundable: 1,
    sortOptions: [{
      id: "name",
      name: LANG.name,
      sortFunc: function (e, c) {
        var f = this.id.indexOf("horde") >= 0 ? "horde" : "alliance";
        return $WH.strcmp(e["name" + f], c["name" + f])
      }
    },
    {
      id: "level",
      name: LANG.level,
      value: "level"
    }],
    columns: [],
    value: "name",
    compute: function (h, e, g) {
      var c = this.id.indexOf("horde") >= 0 ? "horde" : "alliance";
      var j = (c == "horde" ? "2" : "1");
      e.className = "follower-cell";
      var l = $WH.ce("a");
      l.className = "follower-cell-follower";
      l.href = g_getRelativeHostPrefix("wowhead.com") + "/follower=" + h.id + "." + j;
      var f = $WH.ce("span");
      f.style.backgroundImage = 'url("' + g_staticUrl + "/images/wow/garr/npcmodels/" + h["npc" + c] + '.jpg"),url("' + g_staticUrl + "/images/wow/garr/" + h["portrait" + c] + '.png")';
      f.style.backgroundSize = "cover, 128px 128px";
      f.style.backgroundPosition = "center";
      f.style.width = "160px";
      f.style.height = "224px";
      $WH.ae(l, f);
      $WH.ae(e, l);
      var k = $WH.ce("div");
      k.className = "follower-cell-name q" + h.quality;
      var b = $WH.ce("div");
      b.className = "screenshot-caption";
      $(b).click(function () {
        location.href = g_getRelativeHostPrefix("wowhead.com") + "/follower=" + h.id + "." + j
      });
      $WH.aE(e, "mouseover", Listview.funcBox.ssCellOver.bind(b));
      $WH.aE(e, "mouseout", Listview.funcBox.ssCellOut.bind(b));
      $WH.ae(b, $WH.ct(h["name" + c]));
      $WH.ae(k, b);
      $WH.ae(e, k)
    }
  },
  garrisonability: {
    sort: [1, 2],
    mode: 0,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (h, k, f) {
        var c = $WH.ce("td");
        c.style.width = "1px";
        c.style.paddingRight = "0";
        c.style.borderRight = "none";
        var e = Icon.create(h.icon, (this.iconSize == null ? 0 : this.iconSize), null, this.getItemLink(h));
        e.className += " garrison-ability";
        $WH.ae(c, e);
        $WH.ae(f, c);
        k.style.borderLeft = "none";
        var j = $WH.ce("div");
        $WH.ae(k, j);
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(h);
        $WH.ae(b, $WH.ct(h.name));
        $WH.ae(j, b);
        if ((h.flags & 2) && h.hasOwnProperty("byclass") && (h.byclass == 1)) {
          j.style.position = "relative";
          var g = $WH.ce("div");
          g.className = "listview-name-info q10";
          $WH.ae(g, $WH.ct(LANG.lvgarrisonability_innonly));
          $WH.aef(j, g)
        }
        if (h.description != null) {
          var g = $WH.ce("div");
          g.className = "listview-blurb small";
          g.innerHTML = h.description;
          $WH.ae(k, g)
        }
      },
      getVisibleText: function (b) {
        return b.name
      }
    },
    {
      id: "side",
      hidden: 1,
      name: LANG.side,
      type: "text",
      compute: function (e, f) {
        if (e.hasOwnProperty("side")) {
          for (var c = 1; c <= 2; c++) {
            if ((e.side & c) == 0) {
              continue
            }
            var b = $WH.ce("span");
            b.className = (c == 1 ? "icon-alliance" : "icon-horde");
            b.onmouseover = function (g) {
              $WH.Tooltip.showAtCursor(g, g_sides[e.side], 0, 0, "q")
            };
            b.onmousemove = $WH.Tooltip.cursorUpdate;
            b.onmouseout = $WH.Tooltip.hide;
            $WH.ae(f, b)
          }
        }
      },
      getVisibleText: function (b) {
        if (b.hasOwnProperty("side")) {
          return g_sides[b.side]
        }
        return ""
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.hasOwnProperty("side") ? g_sides[e.side] : "", c.hasOwnProperty("side") ? g_sides[c.side] : "")
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      compute: function (c, e) {
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/garrisonabilities=" + c.followertype + "." + c.type;
        $WH.st(b, g_garrison_ability_types[c.followertype][c.type]);
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_garrison_ability_types[b.followertype][b.type]
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.followertype, c.followertype) || $WH.strcmp(g_garrison_ability_types[e.followertype][e.type], g_garrison_ability_types[c.followertype][c.type])
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      compute: function (b, c) {
        if (g_garrison_ability_categories.hasOwnProperty(b.category)) {
          $WH.st(c, g_garrison_ability_categories[b.category])
        }
      },
      getVisibleText: function (b) {
        if (g_garrison_ability_categories.hasOwnProperty(b.category)) {
          return g_garrison_ability_categories[b.category]
        }
        return ""
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(g_garrison_ability_categories.hasOwnProperty(e.category) ? g_garrison_ability_categories[e.category] : "", g_garrison_ability_categories.hasOwnProperty(c.category) ? g_garrison_ability_categories[c.category] : "")
      }
    },
    {
      id: "counters",
      name: LANG.counters,
      type: "text",
      compute: function (h, k) {
        if (!h.hasOwnProperty("counters")) {
          return
        }
        var f = 0;
        for (var j in h.counters) {
          if (!h.counters.hasOwnProperty(j)) {
            continue
          }
          var c = h.counters[j];
          var g = $WH.ce("div");
          g.style.display = "inline-block";
          if (c.hasOwnProperty("icon")) {
            var e = Icon.create(c.icon, 0, null, g_getRelativeHostPrefix() + "/threat=" + j);
            e.className += " garrison-ability";
            e.style.cssFloat = "left";
            $WH.ae(g, e)
          }
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix() + "/threat=" + j;
          $WH.st(b, c.name);
          $WH.ae(g, b);
          if (f++ > 0) {
            $WH.ae(k, $WH.ce("br"))
          }
          $WH.ae(k, g)
        }
      },
      getVisibleText: function (c) {
        var b = "";
        for (var e in c.counters) {
          if (!c.counters.hasOwnProperty(e)) {
            continue
          }
          b += c.counters[e].name + " "
        }
        return b
      },
      sortFunc: function (f, e) {
        var g = this.getVisibleText(f);
        var c = this.getVisibleText(e);
        return $WH.strcmp(g, c)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/garrisonability=" + b.id
    }
  },
  guide: {
    sort: ["rating"],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "title",
      name: "Title",
      type: "text",
      align: "left",
      value: "title",
      compute: function (b, g, c) {
        if (b.status == 5) {
          $(c).addClass("outofdate")
        }
        if (!b.title) {
          b.title = b.url
        }
        var f = $("<a>").text(b.title).attr("class", "listview-cleartext").attr("href", b.url);
        if (b.description) {
          f.mouseover(function (h) {
            $WH.Tooltip.showAtCursor(h, b.description, 0, 0, "q")
          }).mousemove(function (h) {
            $WH.Tooltip.cursorUpdate(h)
          }).mouseout(function () {
            $WH.Tooltip.hide()
          })
        }
        if (b.sticky) {
          f.addClass("guide-sticky")
        } else {
          if (b.nvotes < 5) {
            f.addClass("guide-new")
          }
        }
        if (!b.featuredimage) {
          $(g).addClass("guides-list-cell-nameonly").append(f)
        } else {
          var e = $("<table/>", {
            "class": "guides-list-name" + (b.title.length >= 60 ? " long-name" : "")
          }).append($("<tr/>").append($("<td/>").append(f)));
          $(g).addClass("guides-list-cell").append($("<div/>").append($("<div/>", {
            "class": "guides-list-bg",
            style: "background-image:url(" + g_staticUrl + "/uploads/guide/featuredguides/" + b.featuredimage + ")",
            html: "<div></div>"
          })).append(e))
        }
      },
      getVisibleText: function (b) {
        return b.title
      }
    },
    {
      id: "status",
      name: "Status",
      type: "text",
      hidden: 1,
      compute: function (b, e) {
        var c = $("<span>").text(l_guide_states[b.status]).css("color", l_guide_states_color[b.status]);
        $(e).append(c)
      },
      getVisibleText: function (b) {
        return l_guide_states[b.status]
      },
      sortFunc: function (e, c) {
        if (e.status == c.status) {
          return 0
        }
        return e.status < c.status ? -1 : 1
      }
    },
    {
      id: "category",
      name: "Category",
      type: "text",
      compute: function (b, c) {
        $(c).append($("<a>").attr("href", "/guides=" + b.category).text(l_guide_categories[b.category]).css("color", "white"))
      },
      getVisibleText: function (b) {
        return l_guide_categories[b.category]
      },
      sortFunc: function (e, c) {
        if (e.category == c.category) {
          return 0
        }
        return e.category < c.category ? -1 : 1
      }
    },
    {
      id: "author",
      name: "Author",
      type: "text",
      compute: function (b, f) {
        var e = $("<a>").attr("href", "/user=" + b.author).text(b.author);
        var c = g_GetStaffColorFromRoles(b.authorroles);
        if (c != "") {
          e.addClass(c)
        } else {
          e.css("color", "white")
        }
        $(f).append(e)
      },
      getVisibleText: function (b) {
        return b.author
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.author, c.author)
      }
    },
    {
      id: "rating",
      name: "Rating",
      type: "range",
      width: "200px",
      compute: function (b, e) {
        $(e).append(GetStars(b.rating));
        var c = $("<span>").css("font-size", "85%");
        if (b.rating < 0) {
          c.text($WH.sprintf(" (needs $1 more $2)", 5 - b.nvotes, (5 - b.nvotes) == 1 ? "vote" : "votes"))
        } else {
          c.text(" (out of " + GetN5(b.nvotes) + " " + (b.nvotes == 1 ? "vote" : "votes") + ")")
        }
        $(e).append(c)
      },
      getMinValue: function (b) {
        return guide.rating
      },
      getMaxValue: function (b) {
        return guide.rating
      },
      sortFunc: function (e, c, g) {
        if (e.sticky && !c.sticky) {
          return -1
        } else {
          if (!e.sticky && c.sticky) {
            return 1
          }
        }
        var h = e.rating == -1 && e.author != "Wowhead";
        var f = c.rating == -1 && c.author != "Wowhead";
        if (h && !f) {
          return -1
        } else {
          if (f && !h) {
            return 1
          }
        }
        if (e.rating == c.rating) {
          return 0
        }
        return e.rating < c.rating ? 1 : -1
      }
    },
    {
      id: "views",
      name: "Views",
      type: "text",
      width: "120px",
      compute: function (b, e) {
        var c = $("<span>");
        c.text(GetN5(b.views));
        Listview.funcBox.viewColors(c, b.views);
        $(e).append(c)
      },
      getVisibleText: function (b) {
        return b.views
      },
      sortFunc: function (e, c) {
        if (e.views == c.views) {
          return 0
        }
        return e.views < c.views ? -1 : 1
      }
    },
    {
      id: "comments",
      name: "Comments",
      type: "text",
      width: "120px",
      compute: function (b) {
        return GetN5(b.comments)
      },
      sortFunc: function (e, c) {
        if (e.comments == c.comments) {
          return 0
        }
        return e.comments < c.comments ? -1 : 1
      }
    },
    {
      id: "patch",
      name: "Expansion",
      type: "text",
      width: "120px",
      compute: function (e, f) {
        var g = e.category >= l_guide_category_ranges.wowhead.min && e.category <= l_guide_category_ranges.wowhead.max;
        var m = e.category >= l_guide_category_ranges.hearthhead.min && e.category <= l_guide_category_ranges.hearthhead.max;
        if (!(g || m)) {
          return
        }
        var b = "",
            c = false;
        if (g) {
          var k = $WH.ce("span");
          k.className = g_GetExpansionClassName(Math.floor(e.patch / 10000) - 1);
          $WH.ae(f, k);
          return
        } else {
          b = $WH.sprintf("$1.$2.$3.$4", (e.patch >> 27) & (Math.pow(2, 4) - 1), (e.patch >> 22) & (Math.pow(2, 5) - 1), (e.patch >> 17) & (Math.pow(2, 5) - 1), e.patch & (Math.pow(2, 17) - 1));
          if ($WH.isset("g_hearthhead") && g_hearthhead) {
            var h = (g_getPatchVersion()).split(".");
            var l = b.split(".");
            c = true;
            for (var j = 0; c && j < h.length && j < l.length; j++) {
              c &= parseInt(h[j], 10) <= parseInt(l[j], 10)
            }
          } else {
            c = false
          }
        }
        var k = $("<span>").text(b);
        if (c) {
          k.addClass("q2")
        }
        $(f).append(k);
        return
      },
      sortFunc: function (e, c) {
        if (e.patch == c.patch) {
          return 0
        }
        return e.patch < c.patch ? -1 : 1
      }
    }],
    getItemLink: function (b) {
      return b.url
    }
  },
  list: {
    sort: ["-rating", "name"],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (g, e, j) {
        var f = $WH.ce("td");
        f.style.width = "1px";
        f.style.borderRight = "none";
        f.style.paddingRight = "0";
        $WH.ae(j, f);
        e.style.borderLeft = "none";
        if (g.hasOwnProperty("thumbnail")) {
          f.style.padding = "4px 0 4px 10px";
          $WH.ae(f, Icon.create("//" + g.region.toLowerCase() + ".battle.net/static-render/" + g.region.toLowerCase() + "/" + g.thumbnail + "?alt=wow/static/images/2d/avatar/" + g.race + "-" + g.gender + ".jpg", (this.iconSize == null ? 1 : this.iconSize), null, this.getItemLink(g)));
          f.getElementsByTagName("ins")[0].style.backgroundSize = "contain"
        }
        var l = (g.hasOwnProperty("id") || g.level >= 10) ? "a" : "span";
        var c = $("<" + l + ">").text(g.name).addClass("listview-cleartext").addClass(g.mode != 1 || (g.armory && !g.errcode) ? "listmanager-mode" + g.mode : "q10");
        if (g.mode == 1) {
          e.className += " nowrap"
        }
        if (l == "a") {
          var b = this.getItemLink(g);
          c.attr("href", b);
          if (!g.hasOwnProperty("id")) {
            $WH.BattleNet.CharacterExists(g.region, g.realm, g.name, function (m) {
              if (m) {
                return
              }
              c.attr("href", "javascript:;");
              c.addClass("q10");
              g.unreachable = true
            })
          }
        } else {
          c.addClass("q0")
        }
        if (g.description) {
          c.mouseover(function (m) {
            $WH.Tooltip.showAtCursor(m, g.description, 0, 0, "q")
          }).mousemove(function (m) {
            $WH.Tooltip.cursorUpdate(m)
          }).mouseout(function () {
            $WH.Tooltip.hide()
          })
        }
        if (g.user == g_user.name && (location.hostname.indexOf("wowhead.com") >= 0) && (location.protocol == "http:")) {
          var h = $("<a>").addClass(g.published ? "fa fa-eye" : "fa fa-eye-slash").css("padding-right", "3px");
          h.mouseover(function (m) {
            $WH.Tooltip.showAtCursor(m, g.published ? LANG.li_clicktohide : LANG.li_clicktoshow, 0, 0, "q2")
          }).mousemove(function (m) {
            $WH.Tooltip.cursorUpdate(m)
          }).mouseout(function () {
            $WH.Tooltip.hide()
          });
          h.click(function () {
            $WH.Tooltip.hide();
            new Ajax(g_getRelativeHostPrefix() + "/list&publish=" + g.id, {
              method: "POST",
              onSuccess: function () {
                if (h.hasClass("fa-eye-slash")) {
                  h.removeClass("fa-eye-slash").addClass("fa-eye").mouseover(function (m) {
                    $WH.Tooltip.showAtCursor(m, LANG.li_clicktohide, 0, 0, "q2")
                  })
                } else {
                  h.removeClass("fa-eye").addClass("fa-eye-slash").mouseover(function (m) {
                    $WH.Tooltip.showAtCursor(m, LANG.li_clicktoshow, 0, 0, "q2")
                  })
                }
              }
            })
          });
          $(e).append(h);
          var k = $("<a>").addClass("fa fa-thumb-tack" + (g.pinned ? "" : " fa-color-gray"));
          k.mouseover(function (m) {
            $WH.Tooltip.showAtCursor(m, g.pinned ? LANG.li_clicktounpin : LANG.li_clicktopin, 0, 0, "q2")
          }).mousemove(function (m) {
            $WH.Tooltip.cursorUpdate(m)
          }).mouseout(function () {
            $WH.Tooltip.hide()
          });
          k.click(function () {
            $WH.Tooltip.hide();
            new Ajax(g_getRelativeHostPrefix() + "/list&pin=" + g.id, {
              method: "POST",
              onSuccess: function () {
                if (k.hasClass("fa-color-gray")) {
                  k.removeClass("fa-color-gray").mouseover(function (m) {
                    $WH.Tooltip.showAtCursor(m, LANG.li_clicktounpin, 0, 0, "q2")
                  })
                } else {
                  k.addClass("fa-color-gray").mouseover(function (m) {
                    $WH.Tooltip.showAtCursor(m, LANG.li_clicktopin, 0, 0, "q2")
                  })
                }
              }
            })
          });
          $(e).append(k)
        }
        $(e).append(c);
        return
      },
      getVisibleText: function (b) {
        return b.name
      }
    },
    {
      id: "realm",
      name: LANG.realm,
      type: "text",
      hidden: true,
      value: "realm",
      width: "15%",
      compute: function (b, c) {
        $WH.st(c, b.realm + " " + b.region)
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.region, c.region) || $WH.strcmp(e.realm, c.realm)
      }
    },
    {
      id: "race",
      name: LANG.race,
      type: "text",
      width: "10%",
      compute: function (e, g) {
        if (e.race) {
          var f = $WH.ce("div"),
              c = $WH.ce("div"),
              b;
          b = Icon.create("race_" + g_file_races[e.race] + "_" + g_file_genders[e.gender], 0, null, g_getRelativeHostPrefix() + "/race=" + e.race);
          b.onmouseover = function (h) {
            $WH.Tooltip.showAtCursor(h, g_chr_races[e.race], 0, 0, "q")
          };
          b.onmousemove = $WH.Tooltip.cursorUpdate;
          b.onmouseout = $WH.Tooltip.hide;
          b.style.cssFloat = b.style.syleFloat = "left";
          f.style.margin = "0 auto";
          f.style.textAlign = "left";
          f.style.width = "26px";
          c.className = "clear";
          $WH.ae(f, b);
          $WH.ae(g, f);
          $WH.ae(g, c)
        }
      },
      getVisibleText: function (b) {
        return g_file_genders[b.gender] + " " + g_chr_races[b.race]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_chr_races[e.race], g_chr_races[c.race])
      }
    },
    {
      id: "classs",
      name: LANG.classs,
      type: "text",
      width: "10%",
      compute: function (e, g) {
        if (e.classs) {
          var f = $WH.ce("div"),
              c = $WH.ce("div"),
              b;
          b = Icon.create("class_" + g_file_classes[e.classs], 0, null, g_getRelativeHostPrefix() + "/class=" + e.classs);
          b.onmouseover = function (h) {
            $WH.Tooltip.showAtCursor(h, g_chr_classes[e.classs], 0, 0, "q")
          };
          b.onmousemove = $WH.Tooltip.cursorUpdate;
          b.onmouseout = $WH.Tooltip.hide;
          b.style.cssFloat = b.style.syleFloat = "left";
          f.style.margin = "0 auto";
          f.style.textAlign = "left";
          f.style.width = "26px";
          c.className = "clear";
          $WH.ae(f, b);
          $WH.ae(g, f);
          $WH.ae(g, c)
        }
      },
      getVisibleText: function (b) {
        return g_chr_classes[b.classs]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this.getVisibleText(e), this.getVisibleText(c))
      }
    },
    {
      id: "level",
      name: LANG.level,
      value: "level",
      width: "10%"
    },
    {
      id: "user",
      name: LANG.author,
      type: "text",
      compute: function (c, f) {
        var e = $("<a>").attr("href", "/user=" + c.user).text(c.user);
        var b = g_GetStaffColorFromRoles(c.userroles | 0);
        if (b != "") {
          e.addClass(b)
        } else {
          e.css("color", "white")
        }
        $(f).append(e)
      },
      getVisibleText: function (b) {
        return b.user
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.user, c.user)
      }
    },
    {
      id: "patch",
      name: LANG.patch,
      type: "text",
      value: "patch",
      width: "10%",
      compute: function (c, f) {
        var b = $("<span>").text($WH.sprintf("$1.$2.$3", Math.floor(c.patch / 100 / 100), Math.floor(c.patch / 100) % 100, c.patch % 100));
        var e = (g_getPatchVersionObject()).versionnum;
        if (parseInt(c.patch / 100) * 100 >= e) {
          b.addClass("q2")
        }
        $(f).append(b);
        return
      }
    }],
    getItemLink: function (b) {
      if (b.hasOwnProperty("id")) {
        return li_generateListUrl(b)
      }
      if (b.level < 10 || b.unreachable) {
        return "javascript:;"
      }
      return g_getRelativeHostPrefix() + "/list/" + b.url + "?private"
    }
  },
  hearthstonedeck: {
    sort: ["-recentrating", "-rating", "name"],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (b, h, e) {
        var g = $WH.ce("div");
        var c = $WH.ce("a");
        $WH.ae(g, c);
        c.className = (b.classs ? "c" + b.classs : "q0") + (b.sticky ? " icon-star" : "") + " listview-cleartext";
        $WH.st(c, b.name);
        c.href = this.getItemLink(b);
        if (b.nvotes < 5) {
          c.className += " guide-new"
        }
        if (b.hasOwnProperty("nlegendaryCrafted") && (b.nlegendaryCrafted > 0)) {
          g.style.position = "relative";
          var f = $WH.ce("div");
          f.className = "listview-name-info q5";
          $WH.ae(f, $WH.ct(g_hearthstone_qualities[5]));
          $WH.aef(g, f)
        }
        $WH.ae(h, g)
      },
      getVisibleText: function (b) {
        return b.name
      }
    },
    {
      id: "classs",
      name: LANG.classs,
      type: "text",
      width: "5%",
      hidden: true,
      compute: function (b, g) {
        if (b.classs) {
          var f = $WH.ce("div"),
              e = $WH.ce("div"),
              c;
          c = Icon.create("class_" + g_file_classes[b.classs], 0, null, g_getRelativeHostPrefix() + "/class=" + b.classs);
          c.onmouseover = function (h) {
            $WH.Tooltip.showAtCursor(h, g_chr_classes[b.classs], 0, 0, "q")
          };
          c.onmousemove = $WH.Tooltip.cursorUpdate;
          c.onmouseout = $WH.Tooltip.hide;
          c.style.cssFloat = c.style.syleFloat = "left";
          f.style.margin = "0 auto";
          f.style.textAlign = "left";
          f.style.width = "26px";
          e.className = "clear";
          $WH.ae(f, c);
          $WH.ae(g, f);
          $WH.ae(g, e)
        }
      },
      getVisibleText: function (b) {
        return g_chr_classes[b.classs]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this.getVisibleText(e), this.getVisibleText(c))
      }
    },
    {
      id: "type",
      name: LANG.type,
      value: "type",
      width: "5%",
      compute: function (c, e) {
        switch (c.type) {
        case 0:
          $WH.st(e, LANG.dg_constructed);
          break;
        case 1:
          var b = $("<span/>", {
            "class": "tip",
            html: LANG.dg_arena
          });
          $WH.Tooltip.simple(b.get(0), LANG.dg_arenadeck_tt, "q");
          $(e).append(b);
          break;
        case 2:
          var b = $("<span/>", {
            "class": "tip",
            html: LANG.dg_tavernbrawl
          });
          $WH.Tooltip.simple(b.get(0), LANG.dg_tavernbrawldeck_tt, "q");
          $(e).append(b);
          break
        }
      }
    },
    {
      id: "matchArchetype",
      name: LANG.su_note_match,
      value: "matchArchetype",
      width: "5%",
      hidden: true,
      compute: function (b, c) {
        if (b.matchArchetype) {
          $WH.st(c, "" + b.matchArchetype + "%")
        }
      }
    },
    {
      id: "user",
      name: LANG.author,
      type: "text",
      width: "5%",
      compute: function (c, f) {
        var e = $("<a/>", {
          html: c.user,
          href: "/user=" + c.user
        });
        var b = g_GetStaffColorFromRoles(c.userroles | 0);
        if (b != "") {
          e.addClass(b)
        } else {
          e.css("color", "white")
        }
        $(f).append(e)
      },
      getVisibleText: function (b) {
        return b.user
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.user, c.user)
      }
    },
    {
      id: "manacurve",
      name: LANG.traits.mana[0],
      tooltip: LANG.traits.mana[0],
      width: "5%",
      hidden: true,
      compute: function (c, j) {
        var g, h;
        if (!$WH.isset("DeckGuide") || !(g = DeckGuide.getManaCurve(c))) {
          return
        }
        var b = $WH.ce("div");
        b.className = "vertical-bar-wrapper";
        $WH.ae(j, b);
        var f, e;
        for (h = 0; h < g.length; h++) {
          f = $WH.ce("div");
          e = g[h];
          if (e > 7) {
            e = 7
          }
          f.className = "vertical-bar vertical-mana-bar vertical-bar-" + e;
          $WH.ae(b, f)
        }
      },
      sortFunc: function (g, f) {
        var j = 0,
            h = 0,
            e;
        var k = DeckGuide.getManaCurve(g);
        var c = DeckGuide.getManaCurve(f);
        if (k) {
          for (e = 1; e < k.length; e++) {
            j += k[e] * e
          }
        }
        if (c) {
          for (e = 1; e < c.length; e++) {
            h += c[e] * e
          }
        }
        return $WH.strcmp(j, h)
      }
    },
    {
      id: "cost",
      name: LANG.cost,
      tooltip: LANG.lvhsdeck_craftingcost,
      value: "ndust",
      width: "5%",
      compute: function (b, e) {
        var c = $WH.ce("span");
        c.className = "hearthstone-arcanedust";
        c.style.paddingLeft = "4px";
        $WH.st(c, $WH.number_format(b.ndust));
        $WH.ae(e, c)
      },
      getValue: function (b) {
        return b.ndust
      }
    },
    {
      id: "mycost",
      name: LANG.lvhsdeck_mycost,
      tooltip: LANG.lvhsdeck_mycraftingcost,
      width: "5%",
      hidden: true,
      compute: function (b, e) {
        var c = $WH.ce("span");
        c.className = "hearthstone-arcanedust";
        c.style.paddingLeft = "4px";
        $WH.st(c, $WH.number_format(DeckGuide.getMyRequiredDust(b)));
        $WH.ae(e, c)
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(DeckGuide.getMyRequiredDust(e), DeckGuide.getMyRequiredDust(c))
      },
      getValue: function (b) {
        return DeckGuide.getMyRequiredDust(b)
      }
    },
    {
      id: "rating",
      name: LANG.rating,
      tooltip: LANG.lifetimerating,
      value: "rating",
      width: "5%",
      compute: function (b, e) {
        var c = $WH.ce("span");
        c.className = "deckrating";
        $(c).append(deck_getUpDownVotes(b.upvotes, b.downvotes));
        $WH.ae(e, c)
      },
      sortFunc: function (e, c) {
        if (e.sticky != c.sticky) {
          return e.sticky - c.sticky
        }
        return $WH.strcmp($WH.g_getConfidenceInterval(e.upvotes, e.nvotes), $WH.g_getConfidenceInterval(c.upvotes, c.nvotes))
      }
    },
    {
      id: "recentrating",
      name: LANG.recent,
      tooltip: LANG.recentratings,
      value: "recentupvotes",
      width: "5%",
      compute: function (b, e) {
        var c = $WH.ce("span");
        c.className = "deckrating";
        $(c).append(deck_getUpDownVotes(b.recentupvotes, b.recentdownvotes));
        $WH.ae(e, c)
      },
      sortFunc: function (e, c) {
        if (e.sticky != c.sticky) {
          return e.sticky - c.sticky
        }
        var f = $WH.g_getConfidenceInterval(e.recentupvotes, e.nrecentvotes);
        var g = $WH.g_getConfidenceInterval(c.recentupvotes, c.nrecentvotes);
        if (f != g) {
          return $WH.strcmp(f, g)
        }
        return $WH.strcmp($WH.g_getConfidenceInterval(e.upvotes, e.nvotes), $WH.g_getConfidenceInterval(c.upvotes, c.nvotes))
      }
    },
    {
      id: "views",
      name: LANG.views,
      type: "text",
      width: "5%",
      compute: function (b, e) {
        var c = $("<span>");
        c.text(GetN5(b.views));
        Listview.funcBox.viewColors(c, b.views);
        $(e).append(c)
      },
      getVisibleText: function (b) {
        return b.views
      },
      sortFunc: function (e, c) {
        if (e.views == c.views) {
          return 0
        }
        return e.views < c.views ? -1 : 1
      }
    },
    {
      id: "comments",
      name: LANG.comments,
      value: "ncomments",
      width: "5%",
      compute: function (b) {
        return GetN5(b.ncomments | 0)
      }
    },
    {
      id: "patch",
      name: LANG.patch,
      type: "text",
      width: "5%",
      compute: function (b, h, e) {
        var g = g_getPatchVersion(b.timestamp);
        var f = g_getPatchVersion();
        var c = $("<span>").text(g);
        if (g == f) {
          c.addClass("q2")
        }
        $(h).append(c);
        if (this.template.isOutOfDate(b)) {
          $(e).addClass("outofdate grey");
          c.removeClass("q2").addClass("q10 tip");
          $WH.Tooltip.simple(c[0], LANG.dg_outofdate)
        }
      },
      sortFunc: function (e, c) {
        if (e.timestamp == c.timestamp) {
          return 0
        }
        return e.timestamp < c.timestamp ? -1 : 1
      }
    },
    {
      id: "published",
      name: LANG["public"],
      value: "published",
      width: "5%",
      compute: function (b, c) {
        $(c).append($WH.sprintf("<span$1>$2</span>", b.published ? "" : ' class="q10"', b.published ? LANG.yes : LANG.no))
      },
      hidden: true
    },
    {
      id: "delete",
      name: LANG["delete"],
      type: "text",
      align: "center",
      compute: function (b, e, c) {
        $(e).append($("<a/>", {
          "class": "fa fa-trash q10",
          href: "javascript:;",
          innerHTML: LANG["delete"],
          click: (function () {
            var f = prompt($WH.sprintf(LANG.dg_typedelete, '"' + b.name + '"', LANG["delete"].toUpperCase()));
            if (f && f.toUpperCase() == LANG["delete"].toUpperCase()) {
              $.ajax({
                url: "/deck&delete=" + b.id,
                success: function (g) {
                  location.reload()
                },
                cache: false
              })
            }
          }).bind(null, b)
        }))
      },
      hidden: true
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + "/deck=" + b.id + "/" + b.url
    },
    isOutOfDate: function (c) {
      if (!$WH.isset("DeckGuide") || !$WH.isset("g_hearthstone_cards_changed")) {
        return false
      }
      var f = (g_getPatchVersionObject(c.timestamp)).build;
      var e = DeckGuide.getCardIds(c);
      for (var b = 0; b < e.length; b++) {
        if (g_hearthstone_cards_changed.hasOwnProperty(e[b].cardId) && g_hearthstone_cards_changed[e[b].cardId] > f) {
          return true
        }
      }
      return false
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "mycost") && (this.columns[b].hidden)) {
          if ($WH.isset("DeckGuide") && $WH.isset("g_hearthstone_dust") && ("hearthstonecard" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.splice($WH.in_array(this.visibility, parseInt(b) - 1) + 1, 0, parseInt(b))
          }
        }
        if ((this.columns[b].id == "manacurve") && (this.columns[b].hidden)) {
          if ($WH.isset("DeckGuide") && $WH.isset("g_hearthstone_cards") && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.splice($WH.in_array(this.visibility, parseInt(b) - 1) + 1, 0, parseInt(b))
          }
        }
      }
    }
  },
  item: {
    sort: [-2],
    mode: 1,
    searchable: 1,
    filtrable: 1,
    completionText: LANG.lvcompletion_collection,
    sortNameUseQuality: true,
    beforeSort: function () {
      var c, f;
      for (var b = 0; !c && b < this.columns.length; b++) {
        if (this.columns[b].id == "name") {
          c = this.columns[b];
          f = b + 1
        }
      }
      var e = f - 1;
      if (Listview.sort.length && (Listview.sort[0] == f)) {
        this.template.sortNameUseQuality = !this.template.sortNameUseQuality;
        c.name = this.template.sortNameUseQuality ? (LANG.name + " + " + LANG.quality) : LANG.name;
        if (!this.thead) {
          return
        }
        if (this.mode == Listview.MODE_CHECKBOX && e < this.thead.firstChild.childNodes.length - 1) {
          e += 1
        }
        var g = this.thead.firstChild.childNodes[e].firstChild.firstChild.firstChild.firstChild;
        $WH.st(g, c.name)
      }
    },
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      value: "name",
      compute: function (u, g, b) {
        if (u.upgraded) {
          b.className = "upgraded"
        }
        u = $WH.g_applyStatModifications(u, null, null, null, Listview.funcBox.getCurrentItemBonuses.call(this, u));
        var o = $WH.ce("td");
        o.style.width = "1px";
        o.style.padding = "4px 0 4px 10px";
        o.style.borderRight = "none";
        var h = null,
            k = null;
        if (u.stack != null) {
          h = Listview.funcBox.createTextRange(u.stack[0], u.stack[1])
        }
        if (u.avail != null) {
          k = u.avail
        }
        if (u.id) {
          $WH.ae(o, g_items.createIcon(u.id, (this.iconSize == null ? 1 : this.iconSize), h, k, u.bonuses))
        }
        $WH.ae(b, o);
        g.style.borderLeft = "none";
        var w, m;
        if (!isNaN(parseInt(u.name.charAt(0)))) {
          w = u.name.substring(1);
          m = 8 - parseInt(u.name.charAt(0))
        } else {
          w = u.name;
          m = 1;
          if (u.hasOwnProperty("quality")) {
            m = u.quality
          }
        }
        var v = $WH.ce("a");
        v.className = "q" + m + " listview-cleartext";
        v.href = this.getItemLink(u);
        if (u.frommerge == 1) {
          v.className += " icon-merge-right"
        }
        if (u.rel) {
          Icon.getLink(o.firstChild).rel = u.rel;
          v.rel = u.rel
        }
        var j = "";
        if (u.nameSuffix) {
          j = " " + u.nameSuffix
        }
        $WH.ae(v, $WH.ct(w + j));
        var e = $WH.ce("div");
        $WH.ae(e, v);
        if (u.reqclass) {
          var t = $WH.ce("div");
          t.className = "small2";
          var r = Listview.funcBox.assocBinFlags(u.reqclass, g_chr_classes);
          for (var o = 0, p = r.length; o < p; ++o) {
            if (o > 0) {
              $WH.ae(t, $WH.ct(", "))
            }
            var v = $WH.ce("a");
            v.href = g_getRelativeHostPrefix() + "/class=" + r[o];
            v.className = "c" + r[o];
            $WH.st(v, g_chr_classes[r[o]]);
            $WH.ae(t, v)
          }
          $WH.ae(e, t)
        }
        if (typeof fi_nExtraCols == "number" && fi_nExtraCols >= 5) {
          if (u.source != null && u.source.length == 1) {
            if (u.reqclass) {
              $WH.ae(t, $WH.ct(LANG.dash))
            } else {
              var t = $WH.ce("div");
              t.className = "small2"
            }
            var q = (u.sourcemore ? u.sourcemore[0] : {});
            var c = 0;
            if (q.t) {
              c = q.t;
              var v = $WH.ce("a");
              if (q.q != null) {
                v.className = "q" + q.q
              } else {
                v.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1")
              }
              v.href = g_getRelativeHostPrefix() + "/" + g_types[q.t] + "=" + q.ti;
              if (q.n.length <= 30) {
                $WH.ae(v, $WH.ct(q.n))
              } else {
                v.title = q.n;
                $WH.ae(v, $WH.ct($WH.trim(q.n.substr(0, 27)) + "..."))
              }
              $WH.ae(t, v)
            } else {
              $WH.ae(t, $WH.ct(Listview.funcBox.getUpperSource(u.source[0], q)))
            }
            var f = Listview.funcBox.getLowerSource(u.source[0], q, c);
            if (f != null) {
              $WH.ae(t, $WH.ct(LANG.hyphen));
              if (f.pretext) {
                $WH.ae(t, $WH.ct(f.pretext))
              }
              if (f.url) {
                var v = $WH.ce("a");
                v.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
                v.href = f.url;
                $WH.ae(v, $WH.ct(f.text));
                $WH.ae(t, v)
              } else {
                $WH.ae(t, $WH.ct(f.text))
              }
              if (f.posttext) {
                $WH.ae(t, $WH.ct(f.posttext))
              }
            }
            $WH.ae(e, t)
          }
        }
        if (u.namedesc || u.heroic || u.reqrace || u.raidfinder || u.thunderforged || u.warforged || u.flexible) {
          e.style.position = "relative";
          var t = $WH.ce("div");
          t.className = "listview-name-info";
          var n = $WH.ce("span");
          n.className = "q2";
          if (u.namedesc) {
            $WH.ae(n, $WH.ct(u.namedesc))
          } else {
            if (u.raidfinder) {
              $WH.ae(n, $WH.ct(LANG.lvitem_raidfinderitem))
            } else {
              if (u.flexible) {
                $WH.ae(n, $WH.ct(LANG.lvitem_flexibleitem))
              } else {
                if (u.thunderforged) {
                  if (u.heroic) {
                    $WH.ae(n, $WH.ct(LANG.lvitem_heroicitem + " " + LANG.lvitem_thunderforgeditem))
                  } else {
                    $WH.ae(n, $WH.ct(LANG.lvitem_thunderforgeditem))
                  }
                } else {
                  if (u.warforged) {
                    if (u.heroic) {
                      $WH.ae(n, $WH.ct(LANG.lvitem_heroicitem + " " + LANG.lvitem_warforgeditem))
                    } else {
                      $WH.ae(n, $WH.ct(LANG.lvitem_warforgeditem))
                    }
                  } else {
                    if (u.heroic) {
                      $WH.ae(n, $WH.ct(LANG.lvitem_heroicitem))
                    }
                  }
                }
              }
            }
          }
          if (!$(n).is(":empty")) {
            $WH.ae(t, n)
          }
          if (u.reqrace) {
            if ((u.reqrace & 1791) != 1101 && (u.reqrace & 1791) != 690) {
              if (u.namedesc || u.heroic || u.raidfinder || u.thunderforged || u.warforged || u.flexible) {
                $WH.ae(t, $WH.ce("br"));
                t.style.bottom = "-6px"
              }
              var l = Listview.funcBox.assocBinFlags(u.reqrace, g_chr_races);
              for (var o = 0, p = l.length; o < p; ++o) {
                if (o > 0) {
                  $WH.ae(t, $WH.ct(", "))
                }
                var v = $WH.ce("a");
                v.href = g_getRelativeHostPrefix() + "/race=" + l[o];
                $WH.st(v, g_chr_races[l[o]]);
                $WH.ae(t, v)
              }
              t.className += (($WH.isset("g_thottbot") && g_thottbot) ? " q" : " q1")
            }
          }
          $WH.aef(e, t)
        }
        $WH.ae(g, e)
      },
      getVisibleText: function (f) {
        var c, j;
        if (!isNaN(parseInt(f.name.charAt(0)))) {
          c = f.name.substring(1);
          j = 8 - parseInt(f.name.charAt(0))
        } else {
          c = f.name;
          j = 1;
          if (f.hasOwnProperty("quality")) {
            j = f.quality
          }
        }
        var h = c;
        f = $WH.g_applyStatModifications(f, null, null, null, Listview.funcBox.getCurrentItemBonuses.call(this, f));
        if (f.nameSuffix) {
          h += " " + f.nameSuffix
        }
        if (f.namedesc) {
          h += " " + f.namedesc
        } else {
          if (f.heroic) {
            h += " " + LANG.lvitem_heroicitem
          }
          if (f.warforged) {
            h += " " + LANG.lvitem_warforgeditem
          }
          if (f.thunderforged) {
            h += " " + LANG.lvitem_thunderforgeditem
          }
          if (f.raidfinder) {
            h += " " + LANG.lvitem_raidfinderitem
          }
          if (f.flexible) {
            h += " " + LANG.lvitem_flexibleitem
          }
        }
        if (f.reqrace) {
          h += " " + Listview.funcBox.arrayText(Listview.funcBox.assocBinFlags(f.reqrace, g_chr_races), g_chr_races)
        }
        if (f.reqclass) {
          h += " " + Listview.funcBox.arrayText(Listview.funcBox.assocBinFlags(f.reqclass, g_chr_classes), g_chr_classes)
        }
        if (typeof fi_nExtraCols == "number" && fi_nExtraCols >= 5) {
          if (f.source != null && f.source.length == 1) {
            var g = (f.sourcemore ? f.sourcemore[0] : {});
            var e = 0;
            if (g.t) {
              e = g.t;
              h += " " + g.n
            } else {
              h += " " + Listview.funcBox.getUpperSource(f.source[0], g)
            }
            var b = Listview.funcBox.getLowerSource(f.source[0], g, e);
            if (b != null) {
              if (b.pretext) {
                h += " " + b.pretext
              }
              h += " " + b.text;
              if (b.posttext) {
                h += " " + b.posttext
              }
            }
          }
        }
        return h
      },
      sortFunc: function (f, e) {
        var c = this.template.sortNameUseQuality ? 0 : 1;
        return $WH.strcmp(f.name.substr(c), e.name.substr(c))
      }
    },
    {
      id: "level",
      name: LANG.itemlevelshort,
      type: "range",
      getMinValue: function (b) {
        if (this.ilvlOverride) {
          return typeof this.ilvlOverride.value == "function" ? this.ilvlOverride.value.call(this, b) : this.ilvlOverride.value
        }
        return b.minlevel ? b.minlevel : Listview.funcBox.getItemLevelWithBonuses.call(this, b)
      },
      getMaxValue: function (b) {
        if (this.ilvlOverride) {
          return typeof this.ilvlOverride.value == "function" ? this.ilvlOverride.value.call(this, b) : this.ilvlOverride.value
        }
        return b.maxlevel ? b.maxlevel : Listview.funcBox.getItemLevelWithBonuses.call(this, b)
      },
      compute: function (b, c) {
        if (this.ilvlOverride) {
          return typeof this.ilvlOverride.value == "function" ? this.ilvlOverride.value.call(this, b) : this.ilvlOverride.value
        }
        if (b.minlevel && b.maxlevel) {
          if (b.minlevel != b.maxlevel) {
            return b.minlevel + LANG.hyphen + b.maxlevel
          } else {
            return b.minlevel
          }
        } else {
          return Listview.funcBox.getItemLevelWithBonuses.call(this, b)
        }
      },
      sortFunc: function (e, c, f) {
        if (f > 0) {
          return $WH.strcmp(e.minlevel, c.minlevel) || $WH.strcmp(e.maxlevel, c.maxlevel) || $WH.strcmp(Listview.funcBox.getItemLevelWithBonuses.call(this, e), Listview.funcBox.getItemLevelWithBonuses.call(this, c))
        } else {
          return $WH.strcmp(e.maxlevel, c.maxlevel) || $WH.strcmp(e.minlevel, c.minlevel) || $WH.strcmp(Listview.funcBox.getItemLevelWithBonuses.call(this, e), Listview.funcBox.getItemLevelWithBonuses.call(this, c))
        }
      }
    },
    {
      id: "reqlevel",
      name: LANG.req,
      tooltip: LANG.tooltip_reqlevel,
      value: "reqlevel",
      compute: function (b, c) {
        b = $WH.g_applyStatModifications(b, null, null, null, Listview.funcBox.getCurrentItemBonuses.call(this, b));
        if (b.reqlevel > 1) {
          return b.reqlevel
        }
      }
    },
    {
      id: "bonuses",
      name: LANG.versions,
      compute: function (q, f) {
        var l = [];
        var p = (q.bonustrees != null && q.bonustrees.length > 0);
        var o = false;
        var h = 0;
        if (p && $WH.isset("g_item_bonuscontexts")) {
          var c = [];
          for (var j in q.bonustrees) {
            var s = q.bonustrees[j];
            for (var e in g_item_bonuscontexts) {
              var r = g_item_bonuscontexts[e];
              for (var g in r) {
                var n = r[g];
                if (n[0] == s) {
                  c.push([n[1]]);
                  switch (e) {
                  case "1":
                  case "3":
                    o = true;
                    break;
                  case "2":
                    h = 2;
                    break;
                  case "5":
                  case "6":
                  case "4":
                    h = 3;
                    break;
                  default:
                    break
                  }
                }
              }
            }
          }
          if (!o && h) {
            c.push(0)
          }
          c.sort();
          for (var j = 0; j < c.length; ++j) {
            var b = $.extend({}, q);
            b.bonuses = c[j];
            var m = this.getItemLink(b);
            l.push({
              0: g_items.getIcon(q.id, c[j]),
              1: 1,
              2: m
            })
          }
        } else {
          if (q.heirloombonuses) {
            for (var j = 0; j < q.heirloombonuses.length; ++j) {
              var b = $.extend({}, q);
              b.bonuses = [q.heirloombonuses[j]];
              var m = this.getItemLink(b);
              l.push({
                0: g_items.getIcon(q.id, [q.heirloombonuses[j]]),
                1: 1,
                2: m
              })
            }
          }
        }
        Listview.funcBox.createCenteredIcons(l, f, null, null)
      },
      sortFunc: function (e, c, f) {
        var g = e.bonustrees ? e.bonustrees.length : 0;
        var h = c.bonustrees ? c.bonustrees.length : 0;
        return $WH.strcmp(g, h)
      }
    },
    {
      id: "side",
      name: LANG.side,
      type: "text",
      compute: function (b, e) {
        if (b.side && b.side != 3) {
          var c = $WH.ce("span");
          c.className = (b.side == 1 ? "icon-alliance" : "icon-horde");
          c.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, g_sides[b.side], 0, 0, "q")
          };
          c.onmousemove = $WH.Tooltip.cursorUpdate;
          c.onmouseout = $WH.Tooltip.hide;
          $WH.ae(e, c)
        }
      },
      getVisibleText: function (b) {
        if (b.side) {
          return g_sides[b.side]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_sides[e.side], g_sides[c.side])
      }
    },
    {
      id: "dps",
      name: LANG.dps,
      value: "dps",
      compute: function (b, c) {
        return (b.dps || 0).toFixed(2)
      },
      hidden: true
    },
    {
      id: "speed",
      name: LANG.speed,
      value: "speed",
      compute: function (b, c) {
        return (b.speed || 0).toFixed(2)
      },
      hidden: true
    },
    {
      id: "armor",
      name: LANG.armor,
      value: "armor",
      compute: function (b, e) {
        var c = this.ilvlOverride ? (typeof this.ilvlOverride.value == "function" ? this.ilvlOverride.value.call(this, b) : this.ilvlOverride.value) : null;
        b = $WH.g_applyStatModifications(b, null, null, c, Listview.funcBox.getCurrentItemBonuses.call(this, b));
        if (b.armor > 0) {
          return b.armor
        }
      },
      hidden: true
    },
    {
      id: "slot",
      name: LANG.slot,
      type: "text",
      compute: function (b, c) {
        $WH.nw(c);
        return g_item_slots[b.slot]
      },
      getVisibleText: function (b) {
        return g_item_slots[b.slot]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_item_slots[e.slot], g_item_slots[c.slot])
      }
    },
    {
      id: "slots",
      name: LANG.slots,
      value: "nslots",
      hidden: true
    },
    {
      id: "skill",
      name: LANG.skill,
      value: "skill",
      hidden: true
    },
    {
      id: "glyph",
      name: LANG.glyphtype,
      type: "text",
      value: "glyph",
      compute: function (b, c) {
        if (b.glyph) {
          return g_item_glyphs[b.glyph]
        }
      },
      getVisibleText: function (b) {
        return g_item_glyphs[b.glyph]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_item_glyphs[e.glyph], g_item_glyphs[c.glyph])
      },
      hidden: true
    },
    {
      id: "source",
      name: LANG.source,
      type: "text",
      compute: function (l, e) {
        if (this.iconSize == 0) {
          e.className = "small"
        }
        if (l.attainable) {
          return LANG.unavailable
        } else {
          if (l.source != null) {
            if (l.source.length == 1) {
              $WH.nw(e);
              var c = (l.sourcemore ? l.sourcemore[0] : {});
              var j = 0;
              if (c.t) {
                j = c.t;
                var k = $WH.ce("a");
                if (c.q != null) {
                  k.className = "q" + c.q
                } else {
                  k.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1")
                }
                k.href = g_getRelativeHostPrefix() + "/" + g_types[c.t] + "=" + c.ti;
                k.style.whiteSpace = "nowrap";
                if (c.icon) {
                  k.className += " icontiny tinyspecial";
                  k.style.backgroundImage = 'url("' + g_staticUrl + "/images/wow/icons/tiny/" + c.icon.toLowerCase() + '.gif")'
                }
                $WH.ae(k, $WH.ct(c.n));
                $WH.ae(e, k)
              } else {
                $WH.ae(e, $WH.ct(Listview.funcBox.getUpperSource(l.source[0], c)))
              }
              var g = Listview.funcBox.getLowerSource(l.source[0], c, j);
              if (this.iconSize != 0 && g != null) {
                var b = $WH.ce("div");
                b.className = "small2";
                if (g.pretext) {
                  $WH.ae(b, $WH.ct(g.pretext))
                }
                if (g.url) {
                  var k = $WH.ce("a");
                  k.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
                  k.href = g.url;
                  $WH.ae(k, $WH.ct(g.text));
                  $WH.ae(b, k)
                } else {
                  $WH.ae(b, $WH.ct(g.text))
                }
                if (g.posttext) {
                  $WH.ae(b, $WH.ct(g.posttext))
                }
                $WH.ae(e, b)
              }
            } else {
              var m = "";
              for (var f = 0, h = l.source.length; f < h; ++f) {
                if (f > 0) {
                  m += LANG.comma
                }
                m += g_sources[l.source[f]]
              }
              return m
            }
          }
        }
      },
      getVisibleText: function (e) {
        if (e.attainable) {
          return LANG.unavailable
        } else {
          if (e.source != null) {
            if (e.source.length == 1) {
              var g = "";
              var f = (e.sourcemore ? e.sourcemore[0] : {});
              var c = 0;
              if (f.t) {
                c = f.t;
                g += " " + f.n
              } else {
                g += " " + Listview.funcBox.getUpperSource(e.source[0], f)
              }
              var b = Listview.funcBox.getLowerSource(e.source[0], f, c);
              if (b != null) {
                if (b.pretext) {
                  g += " " + b.pretext
                }
                g += " " + b.text;
                if (b.posttext) {
                  g += " " + b.posttext
                }
              }
              return g
            } else {
              return Listview.funcBox.arrayText(e.source, g_sources)
            }
          }
        }
      },
      sortFunc: function (g, e) {
        var h = Listview.funcBox.assocArrCmp(g.source, e.source, g_sources);
        if (h != 0) {
          return h
        }
        var f = (g.sourcemore && g.source.length == 1 ? g.sourcemore[0].n : null),
            c = (e.sourcemore && e.source.length == 1 ? e.sourcemore[0].n : null);
        return $WH.strcmp(f, c)
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      compute: function (s, e) {
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
        $WH.nw(e);
        var q = $WH.ce("a");
        var m = Listview.funcBox.getItemType(s.classs, s.subclass, s.subsubclass);
        q.href = m.url;
        $WH.ae(q, $WH.ct(m.text));
        if (this.classFilter !== null) {
          var p = parseInt($("#class-selector div.active a").attr("data-classid"));
          var r = null;
          var h = [];
          var c = [];
          var n = Menu.findItem(mn_spells, [-12]);
          for (var l in s.specs) {
            if ($WH.in_array(g_chr_specs_by_class[p], s.specs[l]) != -1) {
              if (!r) {
                for (var g in n[3]) {
                  if (n[3][g][0] == p) {
                    r = n[3][g];
                    break
                  }
                }
              }
              var b = "";
              var o = "";
              for (var f in r) {
                if (r[3][f][0] == s.specs[l]) {
                  b = r[3][f][4].tinyIcon.toLowerCase();
                  o = r[3][f][1];
                  break
                }
              }
              c.push({
                0: b,
                1: null,
                2: g_getRelativeHostPrefix() + "/spells=-12." + p + "." + s.specs[l]
              });
              h.push(o)
            }
          }
          Listview.funcBox.createCenteredIcons(c, e);
          $(e).find("div.iconsmall").each(function (j) {
            $(this).bind("mouseover", function (k) {
              $WH.Tooltip.showAtCursor(k, h[j], 0, 0, "q")
            });
            $(this).bind("mouseout", function (k) {
              $WH.Tooltip.hide()
            })
          })
        }
        $WH.ae(e, q)
      },
      getVisibleText: function (b) {
        return Listview.funcBox.getItemType(b.classs, b.subclass, b.subsubclass).text
      },
      sortFunc: function (e, c, g) {
        var f = Listview.funcBox.getItemType;
        return $WH.strcmp(f(e.classs, e.subclass, e.subsubclass).text, f(c.classs, c.subclass, c.subsubclass).text)
      }
    },
    {
      id: "qty",
      name: LANG.amount,
      tooltip: LANG.amount,
      value: "qty",
      compute: function (b, c) {
        return (b.qty || 1)
      },
      hidden: true
    },
    {
      id: "completed",
      name: LANG.completion,
      hidden: true,
      compute: function (n, g, h, m) {
        var b = !((!n.hasOwnProperty("classs")) || (!this.template._validCompletionCategory(n.classs, n.subclass, isNaN(parseInt(n.name.charAt(0))) ? n.quality : 7 - parseInt(n.name.charAt(0)))));
        for (var j in g_user.lists) {
          var e = g_user.lists[j];
          if (!(e.id in g_completion.item)) {
            continue
          }
          var f = ($WH.in_array(g_completion.item[e.id], n.id) != -1);
          if (!f && !b) {
            continue
          }
          var k = $WH.ce("a");
          k.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + e.id + "/" + e.url;
          k.className = "progress-icon " + (f ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(k, (f ? LANG.lvcompletion.identical : LANG.lvcompletion.missing) + ": " + e.character + " - " + e.realm + " " + e.region);
          $WH.ae(g, k)
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this.template._itemCompletedFlags(e.id), this.template._itemCompletedFlags(c.id))
      },
      getValue: function (e) {
        var g = 0;
        var f = g_completion.item;
        if ((!e.hasOwnProperty("classs")) || (!this.template._validCompletionCategory(e.classs, e.subclass, isNaN(parseInt(e.name.charAt(0))) ? e.quality : 7 - parseInt(e.name.charAt(0))))) {
          return -1
        }
        for (var h in g_user.lists) {
          var b = g_user.lists[h];
          if (!(b.id in f)) {
            continue
          }
          if ($WH.in_array(f[b.id], e.id) != -1) {
            g++
          }
        }
        return g
      }
    }],
    getItemLink: function (e) {
      var f = Listview.funcBox.getCurrentItemBonuses.call(this, e);
      var b = f.length > 0 ? ("&bonus=" + f.join(":")) : "";
      var c = this.ilvlOverride ? ("&" + this.ilvlOverride.name) : "";
      return g_getRelativeHostPrefix() + "/item=" + e.id + b + c
    },
    _itemCompletedFlags: function (c) {
      var f = 0;
      if (!g_user.lists) {
        return f
      }
      for (var b = g_user.lists.length - 1; b >= 0; b--) {
        var e = g_user.lists[b];
        if (!(e.id in g_completion.item)) {
          continue
        }
        f = (f << 1) | ($WH.in_array(g_completion.item[e.id], c) != -1 ? 1 : 0)
      }
      return f
    },
    _validCompletionCategory: function (b, e, c) {
      return ($WH.in_array(g_completion_categories[3], b) != -1) || ($WH.in_array(g_completion_categories[3], "" + b + "-" + e) != -1) || ($WH.in_array(g_completion_categories[3], "" + b + "q" + c) != -1)
    },
    onBeforeCreate: function () {
      var f = false;
      for (var g = 0, c = this.data.length; g < c; ++g) {
        var h = this.data[g];
        if ((h.slot > 0 && h.slot != 18) || ($WH.in_array(ModelViewer.validSlots, h.slotbak) >= 0 && h.displayid > 0) || h.modelviewer) {
          ++f
        }
      }
      if (f > 0) {
        this.mode = 1;
        this._nComparable = f
      }
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("item" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            var e = 0;
            for (var j in this.data) {
              if (this.data[j].hasOwnProperty("classs") && this.template._validCompletionCategory(this.data[j].classs, this.data[j].subclass, isNaN(parseInt(this.data[j].name.charAt(0))) ? this.data[j].quality : 7 - parseInt(this.data[j].name.charAt(0)))) {
                e++
              }
            }
            if (e > (this.data.length * 0.1)) {
              this.visibility.push(parseInt(b))
            }
          }
        }
      }
    },
    createCbControls: function (h, g) {
      if (!g) {
        return
      }
      var f = $WH.ce("input"),
          b = $WH.ce("input"),
          e = $WH.ce("input"),
          c = $WH.ce("input");
      f.type = b.type = e.type = c.type = "button";
      f.value = LANG.button_compare;
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      e.value = LANG.button_viewin3d;
      c.value = LANG.button_scaleilvl;
      f.onclick = this.template.compareItems.bind(this);
      b.onclick = (function (j) {
        Listview.cbAddToList.call(this, j, "item")
      }).bind(this);
      e.onclick = this.template.viewIn3d.bind(this);
      this.template.buildScalingMenu.call(this, c);
      if (this._nComparable == 0 || typeof this._nComparable == "undefined") {
        f.disabled = "disabled";
        e.disabled = "disabled"
      }
      $WH.ae(h, f);
      $WH.ae(h, b);
      $WH.ae(h, e);
      $WH.ae(h, c)
    },
    createTooltipToggle: function (c, b) {
      if (!b) {
        return
      }
      this.addTooltipToggle(c, g_items)
    },
    compareItems: function () {
      var c = this.getCheckedRows();
      if (!c.length) {
        return
      }
      var b = "";
      var e = this;
      $WH.array_walk(c, function (f) {
        if (f.slot == 0 || f.slot == 18) {
          return
        }
        b += f.id;
        var j = Listview.funcBox.getCurrentItemBonuses.call(e, f);
        var h = [];
        while (h.length < 9) {
          h.push(0)
        }
        for (var g = 0; g < j.length; ++g) {
          h.push(j[g])
        }
        b += "." + h.join(".");
        b += ";"
      });
      su_addToSaved($WH.rtrim(b, ";"), c.length)
    },
    buildScalingMenu: function (f) {
      var b = [{
        name: LANG.normal,
        mode: null
      },
      {
        name: LANG.su_menu_challengemode,
        mode: {
          name: "chal",
          value: function (h) {
            var j = Listview.funcBox.getItemLevelWithBonuses.call(this, h);
            if (j > $WH.g_applyStatModifications.ITEM_CHALLENGEMODE_LEVEL) {
              return $WH.g_applyStatModifications.ITEM_CHALLENGEMODE_LEVEL
            }
            return j
          }
        }
      },
      {
        name: g_difficulty_names[24] + " " + LANG.su_note_wotlk,
        mode: {
          name: "twwotlk",
          value: function (h) {
            var j = Listview.funcBox.getItemLevelWithBonuses.call(this, h);
            if (j > $WH.g_applyStatModifications.ITEM_TIMEWALKINGMODE_WOTLK_LEVEL) {
              return $WH.g_applyStatModifications.ITEM_TIMEWALKINGMODE_WOTLK_LEVEL
            }
            return j
          }
        }
      },
      {
        name: g_difficulty_names[24] + " " + LANG.su_note_bc,
        mode: {
          name: "twtbc",
          value: function (h) {
            var j = Listview.funcBox.getItemLevelWithBonuses.call(this, h);
            if (j > $WH.g_applyStatModifications.ITEM_TIMEWALKINGMODE_TBC_LEVEL) {
              return $WH.g_applyStatModifications.ITEM_TIMEWALKINGMODE_TBC_LEVEL
            }
            return j
          }
        }
      },
      {
        name: LANG.su_menu_pvpmode + " (" + $WH.sprintf(LANG.tc_level.replace("%s", "$1"), 100) + ")",
        mode: {
          name: "pvp",
          value: function (h) {
            var j = Listview.funcBox.getItemLevelWithBonuses.call(this, h);
            var k = j;
            if (h.pvpUpgrade) {
              k = j + h.pvpUpgrade
            } else {
              if (j >= 560 && j <= 690) {
                k = 690
              } else {
                if (j > 715) {
                  k = 715
                }
              }
            }
            return k
          }
        }
      }];
      var g = [];
      var c = this;
      for (var e = 0; e < b.length; ++e) {
        g.push([e, b[e].name, (function (h) {
          return function () {
            this.checked = true;
            if ($WH.isset("g_listviews") && g_listviews) {
              for (var k in g_listviews) {
                var j = g_listviews[k];
                j.ilvlOverride = h;
                fi_computeItemScores(j);
                j.applySort();
                j.updateFilters(1)
              }
            }
          }
        })(b[e].mode), null,
        {
          checkedFunc: function (h) {
            var j = b[h[0]].mode;
            if (!j && !c.ilvlOverride) {
              return true
            }
            return j && c.ilvlOverride && j.name == c.ilvlOverride.name
          }
        }])
      }
      Menu.add(f, g)
    },
    viewIn3d: function () {
      var n = this.getCheckedRows();
      if (!n.length) {
        return
      }
      var c = this;
      var l = false,
          j = false,
          k = false;
      var g = {};
      var h = null;
      $WH.array_walk(n, function (o) {
        o.currentDisplayId = o.displayid;
        var q = Listview.funcBox.getCurrentItemBonuses.call(c, o);
        var p = g_items.getAppearance(o.id, q);
        if (p != null && p[0]) {
          o.currentDisplayId = p[0]
        }
        if ($WH.in_array(ModelViewer.validSlots, o.slotbak) >= 0 && o.currentDisplayId > 0) {
          var r = ModelViewer.slotMap[o.slotbak];
          if (g[r]) {
            j = true
          }
          g[r] = {
            displayId: o.currentDisplayId,
            typeId: o.id,
            bonus: q.length ? q[0] : 0
          };
          l = true
        } else {
          if (o.modelviewer) {
            h = o.modelviewer
          } else {
            k = true
          }
        }
      });
      var m = null;
      if (h) {
        if (l || k) {
          m = LANG.dialog_cantdisplay
        }
        ModelViewer.show({
          type: h.type,
          displayId: h.displayid,
          slot: h.slot,
          message: m
        })
      } else {
        if (j || k) {
          m = LANG.dialog_cantdisplay
        }
        var b = [];
        var e = [];
        for (var f in g) {
          b.push(parseInt(f));
          b.push(g[f].displayId);
          e.push([g[f].typeId, g[f].bonus, parseInt(f)])
        }
        if (b.length > 0) {
          ModelViewer.show({
            type: 4,
            equipList: b,
            message: m,
            itemData: e
          })
        } else {
          alert(LANG.message_nothingtoviewin3d)
        }
      }
    }
  },
  itemset: {
    sort: [1],
    nItemsPerPage: 75,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (e, h) {
        var b = $WH.ce("a");
        b.className = "q" + (8 - parseInt(e.name.charAt(0))) + " listview-cleartext";
        b.href = this.getItemLink(e);
        $WH.ae(b, $WH.ct(e.name.substring(1)));
        var g = $WH.ce("div");
        g.style.position = "relative";
        $WH.ae(g, b);
        var f = $WH.ce("div");
        f.className = "listview-name-info q2";
        var c = "";
        if (e.heroic) {
          c = LANG.lvitem_heroicitem
        } else {
          if (e.elite) {
            c = LANG.lvitem_eliteitem
          } else {
            if (e.raidfinder) {
              c = LANG.lvitem_raidfinderitem
            } else {
              if (e.flexible) {
                c = LANG.lvitem_flexibleitem
              }
            }
          }
        }
        if (c != "") {
          $WH.ae(f, $WH.ct(c));
          $WH.ae(g, f)
        }
        $WH.ae(h, g);
        if (e.note) {
          var f = $WH.ce("div");
          f.className = "small";
          $WH.ae(f, $WH.ct(g_itemset_notes[e.note]));
          $WH.ae(h, f)
        }
      },
      getVisibleText: function (b) {
        var c = b.name.substring(1);
        if (b.note) {
          c += " " + g_itemset_notes[b.note]
        }
        return c
      }
    },
    {
      id: "level",
      name: LANG.level,
      type: "range",
      getMinValue: function (b) {
        return b.minlevel
      },
      getMaxValue: function (b) {
        return b.maxlevel
      },
      compute: function (b, c) {
        if (b.minlevel > 0 && b.maxlevel > 0) {
          if (b.minlevel != b.maxlevel) {
            return b.minlevel + LANG.hyphen + b.maxlevel
          } else {
            return b.minlevel
          }
        } else {
          return -1
        }
      },
      sortFunc: function (e, c, f) {
        if (f > 0) {
          return $WH.strcmp(e.minlevel, c.minlevel) || $WH.strcmp(e.maxlevel, c.maxlevel)
        } else {
          return $WH.strcmp(e.maxlevel, c.maxlevel) || $WH.strcmp(e.minlevel, c.minlevel)
        }
      }
    },
    {
      id: "pieces",
      name: LANG.pieces,
      getValue: function (b) {
        return b.pieces.length
      },
      compute: function (g, k) {
        k.style.padding = "0";
        var b = (g.pieces != null && g.pieces.length > 0);
        if (b) {
          var f = Listview.funcBox.getCurrentItemBonuses(g);
          var c = f.length > 0 ? ("&bonus=" + f.join(":")) : "";
          var h = [];
          for (var e = 0; e < g.pieces.length; ++e) {
            var j = g.pieces[e];
            h.push({
              0: g_items.getIcon(j, f),
              1: 1,
              2: g_getRelativeHostPrefix() + "/item=" + j + c
            })
          }
          Listview.funcBox.createCenteredIcons(h, k)
        }
      },
      sortFunc: function (e, c) {
        var g = (e.pieces != null ? e.pieces.length : 0);
        var f = (c.pieces != null ? c.pieces.length : 0);
        return $WH.strcmp(g, f)
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      compute: function (b, c) {
        return g_itemset_types[b.type]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_itemset_types[e.type], g_itemset_types[c.type])
      }
    },
    {
      id: "classes",
      name: LANG.classes,
      type: "text",
      width: "20%",
      getVisibleText: function (f) {
        var g = "";
        if (f.reqclass) {
          var e = Listview.funcBox.assocBinFlags(f.reqclass, g_chr_classes);
          for (var c = 0, b = e.length; c < b; ++c) {
            if (c > 0) {
              g += LANG.comma
            }
            g += g_chr_classes[e[c]]
          }
        }
        return g
      },
      compute: function (h, k) {
        if (h.reqclass) {
          var f = Listview.funcBox.assocBinFlags(h.reqclass, g_chr_classes);
          var j = $WH.ce("div");
          j.style.width = (26 * f.length) + "px";
          j.style.margin = "0 auto";
          for (var e = 0, b = f.length; e < b; ++e) {
            var g = Icon.create("class_" + g_file_classes[f[e]], 0, null, g_getRelativeHostPrefix() + "/class=" + f[e]);
            g.style.cssFloat = g.style.styleFloat = "left";
            var c = g_chr_classes[f[e]];
            $(g).mouseover((function (l) {
              return function (m) {
                $WH.Tooltip.showAtCursor(m, l, 0, 0, "q")
              }
            })(c)).mousemove(function (l) {
              $WH.Tooltip.cursorUpdate(l)
            }).mouseout(function () {
              $WH.Tooltip.hide()
            });
            $WH.ae(j, g)
          }
          $WH.ae(k, j)
        }
      },
      sortFunc: function (e, c, f) {
        return Listview.funcBox.assocArrCmp(Listview.funcBox.assocBinFlags(e.reqclass, g_chr_classes), Listview.funcBox.assocBinFlags(c.reqclass, g_chr_classes), g_chr_classes)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/itemset=" + b.id
    }
  },
  transmogset: {
    sort: [1],
    nItemsPerPage: 75,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (b, h) {
        var c = $WH.ce("a");
        c.className = "q" + (8 - parseInt(b.name.charAt(0))) + " listview-cleartext";
        c.href = this.getItemLink(b);
        $WH.ae(c, $WH.ct(b.name.substring(1)));
        var g = $WH.ce("div");
        g.style.position = "relative";
        $WH.ae(g, c);
        var f = $WH.ce("div");
        f.className = "listview-name-info q2";
        var e = "";
        if (b.heroic) {
          e = LANG.lvitem_heroicitem
        } else {
          if (b.elite) {
            e = LANG.lvitem_eliteitem
          } else {
            if (b.raidfinder) {
              e = LANG.lvitem_raidfinderitem
            }
          }
        }
        if (e != "") {
          $WH.ae(f, $WH.ct(e));
          $WH.ae(g, f)
        }
        h.className = "listview-blurb";
        $WH.ae(h, g);
        if (b.note || b._note) {
          var f = $WH.ce("div");
          f.className = "small";
          if (b.note) {
            $WH.ae(f, $WH.ct(b.note))
          } else {
            $WH.ae(f, $WH.ct(g_itemset_notes[b._note]))
          }
          $WH.ae(h, f)
        }
      },
      getVisibleText: function (b) {
        var c = b.name.substring(1);
        if (b.note) {
          c += " " + b.note
        } else {
          if (b._note) {
            c += " " + g_itemset_notes[b._note]
          }
        }
        return c
      },
      sortFunc: function (f, e, g) {
        var c = (8 - parseInt(f.name.charAt(0)));
        var h = (8 - parseInt(e.name.charAt(0)));
        if (c == 4) {
          c = 3
        }
        if (h == 4) {
          h = 3
        }
        if (c != h) {
          return $WH.strcmp(h, c)
        }
        return $WH.strcmp(f.name.substring(1), e.name.substring(1))
      }
    },
    {
      id: "level",
      name: LANG.req,
      tooltip: LANG.tooltip_reqlevel,
      type: "range",
      getMinValue: function (b) {
        return b.maxlevel
      },
      getMaxValue: function (b) {
        return b.maxlevel
      },
      compute: function (b, c) {
        if (b.maxlevel > 0) {
          return b.maxlevel
        } else {
          return -1
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.maxlevel, c.maxlevel)
      }
    },
    {
      id: "pieces",
      name: LANG.pieces,
      getValue: function (b) {
        return b.pieces.length
      },
      compute: function (b, k) {
        k.style.padding = "0";
        var c = (b.pieces != null && b.pieces.length > 0);
        if (c) {
          var h = [];
          for (var f = 0; f < b.pieces.length; ++f) {
            var j = b.pieces[f];
            var g = b.pcbonus ? b.pcbonus[f] : [];
            var e = g.length > 0 ? ("&bonus=" + g.join(":")) : "";
            h.push({
              0: g_items.getIcon(j, g),
              1: 1,
              2: g_getRelativeHostPrefix() + "/item=" + j + e
            })
          }
          Listview.funcBox.createCenteredIcons(h, k)
        }
      },
      sortFunc: function (e, c) {
        var g = (e.pieces != null ? e.pieces.length : 0);
        var f = (c.pieces != null ? c.pieces.length : 0);
        return $WH.strcmp(g, f)
      }
    },
    {
      id: "armortype",
      name: LANG.type,
      type: "text",
      width: "15%",
      getVisibleText: function (b) {
        return b.armorType ? g_itemset_types[b.armorType] : "???"
      },
      compute: function (b) {
        return b.armorType ? g_itemset_types[b.armorType] : "???"
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.armorType, c.armorType)
      }
    },
    {
      id: "style",
      name: LANG.style,
      type: "text",
      getVisibleText: function (b) {
        return g_transmog_notes_to_styles[b._note] ? g_transmog_styles[g_transmog_notes_to_styles[b._note]] : "???"
      },
      compute: function (b) {
        return g_transmog_notes_to_styles[b._note] ? g_transmog_styles[g_transmog_notes_to_styles[b._note]] : "???"
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(g_transmog_notes_to_styles[e._note], g_transmog_notes_to_styles[c._note])
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/transmog-set=" + b.id
    }
  },
  bagscan: {
    sort: [1],
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (f, h, c) {
        var g = $WH.ce("div");
        var b = $WH.ce("a");
        b.href = this.getItemLink(f);
        b.className = "listview-cleartext";
        $WH.ae(b, $WH.ct(f.name));
        $WH.ae(g, b);
        if (f["private"]) {
          g.style.position = "relative";
          var e = $WH.ce("div");
          e.className = "listview-name-info q0";
          $WH.ae(e, $WH.ct(LANG["private"]));
          $WH.aef(g, e)
        }
        $WH.ae(h, g)
      }
    },
    {
      id: "backpack",
      name: LANG.backpack,
      type: "number",
      value: "backpack"
    },
    {
      id: "bank",
      name: LANG.bank,
      type: "number",
      value: "bank"
    },
    {
      id: "voidstorage",
      name: LANG.voidstorage,
      type: "number",
      value: "voidstorage"
    },
    {
      id: "guildbank",
      name: LANG.guildbank,
      type: "number",
      value: "guild"
    },
    {
      id: "posted",
      name: LANG.posted,
      type: "text",
      compute: function (e, f) {
        var b = new Date(parseInt(e.when)),
            c = (g_serverTime - b) / 1000;
        a = $WH.ce("span");
        g_formatDate(a, c, b);
        $WH.ae(f, a)
      },
      sortFunc: function (e, c) {
        if (e.when == c.when) {
          return 0
        }
        return e.when < c.when ? 1 : -1
      }
    },
    {
      id: "delete",
      name: LANG["delete"],
      type: "text",
      hidden: true,
      compute: function (c, e) {
        var b = $WH.ce("a");
        b.className = "fa fa-times";
        $WH.st(b, LANG["delete"]);
        b.href = "javascript:;";
        $WH.aE(b, "click", DeleteBagScan.bind(c));
        $WH.ae(e, b)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("wowhead.com") + "/bagscanner=" + b.id
    }
  },
  hearthstoneadventure: {
    sortable: false,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (c, h, e) {
        var g = $WH.ce("div");
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        $WH.ae(g, b);
        $WH.ae(h, g);
        var f = $WH.ce("div");
        f.className = "listview-blurb small";
        $WH.ae(f, $WH.ct(c.description));
        $WH.ae(g, f)
      },
      getVisibleText: function (b) {
        return b.name
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "number",
      value: "adventurecategory",
      compute: function (b, c) {
        $WH.st(c, b.adventurecategoryname)
      }
    },
    {
      id: "mode",
      name: LANG.li_mode,
      type: "number",
      value: "mode",
      compute: function (b, c) {
        if (g_hearthstone_adventure_modes.hasOwnProperty(b.mode)) {
          $WH.st(c, g_hearthstone_adventure_modes[b.mode])
        }
      }
    },
    {
      id: "requirements",
      name: LANG.requirements,
      type: "text",
      align: "left",
      value: "requirements",
      compute: function (b, e) {
        if (!b.hasOwnProperty("requirements") || b.requirements == "") {
          return
        }
        var c = $WH.ce("small");
        $WH.st(c, b.requirements);
        $WH.ae(e, c)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + "/adventure=" + b.id + "/" + g_urlize(b.name)
    }
  },
  hearthstoneboss: {
    sortable: false,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (c, h, e) {
        var g = $WH.ce("div");
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        $WH.ae(g, b);
        $WH.ae(h, g);
        var f = $WH.ce("div");
        f.className = "listview-blurb small";
        $WH.ae(f, $WH.ct(c.description));
        $WH.ae(g, f)
      },
      getVisibleText: function (b) {
        return b.name
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "number",
      value: "adventurecategory",
      compute: function (b, c) {
        $WH.st(c, b.adventurecategoryname)
      }
    },
    {
      id: "wing",
      name: LANG.wing,
      type: "number",
      value: "wing",
      compute: function (b, c) {
        if (b.hasOwnProperty("wingname")) {
          $WH.st(c, b.wingname)
        }
      }
    },
    {
      id: "mode",
      name: LANG.li_mode,
      type: "number",
      value: "mode",
      compute: function (b, c) {
        if (g_hearthstone_adventure_modes.hasOwnProperty(b.mode)) {
          $WH.st(c, g_hearthstone_adventure_modes[b.mode])
        }
      }
    },
    {
      id: "rewards",
      name: LANG.rewards,
      type: "text",
      hidden: true,
      compute: function (e, g) {
        if (e.rewards.length == 0) {
          return
        }
        var f;
        var c = Listview.templates.hearthstoneachievement.columns;
        for (var b = 0; b < c.length; b++) {
          if (c[b].id == "rewards") {
            f = c[b].compute
          }
        }
        if (!f) {
          return
        }
        for (var b = 0; b < e.rewards.length; b++) {
          f(e.rewards[b], g)
        }
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + "/boss=" + b.id + "/" + g_urlize(b.name)
    }
  },
  hearthstonecard: {
    sort: [-12, -11, 2],
    nItemsPerPage: 50,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "build",
      name: LANG.build,
      type: "number",
      value: "build",
      hidden: true,
      compute: function (b, f, e) {
        if (!b.build) {
          return
        }
        if (!((typeof g_hearthhead != "undefined") && g_hearthhead)) {
          $WH.st(f, b.build);
          return
        }
        if (!g_getPatchVersionObject.hasOwnProperty("parsed") || !g_getPatchVersionObject.parsed.hearthstone) {
          g_getPatchVersionObject(false, "hearthstone")
        }
        if (!g_gameversions.hearthstone.hasOwnProperty(b.build)) {
          $WH.st(f, b.build);
          return
        }
        var c = $WH.ce("span");
        $WH.st(c, g_gameversions.hearthstone[b.build].version);
        c.className = "tip";
        $WH.Tooltip.simple(c, g_formatDateSimple(new Date(g_gameversions.hearthstone[b.build].timestamp)));
        $WH.ae(f, c)
      }
    },
    {
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (e, f, l) {
        var g = $WH.ce("td");
        g.style.width = "1px";
        g.style.paddingRight = "0";
        g.style.borderRight = "none";
        var b = this.getItemLink ? this.getItemLink(e) : null;
        if (!this.hideIcon) {
          if (e.icon) {
            $WH.ae(g, Icon.create(e.icon, (this.iconSize == null ? 1 : this.iconSize), null, b, e.quantity, null, null, (e.gold ? "premium" : "")))
          } else {
            $WH.ae(g, Icon.create("inv_misc_questionmark", (this.iconSize == null ? 1 : this.iconSize), null, b, e.quantity, null, null, (e.gold ? "premium" : "")))
          }
        }
        $WH.ae(l, g);
        f.style.borderLeft = "none";
        var c = $WH.ce("div");
        if (b) {
          var m = $WH.ce("a");
          m.href = b;
          if (e.gold) {
            m.rel = "premium"
          }
        } else {
          var m = $WH.ce("span")
        }
        m.className = "q" + e.quality + " listview-cleartext";
        $WH.ae(m, $WH.ct(e.name));
        $WH.ae(c, m);
        if (e.hasOwnProperty("tooltip")) {
          if (m.tagName.toLowerCase() == "a") {
            m.rel = (m.rel ? (m.rel + " ") : "") + "np"
          }
          if (!this.hideIcon) {
            g.getElementsByTagName("a")[0].rel = "np"
          }
          var h = e.tooltip;
          $(f).mouseover((function (n, o) {
            $WH.Tooltip.showAtCursor(o, n, 0, 0)
          }).bind(f, h));
          $(f).mousemove(function (n) {
            $WH.Tooltip.cursorUpdate(n)
          }).mouseout(function () {
            $WH.Tooltip.hide()
          })
        }
        if (e.description != null) {
          var k = $WH.ce("div");
          k.className = "listview-blurb small";
          $WH.ae(k, $WH.ct(e.description));
          $WH.ae(c, k)
        }
        if (e.elite || e.gold) {
          c.style.position = "relative";
          var k = $WH.ce("div");
          k.className = (($WH.isset("g_thottbot") && g_thottbot) ? "listview-name-info q" : "listview-name-info q1");
          var j = "";
          if (e.gold) {
            j += (j.length > 0 ? " " : "") + LANG.golden
          }
          if (e.elite) {
            j += (j.length > 0 ? " " : "") + LANG.lvspecies_elite
          }
          $WH.ae(k, $WH.ct(j));
          $WH.aef(c, k)
        }
        if (!e.collectible) {
          c.style.position = "relative";
          var k = $WH.ce("div");
          k.className = "listview-name-info q0";
          $WH.ae(k, $WH.ct(LANG.uncollectible));
          $WH.aef(c, k)
        }
        $WH.ae(f, c)
      },
      getVisibleText: function (b) {
        var c = b.name;
        if (b.elite) {
          c += " " + LANG.lvspecies_elite
        }
        return c
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "level",
      name: LANG.level,
      value: "level",
      compute: function (b, c) {
        if (b.level > 0) {
          return b.level
        }
      },
      hidden: true
    },
    {
      id: "set",
      name: LANG.set,
      value: "set",
      compute: function (b, e) {
        var c = $WH.g_getHearthstoneSetIcon(b.set, "small");
        if (c) {
          $WH.ae(e, c)
        }
      }
    },
    {
      id: "race",
      name: LANG.race,
      type: "text",
      compute: function (c, e) {
        if (c.race) {
          e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix("hearthhead.com") + "/cards?filter=ra=" + c.race;
          $WH.ae(b, $WH.ct(g_hearthstone_races[c.race]));
          $WH.ae(e, b);
          $WH.nw(e)
        }
      },
      getVisibleText: function (b) {
        return g_hearthstone_races[b.race]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_hearthstone_races[e.race], g_hearthstone_races[c.race])
      }
    },
    {
      id: "class",
      name: LANG.classs,
      type: "text",
      compute: function (c, e) {
        if (c.classs) {
          e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : ("small c" + c.classs));
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix("hearthhead.com") + "/cards?filter=cl=" + c.classs;
          $WH.ae(b, $WH.ct(g_hearthstone_classes[c.classs]));
          $WH.ae(e, b);
          $WH.nw(e)
        }
      },
      getVisibleText: function (b) {
        return g_hearthstone_classes[b.classs]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_hearthstone_classes[e.classs], g_hearthstone_classes[c.classs])
      }
    },
    {
      id: "cost",
      name: LANG.cost,
      value: "cost",
      compute: function (c, e) {
        var b = $WH.ce("span");
        b.className = "hearthstone-cost";
        b.onmouseover = function (f) {
          $WH.Tooltip.showAtCursor(f, "<b>" + LANG.tooltip_hearthstonecardcost + "</b>", 0, 0, "q1")
        };
        b.onmousemove = $WH.Tooltip.cursorUpdate;
        b.onmouseout = $WH.Tooltip.hide;
        $WH.ae(b, $WH.ct($WH.number_format(c.cost)));
        $WH.ae(e, b)
      }
    },
    {
      id: "attack",
      name: LANG.attack,
      value: "attack",
      compute: function (c, e) {
        if ((c.attack) || (c.type == 4)) {
          var b = $WH.ce("span");
          b.className = "hearthstone-attack";
          b.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, "<b>" + LANG.tooltip_hearthstonecardattack + "</b>", 0, 0, "q1")
          };
          if (c.type == 7) {
            b.className = "hearthstone-damage";
            b.onmouseover = function (f) {
              $WH.Tooltip.showAtCursor(f, "<b>" + LANG.tooltip_hearthstonecarddamage + "</b>", 0, 0, "q1")
            }
          }
          b.onmousemove = $WH.Tooltip.cursorUpdate;
          b.onmouseout = $WH.Tooltip.hide;
          $WH.ae(b, $WH.ct($WH.number_format(c.attack)));
          $WH.ae(e, b)
        }
      }
    },
    {
      id: "health",
      name: LANG.health,
      value: "health",
      getValue: function (b) {
        return b.type == 7 ? b.durability : b.health
      },
      compute: function (c, e) {
        if (c.health || c.durability) {
          var b = $WH.ce("span");
          b.className = "hearthstone-health";
          b.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, "<b>" + LANG.tooltip_hearthstonecardhealth + "</b>", 0, 0, "q1")
          };
          if (c.type == 7) {
            b.className = "hearthstone-durability";
            b.onmouseover = function (f) {
              $WH.Tooltip.showAtCursor(f, "<b>" + LANG.tooltip_hearthstonecarddurability + "</b>", 0, 0, "q1")
            }
          }
          b.onmousemove = $WH.Tooltip.cursorUpdate;
          b.onmouseout = $WH.Tooltip.hide;
          $WH.ae(b, $WH.ct($WH.number_format(c.type == 7 ? c.durability : c.health)));
          $WH.ae(e, b)
        }
      }
    },
    {
      id: "durability",
      name: LANG.durability,
      value: "durability",
      compute: function (c, e) {
        if (c.durability) {
          var b = $WH.ce("span");
          b.className = "hearthstone-durability";
          b.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, "<b>" + LANG.tooltip_hearthstonecarddurability + "</b>", 0, 0, "q1")
          };
          b.onmousemove = $WH.Tooltip.cursorUpdate;
          b.onmouseout = $WH.Tooltip.hide;
          $WH.ae(b, $WH.ct($WH.number_format(c.durability)));
          $WH.ae(e, b)
        }
      },
      hidden: true
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      compute: function (c, e) {
        var b = $WH.ce("a");
        b.className = "small q0";
        b.href = g_getRelativeHostPrefix("hearthhead.com") + "/cards?filter=cs=" + c.set;
        $WH.ae(b, $WH.ct(g_hearthstone_cardsets[c.set]));
        $WH.ae(e, b);
        $WH.ae(e, $WH.ce("br"));
        var b = $WH.ce("a");
        b.className = "small q1";
        b.href = g_getRelativeHostPrefix("hearthhead.com") + "/cards=" + c.type;
        $WH.ae(b, $WH.ct(g_hearthstone_cardtypes[c.type]));
        $WH.ae(e, b);
        $WH.nw(e)
      },
      getVisibleText: function (b) {
        return g_hearthstone_cardtypes[b.type]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_hearthstone_cardtypes[e.type], g_hearthstone_cardtypes[c.type])
      }
    },
    {
      id: "rarity",
      name: LANG.rarity,
      value: "quality",
      compute: function (b, c) {
        $WH.ae(c, $WH.ce("span", {
          className: "hearthstone-q" + b.quality
        }))
      }
    },
    {
      id: "popularity",
      name: LANG.popularity,
      value: "popularity",
      compute: function (b, c) {
        if (typeof b.popularity != "undefined") {
          $WH.st(c, b.popularity)
        }
      },
      hidden: true
    },
    {
      id: "completed",
      name: LANG.lvmycollection,
      type: "text",
      hidden: true,
      compute: function (e, f, j, m) {
        if ((!e.hasOwnProperty("collectible")) || (e.collectible == 0) || ($WH.in_array([4, 5, 7], e.type) == -1)) {
          return
        }
        var c = g_completion.hearthstonecard.hasOwnProperty(e.id) ? parseInt(g_completion.hearthstonecard[e.id].normal) : 0;
        var b = g_completion.hearthstonecard.hasOwnProperty(e.id) ? parseInt(g_completion.hearthstonecard[e.id].golden) : 0;
        var k = c + b;
        var g = (e.quality == 5) ? 1 : 2;
        var h = 0;
        if (k > 0) {
          h = 4
        }
        if (k >= g) {
          h = 8
        }
        h = "progress-" + h;
        var l = $WH.ce("a");
        l.href = g_getRelativeHostPrefix("hearthhead.com") + "/collection";
        l.className = "q" + ((b > 0) ? 5 : 1) + " progress-icon with-text " + h;
        $WH.Tooltip.simple(l, "" + c + " " + LANG.tooltip_normal + ", " + b + " " + LANG.tooltip_golden);
        $WH.st(l, k);
        $WH.ae(f, l)
      },
      sortFunc: function (m, l, e) {
        var h = g_completion.hearthstonecard.hasOwnProperty(m.id) ? parseInt(g_completion.hearthstonecard[m.id].normal) : 0;
        var c = g_completion.hearthstonecard.hasOwnProperty(m.id) ? parseInt(g_completion.hearthstonecard[m.id].golden) : 0;
        var j = ((m.quality == 5) && (h > 0)) ? 1 : 0;
        var n = ((m.quality == 5) && (c > 0)) ? 1 : 0;
        var g = g_completion.hearthstonecard.hasOwnProperty(l.id) ? parseInt(g_completion.hearthstonecard[l.id].normal) : 0;
        var o = g_completion.hearthstonecard.hasOwnProperty(l.id) ? parseInt(g_completion.hearthstonecard[l.id].golden) : 0;
        var f = ((l.quality == 5) && (g > 0)) ? 1 : 0;
        var k = ((l.quality == 5) && (o > 0)) ? 1 : 0;
        return $WH.strcmp(h + c, g + o) || $WH.strcmp(c + n, o + k) || $WH.strcmp(h + j, g + f)
      }
    },
    {
      id: "admin-deleterelation",
      name: "Unrelated",
      compute: function (b, e) {
        var c = $WH.ce("span");
        $WH.aE(c, "click", function (f) {
          f.stopPropagation();
          adminAddCardRelation(false, b.id)
        });
        c.className = "fa fa-times";
        $WH.Tooltip.simple(c, "Remove relation between " + b.name + " and " + g_pageInfo.name, "q2");
        $WH.ae(e, c)
      },
      hidden: true
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + "/card=" + b.id + "/" + g_urlize(b.name)
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ($WH.isset("g_user") && ("hearthstonecard" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.push(parseInt(b))
          }
        }
      }
    }
  },
  hearthstonecardemote: {
    sort: [1],
    searchable: 1,
    columns: [{
      id: "tag",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "tag"
    },
    {
      id: "text",
      name: LANG.text,
      type: "text",
      align: "left",
      value: "text"
    },
    {
      id: "audio",
      name: LANG.audio,
      sortable: false,
      compute: function (f, g) {
        if (!f.hasOwnProperty("audiofiles")) {
          return
        }
        var e = false;
        for (var c in f.audiofiles) {
          if (f.audiofiles.hasOwnProperty(c)) {
            e = true;
            break
          }
        }
        if (!e) {
          return
        }
        var b = $WH.g_createButton(" " + LANG.button_playaudio, null, {
          "class": "fa fa-play",
          "float": false,
          click: (function (j, h) {
            return function () {
              j(h)
            }
          })(this.template.playAudio, f)
        });
        $WH.ae(g, b)
      }
    }],
    playAudio: function (e) {
      if (!e.hasOwnProperty("audiocontrol")) {
        e.audiocontrol = $WH.ce("audio");
        for (var b in e.audiofiles) {
          if (e.audiofiles.hasOwnProperty(b)) {
            var c = $WH.ce("source");
            c.src = e.audiofiles[b];
            c.type = b;
            $WH.ae(e.audiocontrol, c)
          }
        }
      }
      e.audiocontrol.play()
    }
  },
  hearthstonecardgallery: {
    sort: [-10, -9, 1],
    mode: 3,
    nItemsPerPage: 40,
    nItemsPerRow: 5,
    poundable: 1,
    sortOptions: [{
      id: "name",
      name: LANG.name,
      value: "name",
      sortFunc: function (e, c) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "level",
      name: LANG.level,
      value: "level",
      hidden: true
    },
    {
      id: "race",
      name: LANG.race,
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_hearthstone_races[e.race], g_hearthstone_races[c.race])
      }
    },
    {
      id: "class",
      name: LANG.classs,
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_hearthstone_classes[e.classs], g_hearthstone_classes[c.classs])
      }
    },
    {
      id: "cost",
      name: LANG.cost,
      value: "cost"
    },
    {
      id: "attack",
      name: LANG.attack,
      value: "attack"
    },
    {
      id: "health",
      name: LANG.health,
      value: "health",
      getValue: function (b) {
        return b.type == 7 ? b.durability : b.health
      }
    },
    {
      id: "durability",
      name: LANG.durability,
      value: "durability"
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_hearthstone_cardtypes[e.type], g_hearthstone_cardtypes[c.type])
      }
    },
    {
      id: "rarity",
      name: LANG.rarity,
      value: "quality"
    },
    {
      id: "popularity",
      name: LANG.popularity,
      value: "popularity"
    }],
    columns: [],
    value: "name",
    compute: function (e, g, f) {
      g.align = "center";
      g.vAlign = "bottom";
      var b = $WH.ce("a");
      b.href = g_getRelativeHostPrefix("hearthhead.com") + "/card=" + e.id + "&text";
      b.setAttribute("data-disable-wowhead-touch-tooltip", "true");
      var c = $WH.ce("img");
      c.src = g_staticUrl + "/images/hearthstone/cards/" + Locale.getName() + "/medium/" + e.image + ".png" + ((typeof g_hearthstone_build != "undefined") ? ("?" + g_hearthstone_build) : "");
      $WH.aE(c, "error", function () {
        if (Locale.getName() != "enus") {
          this.src = this.src.replace("/" + Locale.getName() + "/", "/enus/")
        }
      });
      c.style.display = "block";
      c.style.width = "120%";
      c.style.maxWidth = "200px";
      c.style.margin = "0 -50px";
      $WH.ae(b, c);
      $WH.ae(g, b);
      g.style.padding = "0"
    },
    sortFunc: function (e, c) {
      return $WH.strcmp(e.name, c.name)
    }
  },
  hearthstonemechanic: {
    sort: [1],
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (b, h, f) {
        var e = $WH.ce("td");
        e.style.width = "1px";
        e.style.paddingRight = "0";
        e.style.borderRight = "none";
        if (b.icon) {
          $WH.ae(e, Icon.create(b.icon, (this.iconSize == null ? 1 : this.iconSize), null, this.getItemLink(b)))
        } else {
          $WH.ae(e, Icon.create("inv_misc_questionmark", (this.iconSize == null ? 1 : this.iconSize), null, this.getItemLink(b)))
        }
        $WH.ae(f, e);
        h.style.borderLeft = "none";
        var g = $WH.ce("div");
        var c = $WH.ce("a");
        c.className = "listview-cleartext";
        c.href = this.getItemLink(b);
        $WH.ae(c, $WH.ct(b.name));
        $WH.ae(g, c);
        $WH.ae(h, g)
      },
      getVisibleText: function (b) {
        return b.name
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "desc",
      name: LANG.description,
      type: "text",
      align: "left",
      value: "description",
      compute: function (b, f, e) {
        var c = $WH.ce("span");
        c.innerHTML = b.description;
        $WH.ae(f, c)
      },
      getVisibleText: function (b) {
        return b.description
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.description, c.description)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + "/mechanic=" + b.id + "/" + g_urlize(b.name)
    }
  },
  hearthstoneachievement: {
    sort: [1],
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (c, j, e) {
        var h = $WH.ce("div");
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        $WH.ae(h, b);
        $WH.ae(j, h);
        var g = $WH.ce("div");
        g.className = "listview-blurb small";
        $WH.ae(g, $WH.ct(c.description));
        $WH.ae(h, g);
        if (!c.enabled) {
          h.style.position = "relative";
          var f = $WH.ce("div");
          f.className = "listview-name-info q0";
          $WH.ae(f, $WH.ct(LANG.disabled));
          $WH.aef(h, f)
        }
      },
      getVisibleText: function (b) {
        return b.name
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "rewards",
      name: LANG.rewards,
      type: "text",
      compute: function (c, g, l) {
        switch (c.rewardtype) {
        case "pack":
          var p = $WH.ce("span");
          var j = (c.rewarddata == "9") ? g_hearthstone_cardsets[13] : g_hearthstone_cardsets[3];
          p.className = "hearthstone-cardpack";
          p.onmouseover = function (q) {
            $WH.Tooltip.showAtCursor(q, "<b>" + j + " " + LANG.tooltip_hearthstonecardpack + "</b>", 0, 0, "q1")
          };
          p.onmousemove = $WH.Tooltip.cursorUpdate;
          p.onmouseout = $WH.Tooltip.hide;
          $WH.ae(p, $WH.ct($WH.number_format(c.reward)));
          $WH.ae(g, p);
          break;
        case "dust":
          var p = $WH.ce("span");
          p.className = "hearthstone-arcanedust";
          p.onmouseover = function (q) {
            $WH.Tooltip.showAtCursor(q, "<b>" + LANG.tooltip_hearthstonearcanedust + "</b>", 0, 0, "q1")
          };
          p.onmousemove = $WH.Tooltip.cursorUpdate;
          p.onmouseout = $WH.Tooltip.hide;
          $WH.ae(p, $WH.ct($WH.number_format(c.reward)));
          $WH.ae(g, p);
          break;
        case "forge":
          var p = $WH.ce("span");
          p.className = "hearthstone-arena1";
          p.onmouseover = function (q) {
            $WH.Tooltip.showAtCursor(q, "<b>" + LANG.tooltip_hearthstonearenacredit + "</b>", 0, 0, "q1")
          };
          p.onmousemove = $WH.Tooltip.cursorUpdate;
          p.onmouseout = $WH.Tooltip.hide;
          $WH.ae(p, $WH.ct($WH.number_format(c.reward)));
          $WH.ae(g, p);
          break;
        case "gold":
          var p = $WH.ce("span");
          p.className = "hearthstone-gold";
          p.onmouseover = function (q) {
            $WH.Tooltip.showAtCursor(q, "<b>" + LANG.tooltip_hearthstonegold + "</b>", 0, 0, "q1")
          };
          p.onmousemove = $WH.Tooltip.cursorUpdate;
          p.onmouseout = $WH.Tooltip.hide;
          $WH.ae(p, $WH.ct($WH.number_format(c.reward)));
          $WH.ae(g, p);
          break;
        case "goldhero":
        case "hero":
        case "card":
        case "card2x":
          var p = $WH.ce("span");
          var m = $WH.ce("a");
          var h = g_getRelativeHostPrefix("hearthhead.com") + "/card=" + c.reward;
          m.href = h;
          var e = g_hearthstone_cards[c.reward];
          if (e) {
            m.className = "q" + e.quality + " icontiny tinyspecial";
            m.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + (e.icon || "inv_misc_questionmark").toLowerCase() + ".gif)";
            $WH.ae(m, $WH.ct(e["name_" + Locale.getName()]))
          } else {
            $WH.ae(m, $WH.ct($WH.sprintf(LANG.qty, LANG.types[220][0] + " " + c.reward)))
          }
          if (c.rewardtype == "card2x") {
            $WH.ae(p, $WH.ct("2x "))
          }
          $WH.ae(p, m);
          if (c.rewarddata == "1") {
            m.rel = "premium";
            $WH.ae(p, $WH.ct($WH.sprintf(LANG.qty, LANG.golden)))
          }
          $WH.ae(g, p);
          break;
        case "mount":
          var o = 0;
          if (c.rewardtype == "mount" && c.reward == "1") {
            o = 98618
          }
          if (o) {
            var p = $WH.ce("span");
            var m = $WH.ce("a");
            m.href = g_getRelativeHostPrefix("wowhead.com") + "/item=" + o;
            var n = g_items[o];
            if (n) {
              m.className = "q" + n.quality + " icontiny tinyspecial";
              m.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + (n.icon || "inv_misc_questionmark").toLowerCase() + ".gif)";
              $WH.ae(m, $WH.ct(n["name_" + Locale.getName()]))
            } else {
              $WH.ae(m, $WH.ct($WH.sprintf(LANG.qty, LANG.types[3][0] + " " + o)))
            }
            $WH.ae(p, m);
            $WH.ae(g, p)
          }
          break;
        case "cardback":
          var p = $WH.ce("span");
          var m = $WH.ce("a");
          var h = g_getRelativeHostPrefix("hearthhead.com") + "/cardback=" + c.reward;
          m.href = h;
          p.onmouseover = function (q) {
            $WH.Tooltip.showAtCursor(q, "<b>" + LANG.types[225][0] + "</b>", 0, 0, "q1")
          };
          p.onmousemove = $WH.Tooltip.cursorUpdate;
          p.onmouseout = $WH.Tooltip.hide;
          var f = g_hearthstone_cardbacks[c.reward];
          if (f) {
            if (f.asset) {
              m.className = "icontiny tinyspecial";
              var k = f.asset.substr(f.asset.lastIndexOf("/") + 1);
              var b = g_staticUrl + "/images/hearthstone/backs/icons/small/" + k + ".png" + ((typeof g_hearthstone_build != "undefined") ? ("?" + g_hearthstone_build) : "");
              m.style.backgroundImage = "url(" + b + ")"
            }
            $WH.ae(m, $WH.ct(f["name_" + Locale.getName()]))
          } else {
            $WH.ae(m, $WH.ct($WH.sprintf(LANG.qty, LANG.types[225][0] + " " + c.reward)))
          }
          $WH.ae(p, m);
          $WH.ae(g, p);
          break;
        default:
          break
        }
      },
      sortFunc: function (e, c, f) {
        console.log("sort:", e, c);
        return $WH.strcmp(e.rewardtype, c.rewardtype) || $WH.strcmp(e.reward, c.reward) || $WH.strcmp(e.rewarddata, c.rewarddata)
      }
    },
    {
      id: "tier",
      name: LANG.tier,
      type: "number",
      value: "tier",
      hidden: true
    },
    {
      id: "dailychance",
      name: LANG.dailychance,
      type: "number",
      hidden: true,
      compute: function (c, k, j) {
        if (!this.hasOwnProperty("weightSums")) {
          return
        }
        if (c.weight == 0) {
          $WH.st(k, "0%");
          return
        }
        var h = 0;
        var g = "";
        for (var e in this.weightSums) {
          if (!this.weightSums.hasOwnProperty(e)) {
            continue
          }
          var b = parseInt(e);
          if (b > h) {
            h = e
          }
          if (b >= c.tier) {
            g += (g == "" ? "" : "<br>") + LANG.tier + " " + b + ": " + (c.weight / this.weightSums[e] * 100).toFixed(1) + "%"
          }
        }
        if (h == 0) {
          return
        }
        var f = $WH.ce("span");
        $WH.ae(k, f);
        $WH.st(f, "" + (c.weight / this.weightSums[h] * 100).toFixed(1) + "%");
        if (g.indexOf("<br>") > 0) {
          g += '<div style="max-width: 200px; margin-top: 1em" class="q">' + LANG.tooltip_hearthstonequest2 + "</div>";
          f.onmouseover = function (l) {
            $WH.Tooltip.showAtCursor(l, g, 0, 0, "q1")
          };
          f.onmousemove = $WH.Tooltip.cursorUpdate;
          f.onmouseout = $WH.Tooltip.hide;
          f.className = "tip"
        }
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.weight, c.weight)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + (b.active == 0 ? "/quest=" : "/achievement=") + b.id + "/" + g_urlize(b.name)
    }
  },
  hearthstonehero: {
    sort: [1],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      value: "name",
      compute: function (e, h, f) {
        var c = $WH.ce("td");
        c.style.width = "1px";
        c.style.paddingRight = "0";
        c.style.borderRight = "none";
        $WH.ae(c, Icon.create("class_" + g_file_classes[e.card.classs], 0, null, this.getItemLink(e)));
        $WH.ae(f, c);
        h.style.borderLeft = "none";
        var g = $WH.ce("div");
        var b = $WH.ce("a");
        b.className = "q" + e.card.quality + " listview-cleartext";
        b.href = this.getItemLink(e);
        b.rel = "card=" + e.card.id;
        $WH.ae(b, $WH.ct(e.card.name));
        $WH.ae(g, b);
        $WH.ae(h, g)
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(c.card.quality, e.card.quality) || $WH.strcmp(e.card.name, c.card.name)
      }
    },
    {
      id: "class",
      name: LANG.classs,
      type: "text",
      value: "classname",
      compute: function (c, f, e) {
        var b = $WH.ce("span");
        b.className = "c" + c.card.classs;
        $WH.ae(b, $WH.ct(g_chr_classes[c.card.classs]));
        $WH.ae(f, b)
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(g_chr_classes[e.card.classs], g_chr_classes[c.card.classs])
      }
    },
    {
      id: "heropowercard",
      name: g_hearthstone_cardtypes[10],
      compute: function (g, j, h) {
        var f = $WH.ce("span");
        var c = $WH.ce("a");
        var b = g_getRelativeHostPrefix("hearthhead.com") + "/card=" + g.card.heropower;
        c.href = b;
        var e = g.heropower;
        if (e) {
          c.className = "q1 icontiny tinyspecial";
          c.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + (e.icon || "inv_misc_questionmark").toLowerCase() + ".gif)";
          $WH.ae(c, $WH.ct(e.name))
        } else {
          $WH.ae(c, $WH.ct($WH.sprintf(LANG.qty, LANG.types[220][1] + " " + g.card.heropower)))
        }
        $WH.ae(f, c);
        $WH.ae(j, f)
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.heropower ? e.heropower.name : "", c.heropower ? c.heropower.name : "") || $WH.strcmp(e.card.heropower, c.card.heropower)
      }
    },
    {
      id: "cardback",
      name: LANG.types[225][0],
      compute: function (f, h, g) {
        if (!f.cardback || !f.cardback.hasOwnProperty("id")) {
          return
        }
        var e = $WH.ce("span");
        var c = $WH.ce("a");
        var b = g_getRelativeHostPrefix("hearthhead.com") + "/cardback=" + f.cardback.id;
        c.href = b;
        $WH.ae(c, $WH.ct(f.cardback.name));
        $WH.ae(e, c);
        $WH.ae(h, e)
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.cardback.hasOwnProperty("id") ? e.cardback.name : "", c.cardback.hasOwnProperty("id") ? c.cardback.name : "")
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + "/hero=" + b.id
    }
  },
  hearthstonecardback: {
    sort: [1],
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (e, f, k) {
        var h = $WH.ce("td");
        h.style.width = "1px";
        h.style.paddingRight = "0";
        h.style.borderRight = "none";
        var c = $WH.ce("a");
        c.className = "image-highlight";
        c.href = this.getItemLink(e);
        c.setAttribute("data-whattach", "true");
        var j = e.asset.substr(e.asset.lastIndexOf("/") + 1);
        var g = $WH.ce("img");
        g.src = g_staticUrl + "/images/hearthstone/backs/icons/medium/" + j + ".png" + ((typeof g_hearthstone_build != "undefined") ? ("?" + g_hearthstone_build) : "");
        $WH.ae(c, g);
        $WH.ae(h, c);
        $WH.ae(k, h);
        f.style.borderLeft = "none";
        var b = $WH.ce("div");
        var l = $WH.ce("a");
        l.className = "listview-cleartext";
        l.href = this.getItemLink(e);
        $WH.ae(l, $WH.ct(e.name));
        $WH.ae(b, l);
        $WH.ae(f, b)
      },
      getVisibleText: function (b) {
        return b.name
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "source",
      name: LANG.source,
      type: "text",
      compute: function (b, f, e) {
        switch (b.source) {
        case "season":
          var c = $WH.ce("a");
          c.href = g_getRelativeHostPrefix("hearthhead.com") + "/season=" + b.sourceid;
          if (g_hearthstone_seasons[b.sourceid]) {
            $WH.ae(c, $WH.ct(g_hearthstone_seasons[b.sourceid]["name_" + Locale.getName()]))
          } else {
            $WH.ae(c, $WH.ct(LANG.types[225][0] + " #" + b.sourceid))
          }
          $WH.ae(f, c);
          break;
        case "achieve":
        case "achievement":
          var c = $WH.ce("a");
          c.href = g_getRelativeHostPrefix("hearthhead.com") + "/achievement=" + b.sourceid;
          if (g_hearthstone_achievements[b.sourceid]) {
            $WH.ae(f, $WH.ct(LANG.types[222][0] + LANG.colon));
            $WH.ae(c, $WH.ct(g_hearthstone_achievements[b.sourceid]["name_" + Locale.getName()]))
          } else {
            $WH.ae(c, $WH.ct(LANG.types[222][0] + " #" + b.sourceid))
          }
          $WH.ae(f, c);
          break;
        default:
          break
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.source, c.source) || $WH.strcmp(e.sourceid, c.sourceid)
      }
    },
    {
      id: "dates",
      name: LANG.available,
      type: "text",
      compute: function (b, f) {
        var e = b.hasOwnProperty("startdate") ? (new Date(b.startdate)) : false;
        var c = b.hasOwnProperty("enddate") ? (new Date(b.enddate)) : false;
        $WH.st(f, g_formatStartEndDates(e, c))
      },
      sortFunc: function (f, e) {
        var h = f.hasOwnProperty("startdate") ? f.startdate : 0;
        var j = e.hasOwnProperty("startdate") ? e.startdate : 0;
        var g = f.hasOwnProperty("enddate") ? f.enddate : 0;
        var c = e.hasOwnProperty("enddate") ? e.enddate : 0;
        return $WH.strcmp(h, j) || $WH.strcmp(g, c)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + "/cardback=" + b.id + "/" + g_urlize(b.name)
    }
  },
  hearthstonecardbackgallery: {
    sort: [1],
    mode: 3,
    nItemsPerPage: 40,
    nItemsPerRow: 5,
    poundable: 1,
    sortOptions: [{
      id: "name",
      name: LANG.name,
      value: "name",
      sortFunc: function (e, c) {
        return $WH.strcmp(e.name, c.name)
      }
    }],
    columns: [],
    value: "name",
    compute: function (b, k, f) {
      k.align = "center";
      k.vAlign = "bottom";
      var c = $WH.ce("a");
      c.href = g_getRelativeHostPrefix("hearthhead.com") + "/cardback=" + b.id + "&text";
      if (Platform.isTouch()) {
        c.rel = "np"
      }
      var g = b.asset.substr(b.asset.lastIndexOf("/") + 1);
      var e = $WH.ce("img");
      e.src = g_staticUrl + "/images/hearthstone/backs/medium/" + g + ".png" + ((typeof g_hearthstone_build != "undefined") ? ("?" + g_hearthstone_build) : "");
      e.style.display = "block";
      e.style.width = "120%";
      e.style.maxWidth = "200px";
      e.style.margin = "0 -50px";
      $WH.ae(c, e);
      $WH.ae(k, c);
      k.style.padding = "0";
      var j = $WH.ce("div");
      j.className = "listview-cleartext";
      j.style.paddingBottom = "10px";
      j.style.position = "relative";
      j.style.height = "1.5em";
      var h = $WH.ce("div");
      h.className = "screenshot-caption";
      $(h).click(function () {
        location.href = g_getRelativeHostPrefix() + "/cardback=" + b.id
      });
      $WH.aE(k, "mouseover", Listview.funcBox.ssCellOver.bind(h));
      $WH.aE(k, "mouseout", Listview.funcBox.ssCellOut.bind(h));
      $WH.ae(h, $WH.ct(b.name));
      $WH.ae(j, h);
      $WH.ae(k, j)
    },
    sortFunc: function (e, c) {
      return $WH.strcmp(e.name, c.name)
    }
  },
  hearthstoneseason: {
    sort: [-3, 1],
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (b, g, e) {
        var f = $WH.ce("div");
        f.style.minWidth = "90px";
        var c = $WH.ce("a");
        c.className = "listview-cleartext";
        c.href = this.getItemLink(b);
        $WH.ae(c, $WH.ct(b.name));
        $WH.ae(f, c);
        $WH.ae(g, f)
      },
      getVisibleText: function (b) {
        return b.name
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "reward",
      name: LANG.reward,
      type: "text",
      value: "reward",
      compute: function (o, e, l) {
        if (!o.cardbacks) {
          return ""
        }
        var h = [];
        for (var g in o.cardbacks) {
          var c = o.cardbacks[g];
          var n = $WH.ce("a");
          n.href = g_getRelativeHostPrefix("hearthhead.com") + "/cardback=" + c.id;
          $WH.ae(n, $WH.ct(c.name));
          if (c.asset) {
            n.className = "icontiny tinyspecial";
            var k = c.asset.substr(c.asset.lastIndexOf("/") + 1);
            var b = g_staticUrl + "/images/hearthstone/backs/icons/small/" + k + ".png" + ((typeof g_hearthstone_build != "undefined") ? ("?" + g_hearthstone_build) : "");
            n.style.backgroundImage = "url(" + b + ")"
          }
          h.push(n)
        }
        for (var f = 0, m; m = h[f]; f++) {
          $WH.ae(e, m);
          if (f + 1 != h.length) {
            $WH.ae(e, $WH.ct(LANG.comma))
          }
        }
      },
      getVisibleText: function (c) {
        if (!c.cardbacks) {
          return ""
        }
        var f = [];
        for (var e in c.cardbacks) {
          var b = c.cardbacks[e];
          f.push(b.name)
        }
        return f.join(LANG.comma)
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this.getVisibleText(e), this.getVisibleText(c))
      }
    },
    {
      id: "dates",
      name: LANG.date,
      type: "text",
      compute: function (b, f) {
        var e = b.hasOwnProperty("startdate") ? (new Date(b.startdate)) : false;
        var c = b.hasOwnProperty("enddate") ? (new Date(b.enddate)) : false;
        $WH.st(f, g_formatStartEndDates(e, c))
      },
      sortFunc: function (f, e) {
        var h = f.hasOwnProperty("startdate") ? f.startdate : 0;
        var j = e.hasOwnProperty("startdate") ? e.startdate : 0;
        var g = f.hasOwnProperty("enddate") ? f.enddate : 0;
        var c = e.hasOwnProperty("enddate") ? e.enddate : 0;
        return $WH.strcmp(h, j) || $WH.strcmp(g, c)
      }
    },
    {
      id: "note",
      name: LANG.notes,
      type: "text",
      value: "note",
      compute: function (b, c) {
        c.style.minWidth = "130px";
        $WH.st(c, b.note)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix("hearthhead.com") + "/season=" + b.id + "/" + g_urlize(b.name)
    }
  },
  mission: {
    sort: [-3, -4, 1],
    mode: 0,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      width: "50%",
      compute: function (j, h, e) {
        var g = $WH.ce("div");
        $WH.ae(h, g);
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(j);
        $WH.ae(b, $WH.ct(j.name));
        $WH.ae(g, b);
        var c = $WH.ce("div");
        $WH.ae(g, c);
        c.className = "listview-blurb small";
        $WH.st(c, j.description);
        if (j.flags & 5) {
          g.style.position = "relative";
          var f = $WH.ce("div");
          f.className = "listview-name-info";
          if (j.flags & 1) {
            c = $WH.ce("span");
            c.className = "q3";
            $WH.ae(c, $WH.ct(g_item_qualities[3]));
            $WH.ae(f, c)
          }
          if (j.flags & 4) {
            c = $WH.ce("span");
            c.className = "q5";
            c.style.marginLeft = "3px";
            $WH.ae(c, $WH.ct(LANG.exhausting));
            $WH.ae(f, c)
          }
          $WH.aef(g, f)
        }
      },
      getVisibleText: function (b) {
        return b.name
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      compute: function (c, b) {
        if (g_garrison_mission_types.hasOwnProperty(c.missiontype)) {
          $WH.ae(b, $WH.ct(g_garrison_mission_types[c.missiontype]))
        }
      },
      getVisibleText: function (b) {
        if (g_garrison_mission_types.hasOwnProperty(b.missiontype)) {
          return g_garrison_mission_types[b.missiontype]
        }
        return ""
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(g_garrison_mission_types.hasOwnProperty(e.missiontype) ? g_garrison_mission_types[e.missiontype] : "", g_garrison_mission_types.hasOwnProperty(c.missiontype) ? g_garrison_mission_types[c.missiontype] : "")
      }
    },
    {
      id: "level",
      name: LANG.level,
      type: "number",
      value: "level",
      compute: function (c, b) {
        if (!c.hasOwnProperty("followertype") || c.followertype != 2) {
          $WH.st(b, c.level)
        }
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.level, c.level)
      }
    },
    {
      id: "itemlevel",
      name: LANG.itemlevel,
      type: "number",
      value: "itemlevel",
      compute: function (c, b) {
        if (c.itemlevel && (!c.hasOwnProperty("followertype") || c.followertype != 2)) {
          $WH.st(b, c.itemlevel)
        }
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.itemlevel, c.itemlevel)
      }
    },
    {
      id: "followers",
      name: LANG.tab_followers,
      type: "number",
      value: "followers"
    },
    {
      id: "ships",
      name: LANG.tab_ships,
      type: "number",
      value: "followers",
      hidden: true
    },
    {
      id: "cost",
      name: LANG.cost,
      type: "number",
      value: "cost",
      compute: function (c, b) {
        if (c.cost) {
          Listview.funcBox.appendMoney(b, null, null, null, [
            [c.currency || 824, c.cost]
          ])
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.cost, c.cost)
      }
    },
    {
      id: "traveltime",
      name: LANG.travel,
      type: "number",
      value: "traveltime",
      hidden: true,
      compute: function (c, b) {
        $WH.st(b, g_formatTimeElapsed(c.traveltime))
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.traveltime, c.traveltime)
      }
    },
    {
      id: "missiontime",
      name: LANG.types[23][0],
      type: "number",
      value: "missiontime",
      hidden: true,
      compute: function (c, b) {
        $WH.st(b, g_formatTimeElapsed(c.missiontime))
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.missiontime, c.missiontime)
      }
    },
    {
      id: "duration",
      name: LANG.duration,
      type: "number",
      compute: function (e, c) {
        var b = $WH.ce("span");
        $WH.ae(c, b);
        $WH.st(b, g_formatTimeElapsed(e.traveltime + e.missiontime));
        if (e.traveltime && e.missiontime) {
          b.className = "tip";
          $WH.Tooltip.simple(b, LANG.tooltip_travel + g_formatTimeElapsed(e.traveltime) + "<br>" + LANG.tooltip_mission + g_formatTimeElapsed(e.missiontime))
        }
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.traveltime + e.missiontime, c.traveltime + c.missiontime)
      }
    },
    {
      id: "experience",
      name: LANG.exp,
      type: "number",
      value: "experience"
    },
    {
      id: "reward",
      name: LANG.reward,
      type: "number",
      compute: function (j, h) {
        var e = 0,
            f = [],
            c = [];
        if (j.rewards.experience.length) {
          var g = $WH.ce("div");
          $WH.ae(h, g);
          $WH.ae(g, $WH.ct($WH.number_format(j.rewards.experience[0]) + " " + LANG.exp))
        }
        for (var b = 0; b < j.rewards.currency.length; b++) {
          if (j.rewards.currency[b].currency == 0) {
            e += j.rewards.currency[b].amount
          } else {
            f.push([j.rewards.currency[b].currency, j.rewards.currency[b].amount])
          }
        }
        for (var b = 0; b < j.rewards.item.length; b++) {
          c.push([j.rewards.item[b].item, j.rewards.item[b].amount])
        }
        if (e + f.length + c.length) {
          Listview.funcBox.appendMoney(h, e, null, c, f)
        }
      },
      sortFunc: function (e, c, h) {
        var f = e.rewards.experience.length + e.rewards.currency.length + e.rewards.item.length;
        var g = e.rewards.experience.length + c.rewards.currency.length + c.rewards.item.length;
        return $WH.strcmp(f, g) || $WH.strcmp(e.rewards.experience.length, c.rewards.experience.length) || (e.rewards.experience.length ? $WH.strcmp(e.rewards.experience[0], c.rewards.experience[0]) : 0)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/mission=" + b.id
    }
  },
  npc: {
    sort: [1],
    mode: 1,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (c, f) {
        if (c.boss) {
          f.className = "icon-boss-padded"
        }
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        if (c.hasQuests != null) {
          b.className += " icontiny tinyspecial";
          b.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/quest_start.gif)"
        }
        $WH.ae(f, b);
        if (c.tag != null) {
          var e = $WH.ce("div");
          e.className = "small";
          $WH.ae(e, $WH.ct("<" + c.tag + ">"));
          $WH.ae(f, e)
        }
      },
      getVisibleText: function (b) {
        var c = b.name;
        if (b.tag) {
          c += " <" + b.tag + ">"
        }
        if (b.boss) {
          c += " boss skull"
        }
        return c
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(c.boss, e.boss) || $WH.strcmp(e.name, c.name) || $WH.strcmp(c.hasQuests, e.hasQuests)
      }
    },
    {
      id: "level",
      name: LANG.level,
      type: "range",
      width: "10%",
      getMinValue: function (b) {
        return b.minlevel
      },
      getMaxValue: function (b) {
        return b.maxlevel
      },
      compute: function (b, e) {
        if (b.classification) {
          var c = $WH.ce("div");
          c.className = "small";
          $WH.ae(c, $WH.ct(g_npc_classifications[b.classification]));
          $WH.ae(e, c)
        }
        if (b.classification == 3 || b.maxlevel == 9999) {
          return "??"
        }
        if (b.minlevel > 0 && b.maxlevel > 0) {
          if (b.minlevel != b.maxlevel) {
            return b.minlevel + LANG.hyphen + b.maxlevel
          } else {
            return b.minlevel
          }
        }
        return -1
      },
      getVisibleText: function (b) {
        var c = "";
        if (b.classification) {
          c += " " + g_npc_classifications[b.classification]
        }
        if (b.minlevel > 0 && b.maxlevel > 0) {
          c += " ";
          if (b.maxlevel == 9999) {
            c += "??"
          } else {
            if (b.minlevel != b.maxlevel) {
              c += b.minlevel + LANG.hyphen + b.maxlevel
            } else {
              c += b.minlevel
            }
          }
        }
        return c
      },
      sortFunc: function (e, c, f) {
        if (f > 0) {
          return $WH.strcmp(e.minlevel, c.minlevel) || $WH.strcmp(e.maxlevel, c.maxlevel) || $WH.strcmp(e.classification, c.classification)
        } else {
          return $WH.strcmp(e.maxlevel, c.maxlevel) || $WH.strcmp(e.minlevel, c.minlevel) || $WH.strcmp(e.classification, c.classification)
        }
      }
    },
    {
      id: "location",
      name: LANG.location,
      type: "text",
      compute: function (b, c) {
        return Listview.funcBox.location(b, c)
      },
      getVisibleText: function (b) {
        return Listview.funcBox.arrayText(b.location, g_zones)
      },
      sortFunc: function (e, c, f) {
        return Listview.funcBox.assocArrCmp(e.location, c.location, g_zones)
      }
    },
    {
      id: "react",
      name: LANG.react,
      type: "text",
      width: "10%",
      value: "react",
      filtrable: 0,
      compute: function (e, j) {
        if (e.react == null) {
          return -1
        }
        var f = [LANG.lvnpc_alliance, LANG.lvnpc_horde];
        var h = 0;
        for (var b = 0; b < 2; ++b) {
          if (e.react[b] != null) {
            if (h++ > 0) {
              $WH.ae(j, $WH.ct(" "))
            }
            var g = $WH.ce("span");
            g.className = (e.react[b] < 0 ? "q10" : (e.react[b] > 0 ? "q2" : "q"));
            $WH.ae(g, $WH.ct(f[b]));
            $WH.ae(j, g)
          }
        }
      }
    },
    {
      id: "skin",
      name: LANG.skin,
      type: "text",
      value: "skin",
      compute: function (c, e) {
        if (c.skin) {
          var b = $WH.ce("a");
          b.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
          b.href = g_getRelativeHostPrefix() + "/npcs?filter=cr=35;crs=0;crv=" + c.skin;
          $WH.ae(b, $WH.ct(c.skin));
          $WH.ae(e, b)
        }
      },
      hidden: 1
    },
    {
      id: "petfamily",
      name: LANG.petfamily,
      type: "text",
      width: "12%",
      compute: function (c, e) {
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/pet=" + c.family;
        $WH.ae(b, $WH.ct(g_pet_families[c.family]));
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_pet_families[b.family]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_pet_families[e.family], g_pet_families[c.family])
      },
      hidden: 1
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      width: "12%",
      compute: function (c, e) {
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/npcs=" + c.type;
        $WH.ae(b, $WH.ct(g_npc_types[c.type]));
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_npc_types[b.type]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_npc_types[e.type], g_npc_types[c.type])
      }
    },
    {
      id: "completed",
      name: LANG.completion,
      hidden: true,
      compute: function (h, m, j, g) {
        if ((!h.hasOwnProperty("type")) || (!this.template._validCompletionCategory(h.type))) {
          return
        }
        for (var k in g_user.lists) {
          var e = g_user.lists[k];
          if (!(e.id in g_completion.npc)) {
            continue
          }
          var f = ($WH.in_array(g_completion.npc[e.id], h.id) != -1);
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + e.id + "/" + e.url;
          b.className = "progress-icon " + (f ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(b, (f ? LANG.lvcompletion.identical : LANG.lvcompletion.missing) + ": " + e.character + " - " + e.realm + " " + e.region);
          $WH.ae(m, b)
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this.template._npcCompletedFlags(e.id), this.template._npcCompletedFlags(c.id))
      },
      getValue: function (e) {
        var g = 0;
        var f = g_completion.npc;
        if ((!e.hasOwnProperty("type")) || (!this.template._validCompletionCategory(e.type))) {
          return -1
        }
        for (var h in g_user.lists) {
          var b = g_user.lists[h];
          if (!(b.id in f)) {
            continue
          }
          if ($WH.in_array(f[b.id], e.id) != -1) {
            g++
          }
        }
        return g
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/npc=" + b.id
    },
    _npcCompletedFlags: function (e) {
      var f = 0;
      if (!g_user.lists) {
        return f
      }
      for (var b = g_user.lists.length - 1; b >= 0; b--) {
        var c = g_user.lists[b];
        if (!(c.id in g_completion.npc)) {
          continue
        }
        f = (f << 1) | ($WH.in_array(g_completion.npc[c.id], e) != -1 ? 1 : 0)
      }
      return f
    },
    _validCompletionCategory: function (b) {
      return $WH.in_array(g_completion_categories[1], b) != -1
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "npc")
      }).bind(this);
      $WH.ae(e, b)
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("npc" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            var c = 0;
            for (var e in this.data) {
              if (this.data[e].hasOwnProperty("type") && this.template._validCompletionCategory(this.data[e].type)) {
                c++
              }
            }
            if (c > (this.data.length * 0.1)) {
              this.visibility.push(parseInt(b))
            }
          }
        }
      }
    }
  },
  object: {
    sort: [1],
    mode: 1,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (c, e) {
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        $WH.ae(e, b)
      }
    },
    {
      id: "location",
      name: LANG.location,
      type: "text",
      compute: function (b, c) {
        return Listview.funcBox.location(b, c)
      },
      getVisibleText: function (b) {
        return Listview.funcBox.arrayText(b.location, g_zones)
      },
      sortFunc: function (e, c, f) {
        return Listview.funcBox.assocArrCmp(e.location, c.location, g_zones)
      }
    },
    {
      id: "skill",
      name: LANG.skill,
      width: "10%",
      value: "skill",
      hidden: true
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      width: "12%",
      compute: function (c, e) {
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/objects=" + c.type;
        $WH.ae(b, $WH.ct(g_object_types[c.type]));
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_object_types[b.type]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_object_types[e.type], g_object_types[c.type])
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/object=" + b.id
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "object")
      }).bind(this);
      $WH.ae(e, b)
    }
  },
  quest: {
    sort: [1, 2],
    mode: 1,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (j, f) {
        var l = $("<a/>", {
          "class": "listview-cleartext",
          href: this.getItemLink(j),
          text: j.name
        });
        var b = $("<div/>");
        b.append(l);
        if (j.reqclass) {
          var k = $("<div/>", {
            "class": "small2"
          });
          var e = Listview.funcBox.assocBinFlags(j.reqclass, g_chr_classes);
          for (var g = 0, h = e.length; g < h; ++g) {
            if (g > 0) {
              k.append(", ")
            }
            var l = $("<a/>", {
              href: g_getRelativeHostPrefix() + "/class=" + e[g],
              "class": "c" + e[g],
              text: g_chr_classes[e[g]]
            });
            k.append(l)
          }
          b.append(k)
        }
        if (j.historical || (j.wflags & 32) || (j.reqrace && j.reqrace != -1)) {
          b.css("position", "relative");
          var k = $("<div/>", {
            "class": "listview-name-info"
          });
          if (j.historical) {
            var m = $("<span/>", {
              css: {
                color: "red"
              },
              text: LANG.lvquest_removed
            });
            k.append(m)
          }
          if (j.wflags & 32) {
            if (j.historical) {
              k.append($("<br/>"));
              b.css("height", "33px")
            }
            var m = $("<span/>", {
              text: LANG.lvquest_autoaccept
            });
            if (j.wflags & 64) {
              m.css("color", "red").append(" " + LANG.lvquest_hostile)
            }
            k.append(m)
          }
          if (j.reqrace && j.reqrace != -1) {
            var c = Listview.funcBox.assocBinFlags(j.reqrace, g_chr_races);
            if (c.length && (j.historical || (j.wflags & 32))) {
              k.append($("<br/>"));
              b.css("height", "33px")
            }
            for (var g = 0, h = c.length; g < h; ++g) {
              if (g > 0) {
                k.append(", ")
              }
              var l = $("<a/>", {
                "class": "q1",
                href: g_getRelativeHostPrefix() + "/race=" + c[g],
                text: g_chr_races[c[g]]
              });
              k.append(l)
            }
          }
          b.append(k)
        }
        $(f).append(b)
      }
    },
    {
      id: "level",
      name: LANG.level,
      value: "level",
      compute: function (b, e) {
        if (b.type || b.daily || b.weekly) {
          var c = $WH.ce("div");
          c.className = "small";
          $WH.nw(c);
          if (b.daily) {
            if (b.type) {
              $WH.ae(c, $WH.ct($WH.sprintf(LANG.lvquest_daily, g_quest_types[b.type])))
            } else {
              $WH.ae(c, $WH.ct(LANG.daily))
            }
          } else {
            if (b.weekly) {
              if (b.type) {
                $WH.ae(c, $WH.ct($WH.sprintf(LANG.lvquest_weekly, g_quest_types[b.type])))
              } else {
                $WH.ae(c, $WH.ct(LANG.weekly))
              }
            } else {
              if (b.type) {
                $WH.ae(c, $WH.ct(g_quest_types[b.type]))
              }
            }
          }
          $WH.ae(e, c)
        }
        return b.level
      },
      getVisibleText: function (b) {
        var c = "";
        if (b.type) {
          c += " " + g_quest_types[b.type]
        }
        if (b.daily) {
          c += " " + LANG.daily
        } else {
          if (b.weekly) {
            c += " " + LANG.weekly
          }
        }
        if (b.level) {
          c += " " + b.level
        }
        return c
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.level, c.level) || $WH.strcmp(e.type, c.type)
      }
    },
    {
      id: "reqlevel",
      name: LANG.req,
      tooltip: LANG.tooltip_reqlevel,
      value: "reqlevel"
    },
    {
      id: "side",
      name: LANG.side,
      type: "text",
      compute: function (b, e) {
        if (b.side && b.side != 3) {
          var c = $WH.ce("span");
          c.className = (b.side == 1 ? "icon-alliance" : "icon-horde");
          c.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, g_sides[b.side], 0, 0, "q")
          };
          c.onmousemove = $WH.Tooltip.cursorUpdate;
          c.onmouseout = $WH.Tooltip.hide;
          $WH.ae(e, c)
        } else {
          if (!b.side) {
            $WH.ae(e, $WH.ct("??"))
          }
        }
      },
      getVisibleText: function (b) {
        if (b.side) {
          return g_sides[b.side]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_sides[e.side], g_sides[c.side])
      }
    },
    {
      id: "rewards",
      name: LANG.rewards,
      compute: function (c, j) {
        var b = (c.itemchoices != null || c.itemrewards != null);
        if (b) {
          var h, g;
          if (c.itemchoices && c.itemchoices.length > 1) {
            h = LANG.lvquest_pickone;
            if (c.itemrewards && c.itemrewards.length > 0) {
              g = LANG.lvquest_alsoget
            }
          }
          Listview.funcBox.createCenteredIcons(c.itemchoices, j, h, 2);
          Listview.funcBox.createCenteredIcons(c.itemrewards, j, g, 2)
        }
        if (c.titlereward && g_titles[c.titlereward]) {
          var f = g_titles[c.titlereward]["name_" + Locale.getName()];
          f = f.replace("%s", '<span class="q0">&lt;' + LANG.name + "&gt;</span>");
          var e = $WH.ce("a");
          e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
          e.href = g_getRelativeHostPrefix() + "/title=" + c.titlereward;
          e.innerHTML = f;
          $WH.ae(j, e);
          $WH.ae(j, $WH.ce("br"))
        }
      },
      getVisibleText: function (b) {
        var c = "";
        if (b.itemchoices && b.itemchoices.length) {
          c += " " + LANG.lvquest_pickone;
          if (b.itemrewards && b.itemrewards.length) {
            c += " " + LANG.lvquest_alsoget
          }
        }
        if (b.titlereward && g_titles[b.titlereward]) {
          c += " " + g_titles[b.titlereward]["name_" + Locale.getName()]
        }
        return c
      },
      sortFunc: function (e, c, g) {
        var k = (e.itemchoices != null ? e.itemchoices.length : 0) + (e.itemrewards != null ? e.itemrewards.length : 0);
        var j = (c.itemchoices != null ? c.itemchoices.length : 0) + (c.itemrewards != null ? c.itemrewards.length : 0);
        var f = (e.titlereward && g_titles[e.titlereward] ? g_titles[e.titlereward]["name_" + Locale.getName()] : "");
        var h = (c.titlereward && g_titles[c.titlereward] ? g_titles[c.titlereward]["name_" + Locale.getName()] : "");
        return $WH.strcmp(k, j) || $WH.strcmp(f, h)
      }
    },
    {
      id: "experience",
      name: LANG.exp,
      value: "xp"
    },
    {
      id: "money",
      name: LANG.money,
      compute: function (b, c) {
        if (b.money > 0 || b.currencyrewards != null) {
          if (b.money > 0) {
            Listview.funcBox.appendMoney(c, b.money);
            if (b.currencyrewards != null) {
              $WH.ae(c, $WH.ct(" + "))
            }
          }
          if (b.currencyrewards != null) {
            Listview.funcBox.appendMoney(c, null, b.side, null, b.currencyrewards)
          }
        }
      },
      getVisibleText: function (b) {
        var e = "";
        for (var c = 0; b.currencyrewards && c < b.currencyrewards.length; ++c) {
          if (g_gatheredcurrencies[b.currencyrewards[c][0]]) {
            e += " " + g_gatheredcurrencies[b.currencyrewards[c][0]]["name_" + Locale.getName()]
          }
        }
        return e
      },
      sortFunc: function (e, c, f) {
        var h = 0,
            g = 0;
        if (e.currencyrewards && e.currencyrewards.length) {
          $.each(e.currencyrewards, function (b, j) {
            h += j[1]
          })
        }
        if (c.currencyrewards && c.currencyrewards.length) {
          $.each(c.currencyrewards, function (b, j) {
            g += j[1]
          })
        }
        return $WH.strcmp(h, g) || $WH.strcmp(e.money, c.money)
      }
    },
    {
      id: "reputation",
      name: LANG.reputation,
      width: "14%",
      value: "id",
      hidden: true
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      compute: function (c, e) {
        if (c.category != 0) {
          e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix() + "/quests=" + c.category2 + "." + c.category;
          $WH.ae(b, $WH.ct(Listview.funcBox.getQuestCategory(c.category)));
          $WH.ae(e, b)
        }
      },
      getVisibleText: function (b) {
        return Listview.funcBox.getQuestCategory(b.category)
      },
      sortFunc: function (e, c, g) {
        var f = Listview.funcBox.getQuestCategory;
        return $WH.strcmp(f(e.category), f(c.category))
      }
    },
    {
      id: "completed",
      name: LANG.completion,
      hidden: true,
      compute: function (g, j) {
        for (var h in g_user.lists) {
          var e = g_user.lists[h];
          if (!(e.id in g_completion.quest)) {
            continue
          }
          var f = ($WH.in_array(g_completion.quest[e.id], g.id) != -1);
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + e.id + "/" + e.url;
          b.className = "progress-icon " + (f ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(b, (f ? LANG.lvcompletion.identical : LANG.lvcompletion.missing) + ": " + e.character + " - " + e.realm + " " + e.region);
          $WH.ae(j, b)
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this._questDoneFlags(e.id), this._questDoneFlags(c.id))
      },
      getValue: function (e) {
        var g = 0;
        var f = g_completion.quest;
        for (var h in g_user.lists) {
          var b = g_user.lists[h];
          if (!(b.id in f)) {
            continue
          }
          if ($WH.in_array(f[b.id], e.id) != -1) {
            g++
          }
        }
        return g
      },
      _questDoneFlags: function (e) {
        var f = 0;
        if (!g_user.lists) {
          return f
        }
        for (var b = g_user.lists.length - 1; b >= 0; b--) {
          var c = g_user.lists[b];
          if (!(c.id in g_completion.quest)) {
            continue
          }
          f = (f << 1) | ($WH.in_array(g_completion.quest[c.id], e) != -1 ? 1 : 0)
        }
        return f
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/quest=" + b.id
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "quest")
      }).bind(this);
      $WH.ae(e, b)
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("quest" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.push(parseInt(b))
          }
        }
      }
    }
  },
  topusers: {
    sort: ["reputation"],
    searchable: 1,
    filtrable: 0,
    columns: [{
      id: "username",
      name: LANG.username,
      type: "text",
      align: "left",
      compute: function (c, f) {
        var e = $("<a>");
        var b = g_GetStaffColorFromRoles(c.groups);
        if (b != "") {
          e.addClass(b)
        } else {
          e.css("color", "white")
        }
        e.text(c.username);
        e.addClass("listview-cleartext");
        e.attr("href", "/user=" + c.username);
        $(f).append(e);
        return
      },
      getVisibleText: function (b) {
        return b.username
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.username, c.username)
      },
      getItemLink: function (b) {
        return "/user=" + user.username
      }
    },
    {
      id: "reputation",
      name: LANG.reputation,
      type: "text",
      compute: function (b, c) {
        $(c).append($WH.number_format(b.reputation));
        return
      },
      sortFunc: function (e, c) {
        if (e.reputation == c.reputation) {
          return 0
        }
        return e.reputation < c.reputation ? 1 : -1
      }
    },
    {
      id: "achievements",
      name: LANG.achievements,
      type: "text",
      compute: function (b, f) {
        var c = $("<span>").addClass("wsach-pts").css("font-size", "inherit");
        var e = "";
        if (b.gold) {
          e += "<i>" + b.gold + "</i>&middot;"
        }
        if (b.silver) {
          e += "<b>" + b.silver + "</b>&middot;"
        }
        e += "<u>" + b.copper + "</u>";
        c.html(e);
        $(f).append(c);
        return
      },
      sortFunc: function (e, c) {
        var g = (e.gold * 1000 * 1000) + (e.silver * 1000) + e.copper;
        var f = (c.gold * 1000 * 1000) + (c.silver * 1000) + c.copper;
        if (g == f) {
          return 0
        }
        return g < f ? 1 : -1
      }
    },
    {
      id: "comments",
      name: LANG.comments,
      type: "text",
      compute: function (b, c) {
        $(c).append($WH.number_format(b.comments));
        return
      },
      sortFunc: function (e, c) {
        if (e.comments == c.comments) {
          return 0
        }
        return e.comments < c.comments ? 1 : -1
      }
    },
    {
      id: "posts",
      name: LANG.posts,
      type: "text",
      compute: function (b, c) {
        $(c).append($WH.number_format(b.posts));
        return
      },
      sortFunc: function (e, c) {
        if (e.posts == c.posts) {
          return 0
        }
        return e.posts < c.posts ? 1 : -1
      }
    },
    {
      id: "screenshots",
      name: LANG.screenshots,
      type: "text",
      compute: function (b, c) {
        $(c).append($WH.number_format(b.screenshots));
        return
      },
      sortFunc: function (e, c) {
        if (e.screenshots == c.screenshots) {
          return 0
        }
        return e.screenshots < c.screenshots ? 1 : -1
      }
    },
    {
      id: "reports",
      name: LANG.reports,
      type: "text",
      compute: function (b, c) {
        $(c).append($WH.number_format(b.reports));
        return
      },
      sortFunc: function (e, c) {
        if (e.reports == c.reports) {
          return 0
        }
        return e.reports < c.reports ? 1 : -1
      }
    },
    {
      id: "votes",
      name: LANG.votes,
      type: "text",
      compute: function (b, c) {
        $(c).append($WH.number_format(b.votes));
        return
      },
      sortFunc: function (e, c) {
        if (e.votes == c.votes) {
          return 0
        }
        return e.votes < c.votes ? 1 : -1
      }
    },
    {
      id: "uploads",
      name: LANG.uploads,
      type: "text",
      compute: function (b, c) {
        $(c).append($WH.number_format(b.uploads));
        return
      },
      sortFunc: function (e, c) {
        if (e.uploads == c.uploads) {
          return 0
        }
        return e.uploads < c.uploads ? 1 : -1
      }
    },
    {
      id: "created",
      name: LANG.created,
      type: "text",
      hidden: 1,
      compute: function (c, f) {
        var b = new Date(c.creation),
            e = (g_serverTime - b) / 1000;
        a = $WH.ce("span");
        g_formatDate(a, e, b);
        $WH.ae(f, a)
      },
      sortFunc: function (e, c) {
        if (e.creation == c.creation) {
          return 0
        }
        return e.creation < c.creation ? 1 : -1
      }
    }],
    getItemLink: function (b) {
      return "/user=" + b.username
    }
  },
  reputationhistory: {
    sort: ["when"],
    searchable: 0,
    filtrable: 0,
    columns: [{
      id: "action",
      value: "action",
      name: LANG.reputationaction,
      type: "text",
      align: "left",
      compute: function (c, e) {
        if (c.param && c.param > 0) {
          var b = $("<a>").addClass("listview-cleartext").attr("href", "/go-to-comment&id=" + c.param).text(l_reputation_names[c.action]);
          if (c.action == 11 || c.action == 12 || c.action == 13) {
            b.attr("href", "/website-achievement=" + c.param + (g_user.name ? ("#user:" + g_user.name) : ""))
          }
          $(e).append(b)
        } else {
          $(e).append(l_reputation_names[c.action])
        }
      },
      getVisibleText: function (b) {
        return l_reputation_names[b.action]
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(l_reputation_names[e.action], l_reputation_names[c.action])
      }
    },
    {
      id: "amount",
      value: "amount",
      name: LANG.amount,
      type: "text",
      width: "250px",
      compute: function (c, e) {
        var b = $("<span>").text(c.amount);
        if (c.amount > 0) {
          b.addClass("q2").prepend("+")
        } else {
          if (c.amount < 0) {
            b.addClass("q10")
          }
        }
        $(e).append(b)
      },
      getVisibleText: function (b) {
        return b.amount
      }
    },
    {
      id: "when",
      name: LANG.date,
      type: "text",
      width: "250px",
      compute: function (e, f) {
        var b = new Date(e.when),
            c = (g_serverTime - b) / 1000;
        a = $WH.ce("span");
        g_formatDate(a, c, b);
        $WH.ae(f, a)
      },
      sortFunc: function (e, c) {
        var g = new Date(e.when);
        var f = new Date(c.when);
        if (g == f) {
          return 0
        }
        return g < f ? 1 : -1
      }
    }]
  },
  resource: {
    sort: [1],
    mode: 0,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (e, j, g) {
        var c = $WH.ce("td");
        c.style.width = "1px";
        c.style.paddingRight = "0";
        c.style.borderRight = "none";
        var f = Icon.create(e.icon, (this.iconSize == null ? 0 : this.iconSize), null, this.getItemLink(e));
        $WH.ae(c, f);
        $WH.ae(g, c);
        j.style.borderLeft = "none";
        var h = $WH.ce("div");
        $WH.ae(j, h);
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(e);
        $WH.ae(b, $WH.ct(e.name));
        $WH.ae(h, b)
      },
      getVisibleText: function (b) {
        return b.name
      }
    },
    {
      id: "description",
      name: LANG.description,
      type: "text",
      align: "left",
      compute: function (b, c) {
        c.innerHTML = b.description
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/resource=" + b.id
    }
  },
  ship: {
    sort: [-5, 1],
    mode: 1,
    searchable: 1,
    filtrable: 1,
    completionText: LANG.lvcompletion_collection,
    columns: [{
      id: "namealliance",
      name: LANG.som.alliance + " " + LANG.name,
      type: "text",
      align: "left",
      value: "namealliance",
      compute: function (e, h, c) {
        var b = $WH.ce("a");
        b.className = "q" + e.quality + " listview-cleartext";
        b.href = this.getItemLink(e, 1);
        if (e.hasOwnProperty("abilities") && $WH.is_array(e.abilities) && e.hasOwnProperty("custom") && e.custom) {
          b.rel = "q=" + e.quality + "&abil=" + e.abilities.join(":")
        }
        $WH.ae(b, $WH.ct(e.namealliance));
        var g = $WH.ce("div");
        $WH.ae(h, g);
        $WH.ae(g, b);
        if (e.hasOwnProperty("active") && !parseInt(e.active)) {
          g.style.position = "relative";
          var f = $WH.ce("div");
          f.className = "listview-name-info q10";
          $WH.ae(f, $WH.ct(LANG.inactive));
          $WH.aef(g, f)
        }
        $WH.ae(h, g)
      }
    },
    {
      id: "classalliance",
      name: LANG.som.alliance + " " + LANG.classs,
      type: "text",
      align: "left",
      value: "classalliance",
      width: "20%",
      compute: function (c, e, b) {
        $WH.st(e, c.classalliance)
      }
    },
    {
      id: "namehorde",
      name: LANG.som.horde + " " + LANG.name,
      type: "text",
      align: "left",
      value: "namehorde",
      compute: function (e, h, c) {
        var b = $WH.ce("a");
        b.className = "q" + e.quality + " listview-cleartext";
        b.href = this.getItemLink(e, 2);
        if (e.hasOwnProperty("abilities") && $WH.is_array(e.abilities) && e.hasOwnProperty("custom") && e.custom) {
          b.rel = "q=" + e.quality + "&abil=" + e.abilities.join(":")
        }
        $WH.ae(b, $WH.ct(e.namehorde));
        var g = $WH.ce("div");
        $WH.ae(h, g);
        $WH.ae(g, b);
        if (e.hasOwnProperty("active") && !e.active) {
          g.style.position = "relative";
          var f = $WH.ce("div");
          f.className = "listview-name-info q10";
          $WH.ae(f, $WH.ct(LANG.inactive));
          $WH.aef(g, f)
        }
        $WH.ae(h, g)
      }
    },
    {
      id: "classhorde",
      name: LANG.som.horde + " " + LANG.classs,
      type: "text",
      align: "left",
      value: "classhorde",
      width: "20%",
      compute: function (c, e, b) {
        $WH.st(e, c.classhorde)
      }
    },
    {
      id: "counters",
      name: LANG.counters,
      hidden: 1,
      type: "text",
      width: "168px",
      compute: function (e, f) {
        if (!e.hasOwnProperty("abilities")) {
          return
        }
        var j = e.abilities;
        if (!$WH.is_array(j)) {
          if (($WH.in_array(this.hiddenCols, "namehorde") != -1) && j.hasOwnProperty("1")) {
            j = j["1"]
          } else {
            if (($WH.in_array(this.hiddenCols, "namealliance") != -1) && j.hasOwnProperty("2")) {
              j = j["2"]
            } else {
              return
            }
          }
        }
        f.style.padding = "0 6px";
        f.style.textAlign = "left";
        for (var l = 0; l < j.length; l++) {
          var g = g_garrison_abilities[j[l]];
          for (var c in g.counters) {
            if (!g.counters.hasOwnProperty(c)) {
              continue
            }
            if (!g_garrison_mechanics.hasOwnProperty(g.counters[c])) {
              continue
            }
            var b = g_garrison_mechanics[g.counters[c]];
            var k = $WH.ce("div");
            k.style.display = "inline-block";
            if (b.hasOwnProperty("icon")) {
              var h = Icon.create(b.icon, 0, null, "/garrisonability=" + g.id);
              h.className += " garrison-ability";
              h.style.cssFloat = "left";
              $WH.ae(k, h)
            }
            $WH.ae(f, k)
          }
        }
      },
      getVisibleText: function (e) {
        var c = "";
        if (!e.hasOwnProperty("abilities")) {
          return c
        }
        var h = e.abilities;
        if (!$WH.is_array(h)) {
          if (($WH.in_array(this.hiddenCols, "namehorde") != -1) && h.hasOwnProperty("1")) {
            h = h["1"]
          } else {
            if (($WH.in_array(this.hiddenCols, "namealliance") != -1) && h.hasOwnProperty("2")) {
              h = h["2"]
            } else {
              return c
            }
          }
        }
        for (var b = 0; b < e.abilities.length; b++) {
          var f = g_garrison_abilities[e.abilities[b]];
          for (var g in f.counters) {
            if (!f.counters.hasOwnProperty(g)) {
              continue
            }
            c += f.counters[g].name + " "
          }
        }
        return c
      }
    },
    {
      id: "quality",
      name: LANG.quality,
      type: "text",
      value: "quality",
      width: "10%",
      compute: function (c, e) {
        var b = $WH.ce("span");
        b.className = "q" + c.quality;
        $WH.st(b, g_item_qualities[c.quality]);
        $WH.ae(e, b)
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.quality, c.quality)
      }
    },
    {
      id: "completed",
      name: LANG.completion,
      width: "10%",
      hidden: true,
      compute: function (b, g, j, o) {
        var h = 3;
        if (this.hiddenCols) {
          for (var n = 0; n < this.hiddenCols.length; n++) {
            if (this.hiddenCols[n] == "namealliance") {
              h = 2;
              break
            }
            if (this.hiddenCols[n] == "namehorde") {
              h = 1;
              break
            }
          }
        }
        if (b.npcalliance == b.npchorde) {
          h = false
        }
        for (var k in g_user.lists) {
          var f = g_user.lists[k];
          if (!g_completion.hasOwnProperty("ship") || (!(f.id in g_completion.ship))) {
            continue
          }
          var e = ($WH.in_array(g_completion.ship[f.id], b.id) != -1);
          if (h) {
            if (h != 3) {
              e |= ($WH.in_array(g_completion.ship[f.id], "" + b.id + "." + h) != -1)
            } else {
              e |= ($WH.in_array(g_completion.ship[f.id], "" + b.id + ".1") != -1);
              e |= ($WH.in_array(g_completion.ship[f.id], "" + b.id + ".2") != -1)
            }
          }
          var m = $WH.ce("a");
          m.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + f.id + "/" + f.url;
          m.className = "progress-icon " + (e ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(m, (e ? LANG.lvcompletion.identical : LANG.lvcompletion.missing) + ": " + f.character + " - " + f.realm + " " + f.region);
          $WH.ae(g, m)
        }
      },
      sortFunc: function (h, g, j) {
        var k = 3;
        if (this.hiddenCols) {
          for (var f = 0; f < this.hiddenCols.length; f++) {
            if (this.hiddenCols[f] == "namealliance") {
              k = 2;
              break
            }
            if (this.hiddenCols[f] == "namehorde") {
              k = 1;
              break
            }
          }
        }
        var e = k,
            l = k;
        if (h.npcalliance == h.npchorde) {
          e = false
        }
        if (g.npcalliance == g.npchorde) {
          l = false
        }
        var c = function (q, o) {
          var p = 0;
          if (!g_user.lists) {
            return p
          }
          for (var b = g_user.lists.length - 1; b >= 0; b--) {
            var m = g_user.lists[b];
            if (!g_completion.hasOwnProperty("ship") || (!(m.id in g_completion.ship))) {
              continue
            }
            var n = $WH.in_array(g_completion.ship[m.id], q) != -1;
            if (o) {
              if (o != 3) {
                n |= ($WH.in_array(g_completion.ship[m.id], "" + q + "." + o) != -1)
              } else {
                n |= ($WH.in_array(g_completion.ship[m.id], "" + q + ".1") != -1);
                n |= ($WH.in_array(g_completion.ship[m.id], "" + q + ".2") != -1)
              }
            }
            p = (p << 1) | (n ? 1 : 0)
          }
          return p
        };
        return $WH.strcmp(c(h.id, e), c(g.id, l))
      }
    }],
    getItemLink: function (e, c) {
      if (!c && this.hiddenCols) {
        for (var b = 0; b < this.hiddenCols.length; b++) {
          if (this.hiddenCols[b] == "namealliance") {
            c = 2;
            break
          }
          if (this.hiddenCols[b] == "namehorde") {
            c = 1;
            break
          }
        }
      }
      if (e.npcalliance == e.npchorde) {
        c = false
      }
      return g_getRelativeHostPrefix() + "/ship=" + e.id + (c ? ("." + c) : "")
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("ship" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.push(parseInt(b));
            break
          }
        }
      }
    }
  },
  skill: {
    sort: [1],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (c, j, g) {
        var e = $WH.ce("td");
        e.style.width = "1px";
        e.style.paddingRight = "0";
        e.style.borderRight = "none";
        $WH.ae(e, Icon.create(c.icon, 0, null, this.getItemLink(c)));
        $WH.ae(g, e);
        j.style.borderLeft = "none";
        var h = $WH.ce("div");
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        if (c.expansion) {
          var f = $WH.ce("span");
          f.className = g_GetExpansionClassName(c.expansion);
          $WH.ae(f, b);
          $WH.ae(h, f)
        } else {
          $WH.ae(h, b)
        }
        $WH.ae(j, h)
      },
      getVisibleText: function (b) {
        var c = b.name + Listview.funcBox.getExpansionText(b);
        return c
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      width: "16%",
      compute: function (c, e) {
        if (c.category != 0) {
          e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix() + "/skills=" + c.category;
          $WH.ae(b, $WH.ct(g_skill_categories[c.category]));
          $WH.ae(e, b)
        }
      },
      getVisibleText: function (b) {
        return g_skill_categories[skill.category]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_skill_categories[e.category], g_skill_categories[c.category])
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/skill=" + b.id
    }
  },
  sound: {
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (c, e) {
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = g_getRelativeHostPrefix() + "/sound=" + c.id;
        $WH.st(b, c.name);
        $WH.ae(e, b)
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      compute: function (e, g) {
        var c = "";
        if (!this.hasOwnProperty("soundtypecache")) {
          var f = {};
          for (var b in mn_sounds) {
            if (mn_sounds[b][0] < 1000) {
              f[mn_sounds[b][0]] = mn_sounds[b][1]
            }
          }
          this.soundtypecache = f
        }
        if (this.soundtypecache.hasOwnProperty(e.type)) {
          c = this.soundtypecache[e.type]
        }
        $WH.st(g, c)
      },
      sortFunc: function (e, c) {
        if (!this.hasOwnProperty("soundtypecache")) {
          var j = {};
          for (var f in mn_sounds) {
            if (mn_sounds[f][0] < 1000) {
              j[mn_sounds[f][0]] = mn_sounds[f][1]
            }
          }
          this.soundtypecache = j
        }
        var g = (this.soundtypecache.hasOwnProperty(e.type)) ? this.soundtypecache[e.type] : "";
        var h = (this.soundtypecache.hasOwnProperty(c.type)) ? this.soundtypecache[c.type] : "";
        return $WH.strcmp(g, h) || $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "activity",
      name: LANG.activity,
      hidden: true,
      type: "text",
      compute: function (b, c) {
        if (!b.hasOwnProperty("activity")) {
          return ""
        }
        if (LANG.sound_activities.hasOwnProperty(b.activity)) {
          return LANG.sound_activities[b.activity]
        } else {
          return b.activity
        }
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(this.compute(e), this.compute(c))
      }
    },
    {
      id: "sound",
      name: LANG.types[19][2],
      span: 2,
      compute: function (e, g, b) {
        var c = $WH.ce("td");
        c.className = "nowrap";
        $WH.ae(b, c);
        c.style.borderRight = "none";
        g.className = "nowrap";
        g.style.borderLeft = "none";
        var f = $WH.ce("div");
        $WH.ae(c, f);
        (new AudioControls()).init(e.files, f, {
          listview: this,
          trackdisplay: g
        })
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/sound=" + b.id
    }
  },
  spell: {
    sort: ["name", "skill", "level"],
    mode: 1,
    searchable: 1,
    filtrable: 1,
    completionText: LANG.lvcompletion_collection,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      value: "name",
      compute: function (j, g, m) {
        var h = $WH.ce("td"),
            p;
        h.style.width = "44px";
        h.style.padding = "3px 0 3px 12px";
        h.style.borderRight = "none";
        if (j.creates != null) {
          p = g_items.createIcon(j.creates[0], 1, Listview.funcBox.createTextRange(j.creates[1], j.creates[2]))
        } else {
          if ((j.taughtby != null) && g_items[j.taughtby]) {
            p = g_items.createIcon(j.taughtby, 1);
            j.name = g_items[j.taughtby].name.charAt(0) + j.name.substring(1)
          } else {
            p = g_spells.createIcon(j.id, 1)
          }
        }
        p.style.cssFloat = p.style.styleFloat = "left";
        $WH.ae(h, p);
        $WH.ae(m, h);
        g.style.borderLeft = "none";
        var b = $WH.ce("div");
        var o = $WH.ce("a");
        var n = j.name.charAt(0);
        o.className = "listview-cleartext";
        if (n != "@") {
          o.className += " q" + (8 - parseInt(n))
        }
        o.href = this.getItemLink(j);
        if (j.frommerge == 1) {
          o.className += " icon-merge-right"
        }
        $WH.ae(o, $WH.ct(j.name.substring(1)));
        $WH.ae(b, o);
        if (j.rank) {
          var l = $WH.ce("div");
          l.className = "small2";
          $WH.ae(l, $WH.ct(j.rank));
          $WH.ae(b, l)
        }
        if (this.showRecipeClass && j.reqclass) {
          var l = $WH.ce("div");
          l.className = "small2";
          var f = Listview.funcBox.assocBinFlags(j.reqclass, g_chr_classes);
          for (var h = 0, k = f.length; h < k; ++h) {
            if (h > 0) {
              $WH.ae(l, $WH.ct(", "))
            }
            o = $WH.ce("a");
            o.href = g_getRelativeHostPrefix() + "/class=" + f[h];
            o.className = "c" + f[h];
            $WH.st(o, g_chr_classes[f[h]]);
            $WH.ae(l, o)
          }
          $WH.ae(b, l)
        }
        if (j.reqrace) {
          b.style.position = "relative";
          var l = $WH.ce("div");
          l.className = "listview-name-info";
          if ((j.reqrace & 1791) == 1101) {
            $WH.ae(l, $WH.ct(g_sides[1]))
          } else {
            if ((j.reqrace & 1791) == 690) {
              $WH.ae(l, $WH.ct(g_sides[2]))
            } else {
              var e = Listview.funcBox.assocBinFlags(j.reqrace, g_chr_races);
              l.className += (($WH.isset("g_thottbot") && g_thottbot) ? " q" : " q1");
              for (var h = 0, k = e.length; h < k; ++h) {
                if (h > 0) {
                  $WH.ae(l, $WH.ct(LANG.comma))
                }
                var o = $WH.ce("a");
                o.href = g_getRelativeHostPrefix() + "/race=" + e[h];
                $WH.st(o, g_chr_races[e[h]]);
                $WH.ae(l, o)
              }
            }
          }
          $WH.aef(b, l)
        }
        $WH.ae(g, b)
      },
      getVisibleText: function (c) {
        var g = c.name;
        if (c.rank) {
          g += " " + c.rank
        }
        if (c.reqclass) {
          var f = Listview.funcBox.assocBinFlags(c.reqclass, g_chr_classes);
          for (var e = 0, b = f.length; e < b; ++e) {
            if (e > 0) {
              g += LANG.comma
            }
            g += g_chr_classes[f[e]]
          }
        }
        if (c.reqrace) {
          g += " " + Listview.funcBox.arrayText(Listview.funcBox.assocBinFlags(c.reqrace, g_chr_races), g_chr_races)
        }
        if ((c.reqrace & 1791) == 1101) {
          g += " " + g_sides[1]
        } else {
          if ((c.reqrace & 1791) == 690) {
            g += " " + g_sides[2]
          }
        }
        return g
      }
    },
    {
      id: "level",
      name: LANG.level,
      width: "10%",
      value: "level",
      compute: function (b, c) {
        if (b.level > 0) {
          return b.level
        }
      },
      hidden: true
    },
    {
      id: "trainingcost",
      name: LANG.cost,
      width: "10%",
      hidden: true,
      getValue: function (b) {
        if (b.trainingcost) {
          return b.trainingcost
        }
      },
      compute: function (b, c) {
        if (b.trainingcost) {
          Listview.funcBox.appendMoney(c, b.trainingcost)
        }
      },
      sortFunc: function (e, c, f) {
        if (e.trainingcost == null) {
          return -1
        } else {
          if (c.trainingcost == null) {
            return 1
          }
        }
        if (e.trainingcost < c.trainingcost) {
          return -1
        } else {
          if (e.trainingcost > c.trainingcost) {
            return 1
          }
        }
        return 0
      }
    },
    {
      id: "classes",
      name: LANG.classes,
      type: "text",
      hidden: true,
      width: "20%",
      getVisibleText: function (c) {
        var g = "";
        if (c.reqclass) {
          var f = Listview.funcBox.assocBinFlags(c.reqclass, g_chr_classes);
          for (var e = 0, b = f.length; e < b; ++e) {
            if (e > 0) {
              g += LANG.comma
            }
            g += g_chr_classes[f[e]]
          }
        }
        return g
      },
      compute: function (c, j) {
        if (c.reqclass) {
          var f = Listview.funcBox.assocBinFlags(c.reqclass, g_chr_classes);
          var h = $WH.ce("div");
          h.style.width = (26 * f.length) + "px";
          h.style.margin = "0 auto";
          for (var e = 0, b = f.length; e < b; ++e) {
            var g = Icon.create("class_" + g_file_classes[f[e]], 0, null, g_getRelativeHostPrefix() + "/class=" + f[e]);
            g.style.cssFloat = g.style.styleFloat = "left";
            $(g).mouseover((function (k) {
              return function (l) {
                $WH.Tooltip.showAtCursor(l, k, 0, 0, "q")
              }
            })(g_chr_classes[f[e]])).mousemove(function (k) {
              $WH.Tooltip.cursorUpdate(k)
            }).mouseout(function () {
              $WH.Tooltip.hide()
            });
            $WH.ae(h, g)
          }
          $WH.ae(j, h)
        }
      },
      sortFunc: function (e, c, f) {
        return Listview.funcBox.assocArrCmp(Listview.funcBox.assocBinFlags(e.reqclass, g_chr_classes), Listview.funcBox.assocBinFlags(c.reqclass, g_chr_classes), g_chr_classes)
      }
    },
    {
      id: "singleclass",
      name: LANG.classs,
      type: "text",
      hidden: true,
      width: "15%",
      compute: function (b, g) {
        if (b.reqclass) {
          var c = Listview.funcBox.assocBinFlags(b.reqclass, g_chr_classes);
          var e = c[0];
          var f = $("<a>").css("background-image", 'url("' + g_staticUrl + "/images/wow/icons/tiny/class_" + g_file_classes[e] + '.gif")').addClass("icontiny tinyspecial").addClass("c" + e).attr("href", g_getRelativeHostPrefix() + "/class=" + e).text(g_chr_classes[e]);
          $(g).append(f)
        }
      },
      sortFunc: function (e, c, f) {
        return Listview.funcBox.assocArrCmp(Listview.funcBox.assocBinFlags(e.reqclass, g_chr_classes), Listview.funcBox.assocBinFlags(c.reqclass, g_chr_classes), g_chr_classes)
      }
    },
    {
      id: "glyphtype",
      name: LANG.glyphtype,
      type: "text",
      hidden: true,
      width: "10%",
      compute: function (b, c) {
        if (b.glyphtype) {
          return g_item_glyphs[b.glyphtype]
        }
      }
    },
    {
      id: "guildlevel",
      name: LANG.guildlevel,
      width: "10%",
      value: "guildlevel",
      compute: function (b, c) {
        if (b.guildlevel > 0) {
          return b.guildlevel
        }
      },
      hidden: true
    },
    {
      id: "schools",
      name: LANG.school,
      type: "text",
      width: "10%",
      hidden: true,
      compute: function (b, g) {
        var f = "";
        var e = b.schools ? b.schools : b.school;
        for (var c = 0; c < 32; ++c) {
          if (!(e & (1 << c))) {
            continue
          }
          if (f != "") {
            f += ", "
          }
          f += g_spell_resistances[c]
        }
        return f
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this.compute(e), this.compute(c))
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      width: "14%",
      hidden: true,
      compute: function (f, k) {
        var j = $WH.ce("div");
        j.className = "small";
        if ($WH.in_array([7, -2, -7, -12, -11, -13, -14], f.cat) != -1) {
          var e = $WH.ce("a");
          e.className = "q0";
          e.href = g_getRelativeHostPrefix() + "/spells=" + f.cat;
          $WH.ae(e, $WH.ct(g_spell_categories[f.cat]));
          $WH.ae(j, e);
          $WH.ae(j, $WH.ce("br"));
          if (f.talentspec) {
            var h = 0;
            for (var g = 0, c = f.talentspec.length; g < c; ++g) {
              if (this._wowClass && ($WH.in_array(g_chr_specs_by_class[this._wowClass], f.talentspec[g]) == -1)) {
                continue
              }
              if (h++ > 0) {
                $WH.ae(j, $WH.ct(LANG.comma))
              }
              var b = $WH.ce("a");
              b.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
              b.href = g_getRelativeHostPrefix() + "/spells=" + f.cat + "." + (1 + Math.log(f.reqclass) / Math.LN2) + "." + f.talentspec[g];
              $WH.ae(b, $WH.ct(g_chr_specs[f.talentspec[g]]));
              $WH.ae(j, b)
            }
          } else {
            if (g_spell_types[f.cat]) {
              if (f.cat == -11 && (f.type == 1 || f.type == 2)) {
                var b = $WH.ce("a");
                b.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
                b.href = g_getRelativeHostPrefix() + "/spells=" + f.cat + "?filter=cr=22;crs=" + f.type + ";crv=0";
                $WH.ae(b, $WH.ct(g_spell_types[f.cat][f.type]));
                $WH.ae(j, b)
              } else {
                $WH.ae(j, $WH.ct(g_spell_types[f.cat][f.type]))
              }
            } else {
              if (f.reqclass) {
                var b = $WH.ce("a");
                b.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
                b.href = g_getRelativeHostPrefix() + "/spells=" + f.cat + "." + (1 + Math.log(f.reqclass) / Math.LN2) + (g_item_glyphs[f.glyphtype] ? "?filter=gl=" + f.glyphtype : "");
                $WH.ae(b, $WH.ct((g_item_glyphs[f.glyphtype] ? g_item_glyphs[f.glyphtype] + " " : "") + g_chr_classes[(1 + Math.log(f.reqclass) / Math.LN2)]));
                $WH.ae(j, b)
              }
            }
          }
        } else {
          if (g_spell_categories[f.cat]) {
            var e = $WH.ce("a");
            e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
            e.href = g_getRelativeHostPrefix() + "/spells=" + f.cat;
            $WH.ae(e, $WH.ct(g_spell_categories[f.cat]));
            $WH.ae(j, e)
          }
        }
        $WH.ae(k, j)
      },
      getVisibleText: function (b) {
        var c = g_spell_categories[b.cat];
        if ($WH.in_array([7, -2, -12, -11, -13, -14], b.cat) != -1) {
          if (b.talentspec) {
            c += " " + Listview.funcBox.arrayText(b.talentspec, g_chr_specs)
          } else {
            if (g_spell_types[b.cat]) {
              c += " " + g_spell_types[b.cat][b.type]
            } else {
              if (g_item_glyphs[b.glyphtype]) {
                c += " " + g_item_glyphs[b.glyphtype]
              }
              c += " " + g_chr_classes[(1 + Math.log(b.reqclass) / Math.LN2)]
            }
          }
        }
        return c
      },
      sortFunc: function (e, c, f) {
        var h = (g_spell_types[e.cat] ? g_spell_types[e.cat][e.type] : e.type),
            g = (g_spell_types[c.cat] ? g_spell_types[c.cat][c.type] : e.type);
        return $WH.strcmp(e.cat, c.cat) || $WH.strcmp(h, g)
      }
    },
    {
      id: "reagents",
      name: LANG.reagents,
      width: "9%",
      getValue: function (b) {
        return (b.reagents ? b.reagents.length : 0)
      },
      compute: function (h, e) {
        var b = (h.reagents != null);
        if (b) {
          e.style.padding = "0";
          var l = $WH.ce("div");
          var k = h.reagents;
          l.style.width = (44 * k.length) + "px";
          l.style.margin = "0 auto";
          for (var f = 0, j = k.length; f < j; ++f) {
            var c = k[f][0];
            var g = k[f][1];
            var m = g_items.createIcon(c, 1, g);
            m.style.cssFloat = m.style.styleFloat = "left";
            $WH.ae(l, m)
          }
          $WH.ae(e, l)
        }
      },
      sortFunc: function (e, c) {
        var g = (e.reagents != null ? e.reagents.length : 0);
        var f = (c.reagents != null ? c.reagents.length : 0);
        if (g > 0 && g == f) {
          return $WH.strcmp(e.reagents.toString(), c.reagents.toString())
        } else {
          return $WH.strcmp(g, f)
        }
      }
    },
    {
      id: "source",
      name: LANG.source,
      type: "text",
      width: "12%",
      hidden: true,
      compute: function (c, g) {
        if (c.source != null) {
          var f = "";
          for (var e = 0, b = c.source.length; e < b; ++e) {
            if (e > 0) {
              f += LANG.comma
            }
            f += g_sources[c.source[e]]
          }
          return f
        }
      },
      sortFunc: function (e, c, f) {
        return Listview.funcBox.assocArrCmp(e.source, c.source, g_sources)
      }
    },
    {
      id: "side",
      name: LANG.side,
      type: "text",
      hidden: true,
      compute: function (b, e) {
        if (b.side && b.side != 3) {
          var c = $WH.ce("span");
          c.className = (b.side == 1 ? "icon-alliance" : "icon-horde");
          c.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, g_sides[b.side], 0, 0, "q")
          };
          c.onmousemove = $WH.Tooltip.cursorUpdate;
          c.onmouseout = $WH.Tooltip.hide;
          $WH.ae(e, c)
        }
      },
      getVisibleText: function (b) {
        if (b.side) {
          return g_sides[b.side]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_sides[e.side], g_sides[c.side])
      }
    },
    {
      id: "itemsource",
      name: LANG.source,
      type: "text",
      hidden: true,
      compute: function (b, f) {
        var e = g_items[b.taughtby];
        if (e) {
          for (var c = 0; c < Listview.templates.item.columns.length; ++c) {
            if (Listview.templates.item.columns[c].id == "source") {
              return Listview.templates.item.columns[c].compute(e, f)
            }
          }
        }
      },
      getVisibleText: function (b) {
        var e = g_items[b.taughtby];
        if (e) {
          for (var c = 0; c < Listview.templates.item.columns.length; ++c) {
            if (Listview.templates.item.columns[c].id == "source") {
              return Listview.templates.item.columns[c].getVisibleText(e)
            }
          }
        }
      },
      sortFunc: function (e, c) {
        var h = g_items[e.taughtby];
        var g = g_items[c.taughtby];
        if (h && g) {
          for (var f = 0; f < Listview.templates.item.columns.length; ++f) {
            if (Listview.templates.item.columns[f].id == "source") {
              return Listview.templates.item.columns[f].sortFunc(h, g)
            }
          }
        }
      }
    },
    {
      id: "branch",
      name: LANG.branch,
      type: "text",
      width: "10%",
      hidden: true,
      compute: function (b, c) {
        if (b.project) {
          if (g_project_branches[b.project.branch]) {
            $(c).append(g_project_branches[b.project.branch] + "<br />")
          }
          $(c).append("<small" + (!b.project.rarity ? ' class="q0"' : "") + ">" + g_project_rarity[b.project.rarity || 0] + "</small>")
        }
      },
      getVisibleText: function (b) {
        var c = "";
        if (b.project) {
          if (g_project_branches[b.project.branch]) {
            c += g_project_branches[b.project.branch] + " "
          }
          c += g_project_rarity[b.project.rarity || 0]
        }
        return c
      },
      sortFunc: function (e, c, f) {
        if (!e.project || !c.project) {
          return (e.project ? 1 : (c.project ? -1 : 0))
        }
        return $WH.strcmp(g_project_branches[e.project.branch], g_project_branches[c.project.branch]) || -$WH.strcmp(e.project.rarity, c.project.rarity)
      }
    },
    {
      id: "fragments",
      name: LANG.fragments,
      type: "text",
      width: "10%",
      hidden: true,
      compute: function (b, e) {
        if (b.project) {
          var c = $("<a/>", {
            href: g_getRelativeHostPrefix() + "/currency=" + b.project.currency,
            text: b.project.ncurrency
          });
          c.addClass("q1");
          if (!g_gatheredcurrencies[b.project.currency]) {
            $.each(g_currencies, function (g, f) {
              g_gatheredcurrencies[g] = [];
              g_gatheredcurrencies[g]["name_" + Locale.getName()] = f[0];
              g_gatheredcurrencies[g].icon = [];
              g_gatheredcurrencies[g].icon.push(f[1]);
              g_gatheredcurrencies[g].icon.push(f[1])
            })
          }
          c.addClass("icontinyr tip");
          c.css("background-image", "url(" + g_staticUrl + "/images/wow/icons/tiny/" + g_gatheredcurrencies[b.project.currency].icon[0].toLowerCase() + ".gif)");
          c.mouseover(function (f) {
            $WH.Tooltip.showAtCursor(f, g_gatheredcurrencies[b.project.currency]["name_" + Locale.getName()], 0, 0, "q")
          });
          c.mousemove($WH.Tooltip.cursorUpdate);
          c.mouseout($WH.Tooltip.hide);
          $(e).append(c)
        }
      },
      sortFunc: function (e, c, f) {
        if (!e.project || !c.project) {
          return (e.project ? 1 : (c.project ? -1 : 0))
        }
        return $WH.strcmp(e.project.ncurrency, c.project.ncurrency) || $WH.strcmp(e.project.currency, c.project.currency)
      }
    },
    {
      id: "keystone",
      name: LANG.keystone,
      type: "text",
      width: "10%",
      hidden: true,
      compute: function (b, e) {
        if (b.project && b.project.nkeystones && g_items[b.project.keystone]) {
          e.style.padding = "0";
          var c = $WH.ce("div");
          c.style.width = "44px";
          c.style.margin = "0 auto";
          $WH.ae(c, g_items.createIcon(b.project.keystone, 1, b.project.nkeystones));
          $WH.ae(e, c)
        }
      },
      getVisibleText: function (b) {
        if (b.project && b.project.nkeystones && g_items[b.project.keystone]) {
          return g_items[b.project.keystone]["name_" + Locale.getName()]
        }
      },
      sortFunc: function (e, c, h) {
        if (!e.project || !c.project) {
          return (e.project ? 1 : (c.project ? -1 : 0))
        }
        var g = e.project.nkeystones && g_items[e.project.keystone] ? g_items[e.project.keystone]["name_" + Locale.getName()] : "";
        var f = c.project.nkeystones && g_items[c.project.keystone] ? g_items[c.project.keystone]["name_" + Locale.getName()] : "";
        return $WH.strcmp(g, f) || $WH.strcmp(e.project.nkeystones, c.project.nkeystones)
      }
    },
    {
      id: "skill",
      name: LANG.skill,
      type: "text",
      width: "20%",
      getValue: function (b) {
        return b.learnedat
      },
      compute: function (w, j, b, m) {
        if (w.skill != null) {
          this.skillsColumn = m;
          var l = $WH.ce("div"),
              u;
          l.className = "small";
          for (var p = 0, r = w.skill.length; p < r; ++p) {
            if (p > 0) {
              $WH.ae(l, $WH.ct(LANG.comma))
            }
            if (w.skill[p] == -1) {
              $WH.ae(l, $WH.ct(LANG.ellipsis))
            } else {
              if ($WH.in_array([-3, -5, -6, -7, 11, 9], w.cat) != -1) {
                var h = "";
                if ((w.cat == -3) && !(w.reqclass)) {
                  for (var s = 0; s < mn_spells.length; s++) {
                    if (mn_spells[s][0] == -3) {
                      for (var q = 0; q < mn_spells[s][3].length; q++) {
                        for (var o = 0; o < mn_spells[s][3][q][3].length; o++) {
                          if (mn_spells[s][3][q][3][o][0] == w.skill[p]) {
                            h = mn_spells[s][3][q][0] + "."
                          }
                        }
                      }
                    }
                  }
                } else {
                  if (w.reqclass) {
                    h = "" + (1 + Math.log(w.reqclass) / Math.LN2) + "."
                  }
                }
                var u = $WH.ce("a");
                u.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
                if ($WH.in_array([-5, -6], w.cat) != -1) {
                  u.href = g_getRelativeHostPrefix() + "/spells=" + w.cat
                } else {
                  u.href = g_getRelativeHostPrefix() + "/spells=" + w.cat + "." + h + w.skill[p]
                }
                var t = $WH.g_getGets();
                var f = (t.spells ? t.spells.split(".") : [false, false]);
                if (w.reqclass && (w.cat == 7 || w.cat == -2)) {
                  if (p < 1 && ((1 + Math.log(w.reqclass) / Math.LN2) != f[1])) {
                    var v = $WH.ce("a");
                    v.className = "q0";
                    v.href = g_getRelativeHostPrefix() + "/spells=" + w.cat + "." + (1 + Math.log(w.reqclass) / Math.LN2);
                    $WH.ae(v, $WH.ct(g_chr_classes[(1 + Math.log(w.reqclass) / Math.LN2)]));
                    $WH.ae(l, v);
                    $WH.ae(l, $WH.ce("br"))
                  }
                }
                $WH.ae(u, $WH.ct(g_spell_skills[w.skill[p]]));
                $WH.ae(l, u)
              } else {
                if ($WH.in_array([-2, 7], w.cat) != -1) {
                  var u = $WH.ce("a");
                  u.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
                  u.href = g_getRelativeHostPrefix() + "/spells=" + w.cat + "." + (w.reqclass ? (1 + Math.log(w.reqclass) / Math.LN2) : "");
                  $WH.ae(u, $WH.ct(g_spell_skills[w.skill[p]]));
                  $WH.ae(l, u)
                } else {
                  $WH.ae(l, $WH.ct(g_spell_skills[w.skill[p]]))
                }
              }
            }
          }
          if (w.specialization && g_skill_specializations[w.specialization]) {
            var k = u.href;
            if (k) {
              u = $WH.ce("a");
              u.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
              u.href = k + "." + w.specialization;
              $WH.ae(l, $WH.ct(": "));
              $WH.ae(u, $WH.ct(g_skill_specializations[w.specialization]));
              $WH.ae(l, u)
            } else {
              $WH.ae(l, $WH.ct(": " + g_skill_specializations[w.specialization]))
            }
          }
          if (w.learnedat > 0) {
            $WH.ae(l, $WH.ct(" ("));
            var c = $WH.ce("span");
            if (w.learnedat == 9999) {
              c.className = "q0";
              $WH.ae(c, $WH.ct("??"))
            } else {
              if (w.learnedat > 0) {
                $WH.ae(c, $WH.ct(w.learnedat));
                c.style.fontWeight = "bold"
              }
            }
            $WH.ae(l, c);
            $WH.ae(l, $WH.ct(")"))
          }
          $WH.ae(j, l);
          if (w.colors != null) {
            this.columns[m].type = null;
            var e = w.colors,
                n = 0;
            for (var p = 0; p < e.length; ++p) {
              if (e[p] > 0) {
                ++n;
                break
              }
            }
            if (n > 0) {
              n = 0;
              l = $WH.ce("div");
              l.className = "small";
              l.style.fontWeight = "bold";
              for (var p = 0; p < e.length; ++p) {
                if (e[p] > 0) {
                  if (n++ > 0) {
                    $WH.ae(l, $WH.ct(" "))
                  }
                  var g = $WH.ce("span");
                  g.className = "r" + (p + 1);
                  $WH.ae(g, $WH.ct(e[p]));
                  $WH.ae(l, g)
                }
              }
              $WH.ae(j, l)
            }
          }
        } else {
          if ((w.reqclass) && ($WH.in_array([-2, 7], w.cat) != -1)) {
            var l = $WH.ce("div"),
                u;
            l.className = "small";
            var u = $WH.ce("a");
            u.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
            u.href = g_getRelativeHostPrefix() + "/spells=" + w.cat + "." + (w.reqclass ? (1 + Math.log(w.reqclass) / Math.LN2) : "");
            $WH.ae(u, $WH.ct(g_chr_classes[(1 + Math.log(w.reqclass) / Math.LN2)]));
            $WH.ae(l, u);
            $WH.ae(j, l)
          }
        }
      },
      getVisibleText: function (b) {
        var c = Listview.funcBox.arrayText(b.skill, g_spell_skills);
        if (b.specialization) {
          c += " " + (g_skill_specializations[b.specialization])
        }
        if (b.learnedat > 0) {
          c += " " + (b.learnedat == 9999 ? "??" : b.learnedat)
        }
        return c
      },
      sortFunc: function (f, c) {
        if (f.reqclass && c.reqclass) {
          var j = $WH.strcmp(g_chr_classes[(1 + Math.log(f.reqclass) / Math.LN2)], g_chr_classes[(1 + Math.log(c.reqclass) / Math.LN2)]);
          if (j) {
            return j
          }
        }
        var e = [f.learnedat, c.learnedat];
        for (var h = 0; h < 2; ++h) {
          var k = (h == 0 ? f : c);
          if (e[h] == 9999 && k.colors != null) {
            var g = 0;
            while (k.colors[g] == 0 && g < k.colors.length) {
              g++
            }
            if (g < k.colors.length) {
              e[h] = k.colors[g]
            }
          }
        }
        var l = $WH.strcmp(e[0], e[1]);
        if (l != 0) {
          return l
        }
        if (f.colors != null && c.colors != null) {
          for (var g = 0; g < 4; ++g) {
            if (f.hasOwnProperty("colors") && c.hasOwnProperty("colors") && f.colors.hasOwnProperty(g) && c.colors.hasOwnProperty(g)) {
              l = $WH.strcmp(f.colors[g], c.colors[g])
            }
            if (l != 0) {
              return l
            }
          }
        }
        return Listview.funcBox.assocArrCmp(f.skill, c.skill, g_spell_skills)
      }
    },
    {
      id: "skillup",
      name: LANG.skillpoints,
      width: "10%",
      value: "nskillup",
      compute: function (b, c) {
        if (b.nskillup > 0) {
          return b.nskillup
        }
      },
      hidden: true
    },
    {
      id: "completed",
      name: LANG.completion,
      hidden: true,
      compute: function (h, m, j, g) {
        if ((!h.hasOwnProperty("cat")) || (!this.template._validCompletionCategory(h.cat))) {
          return
        }
        for (var k in g_user.lists) {
          var e = g_user.lists[k];
          if (!(e.id in g_completion.spell)) {
            continue
          }
          var f = ($WH.in_array(g_completion.spell[e.id], h.id) != -1);
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + e.id + "/" + e.url;
          b.className = "progress-icon " + (f ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(b, (f ? LANG.lvcompletion.identical : LANG.lvcompletion.missing) + ": " + e.character + " - " + e.realm + " " + e.region);
          $WH.ae(m, b)
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this.template._spellCompletedFlags(e.id), this.template._spellCompletedFlags(c.id))
      },
      getValue: function (e) {
        var g = 0;
        var f = g_completion.spell;
        if ((!e.hasOwnProperty("cat")) || (!this.template._validCompletionCategory(e.cat))) {
          return -1
        }
        for (var h in g_user.lists) {
          var b = g_user.lists[h];
          if (!(b.id in f)) {
            continue
          }
          if ($WH.in_array(f[b.id], e.id) != -1) {
            g++
          }
        }
        return g
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/spell=" + b.id
    },
    _spellCompletedFlags: function (f) {
      var e = 0;
      if (!g_user.lists) {
        return e
      }
      for (var b = g_user.lists.length - 1; b >= 0; b--) {
        var c = g_user.lists[b];
        if (!(c.id in g_completion.spell)) {
          continue
        }
        e = (e << 1) | ($WH.in_array(g_completion.spell[c.id], f) != -1 ? 1 : 0)
      }
      return e
    },
    _validCompletionCategory: function (b) {
      return $WH.in_array(g_completion_categories[6], b) != -1
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "spell")
      }).bind(this);
      $WH.ae(e, b)
    },
    createTooltipToggle: function (c, b) {
      if (!b) {
        return
      }
      this.addTooltipToggle(c, g_spells)
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("spell" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            var c = 0;
            for (var e in this.data) {
              if (this.data[e].hasOwnProperty("cat") && this.template._validCompletionCategory(this.data[e].cat)) {
                c++
              }
            }
            if (c > (this.data.length * 0.1)) {
              this.visibility.push(parseInt(b))
            }
          }
        }
      }
    }
  },
  threat: {
    sort: [1, 3],
    mode: 0,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (c, j, g) {
        var e = $WH.ce("td");
        e.style.width = "1px";
        e.style.paddingRight = "0";
        e.style.borderRight = "none";
        var f = Icon.create(c.icon, (this.iconSize == null ? 0 : this.iconSize), null, this.getItemLink(c));
        f.className += " garrison-ability";
        $WH.ae(e, f);
        $WH.ae(g, e);
        j.style.borderLeft = "none";
        var h = $WH.ce("div");
        $WH.ae(j, h);
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        $WH.ae(h, b)
      },
      getVisibleText: function (b) {
        return b.name
      }
    },
    {
      id: "description",
      name: LANG.description,
      type: "text",
      align: "left",
      compute: function (b, c) {
        c.innerHTML = b.description
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      compute: function (c, e) {
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/threats=" + c.category;
        $WH.st(b, g_threat_categories[c.category]);
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_threat_categories[b.category]
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(g_threat_categories[e.category], g_threat_categories[c.category])
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/threat=" + b.id
    }
  },
  twitchstream: {
    sort: [-2, 1],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      compute: function (h, j, g) {
        var c = $WH.ce("td");
        c.style.width = "1px";
        c.style.paddingRight = "0";
        c.style.borderRight = "none";
        $WH.ae(g, c);
        if (("logo" in h.channel) && (h.channel.logo)) {
          var f = Icon.create(h.channel.logo, 1, null, this.getItemLink(h));
          f.getElementsByTagName("ins")[0].style.backgroundSize = "36px 36px";
          $WH.ae(c, f)
        } else {
          $WH.ae(c, Icon.create("inv_misc_questionmark", 1, null, this.getItemLink(h)))
        }
        j.style.borderLeft = "none";
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(h);
        var e = $WH.ce("span");
        $WH.st(e, h.channel.display_name);
        $WH.ae(b, e);
        $WH.ae(j, b);
        if (h.channel.status) {
          $WH.ae(j, $WH.ce("br"));
          var e = $WH.ce("span");
          e.className = "small q0";
          $WH.st(e, h.channel.status);
          $WH.ae(j, e)
        }
      },
      getVisibleText: function (b) {
        return b.channel.display_name
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.channel.display_name, c.channel.display_name)
      }
    },
    {
      id: "viewers",
      name: "Viewers",
      type: "number",
      value: "viewers",
      compute: function (c, e, b) {
        $WH.st(e, GetN5(c.viewers))
      }
    }],
    getItemLink: function (b) {
      return "/streams#" + b.channel.name
    }
  },
  zone: {
    sort: [2, 4],
    nItemsPerPage: -1,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (c, f) {
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        if (c.expansion) {
          var e = $WH.ce("span");
          e.className = g_GetExpansionClassName(c.expansion);
          $WH.ae(e, b);
          $WH.ae(f, e)
        } else {
          $WH.ae(f, b)
        }
      },
      getVisibleText: function (b) {
        var c = b.name + Listview.funcBox.getExpansionText(b);
        if (b.instance == 5 || b.instance == 8) {
          c += " heroic"
        }
        return c
      }
    },
    {
      id: "level",
      name: LANG.level,
      type: "range",
      width: "10%",
      getMinValue: function (b) {
        return b.minlevel
      },
      getMaxValue: function (b) {
        return b.maxlevel
      },
      compute: function (b, c) {
        if (b.minlevel > 0 && b.maxlevel > 0) {
          if (b.minlevel != b.maxlevel) {
            return b.minlevel + LANG.hyphen + b.maxlevel
          } else {
            return b.minlevel
          }
        }
      },
      sortFunc: function (e, c, f) {
        if (f > 0) {
          return $WH.strcmp(c.minlevel, e.minlevel) || $WH.strcmp(c.maxlevel, e.maxlevel)
        } else {
          return $WH.strcmp(c.maxlevel, e.maxlevel) || $WH.strcmp(c.minlevel, e.minlevel)
        }
      }
    },
    {
      id: "players",
      name: LANG.players,
      type: "text",
      hidden: true,
      compute: function (b, f) {
        if (b.instance > 0) {
          var c = $WH.ce("span");
          var e = Listview.templates.zone.getInstancePlayerText(b);
          if (e.indexOf("<br>") != -1) {
            c.className = "small"
          }
          c.innerHTML = e;
          $WH.ae(f, c)
        }
      },
      getVisibleText: function (b) {
        if (b.instance > 0) {
          return Listview.templates.zone.getInstancePlayerText(b)
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(Listview.templates.zone.getInstancePlayerText(e), Listview.templates.zone.getInstancePlayerText(c))
      }
    },
    {
      id: "territory",
      name: LANG.territory,
      type: "text",
      width: "13%",
      compute: function (b, e) {
        var c = $WH.ce("span");
        switch (b.territory) {
        case 0:
          c.className = "icon-alliance";
          break;
        case 1:
          c.className = "icon-horde";
          break;
        case 4:
          c.className = "icon-ffa";
          break
        }
        $WH.ae(c, $WH.ct(g_zone_territories[b.territory]));
        $WH.ae(e, c)
      },
      getVisibleText: function (b) {
        return g_zone_territories[b.territory]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_zone_territories[e.territory], g_zone_territories[c.territory])
      }
    },
    {
      id: "instancetype",
      name: LANG.instancetype,
      type: "text",
      compute: function (b, k) {
        if (b.instance > 0) {
          var f = $WH.ce("span");
          if ((b.instance >= 1 && b.instance <= 5) || b.instance == 7 || b.instance == 8) {
            f.className = "icon-instance" + b.instance
          }
          var j = g_zone_instancetypes[b.instance];
          if ($WH.isset("g_difficulties") && $WH.isset("g_mapdifficulties") && g_mapdifficulties[b.id]) {
            for (var e in g_mapdifficulties[b.id]) {
              if (e == 8) {
                var c = $WH.ce("span");
                c.className = "icon-challenge";
                g_addTooltip(c, LANG.tooltip_challengemodeavailable);
                $WH.ae(k, c)
              } else {
                if (e == 23) {
                  var h = $WH.ce("span");
                  h.className = "icon-mythic";
                  g_addTooltip(h, LANG.tooltip_mythicmodeavailable);
                  $WH.ae(k, h)
                }
              }
            }
          }
          if (b.heroicLevel) {
            var g = $WH.ce("span");
            g.className = "icon-heroic";
            g_addTooltip(g, LANG.tooltip_heroicmodeavailable + LANG.qty.replace("$1", b.heroicLevel));
            $WH.ae(k, g)
          }
          $WH.ae(f, $WH.ct(j));
          $WH.ae(k, f)
        }
      },
      getVisibleText: function (b) {
        if (b.instance > 0) {
          var e = g_zone_instancetypes[b.instance];
          if (b.nplayers && ((b.instance != 2 && b.instance != 5) || b.nplayers > 5)) {
            if (b.instance == 4) {
              e += " " + $WH.sprintf(LANG.lvzone_xvx, b.nplayers, b.nplayers)
            } else {
              e += " " + $WH.sprintf(LANG.lvzone_xman, b.nplayers)
            }
          }
          if ($WH.isset("g_difficulties") && $WH.isset("g_mapdifficulties") && g_mapdifficulties[b.id]) {
            for (var c in g_mapdifficulties[b.id]) {
              if (c == 8) {
                e += " challenge"
              }
            }
          }
          if (b.instance == 5 || b.instance == 8) {
            e += " heroic"
          }
          return e
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_zone_instancetypes[e.instance], g_zone_instancetypes[c.instance]) || $WH.strcmp(e.instance, c.instance) || $WH.strcmp(e.nplayers, c.nplayers)
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      width: "15%",
      hidden: true,
      compute: function (c, e) {
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/zones=" + c.category;
        $WH.ae(b, $WH.ct(g_zone_categories[c.category]));
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_zone_categories[b.category]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_zone_categories[e.category], g_zone_categories[c.category])
      }
    }],
    getInstancePlayerText: function (k) {
      if (k.nplayers == -2) {
        k.nplayers = "10/25"
      }
      var q = "";
      if (k.instance == 4) {
        q += $WH.sprintf(LANG.lvzone_xvx, k.nplayers, k.nplayers)
      } else {
        var c = true;
        if ($WH.isset("g_difficulties") && $WH.isset("g_mapdifficulties") && g_mapdifficulties[k.id]) {
          var m = {};
          for (var o in g_mapdifficulties[k.id]) {
            if (!parseInt(o)) {
              continue
            }
            var b = g_difficulties[o];
            var p = b.minplayers;
            if (b.minplayers != b.maxplayers) {
              p = b.minplayers + "/" + b.maxplayers
            }
            if (o == 17) {
              p = "25"
            }
            if (!m[p]) {
              m[p] = []
            }
            m[p].push(o)
          }
          var h = [];
          for (var n in m) {
            h.push([n, m[n]])
          }
          h.sort(function (r, j) {
            return j[1].length - r[1].length
          });
          if (h.length) {
            c = false;
            var l = h.length > 1;
            for (var g in h) {
              var e = "";
              for (var f in h[g][1]) {
                e += (!e ? "" : "/") + (g_difficulty_shortnames[h[g][1][f]] ? g_difficulty_shortnames[h[g][1][f]] : "")
              }
              l = e && l;
              q += (q ? "<br>" : "") + (l ? (e + ": ") : "") + $WH.sprintf(LANG.lvzone_xman, h[g] ? h[g][0] : k.nplayers)
            }
          }
        }
        if (c) {
          q += $WH.sprintf(LANG.lvzone_xman, k.nplayers)
        }
      }
      return q
    },
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/zone=" + b.id
    }
  },
  holiday: {
    sort: [2, 1],
    nItemsPerPage: -1,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (c, g, f) {
        var e = $WH.ce("td");
        e.style.width = "1px";
        e.style.paddingRight = "0";
        e.style.borderRight = "none";
        $WH.ae(e, g_holidays.createIcon(c.id, 0));
        $WH.ae(f, e);
        g.style.borderLeft = "none";
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.name));
        $WH.ae(g, b)
      },
      getVisibleText: function (b) {
        return b.name
      }
    },
    {
      id: "date",
      name: LANG.date,
      type: "text",
      width: "16%",
      allText: true,
      compute: function (c, k, g) {
        var h = $WH.g_getEventNextDates(c);
        if (h[0] && h[1]) {
          var j = g_formatDateSimple(h[0]),
              b = g_formatDateSimple(h[1]),
              f = $WH.ce("span");
          if (j != b) {
            var e = $WH.ce("span", {
              className: "nowrap"
            });
            $WH.st(e, j + LANG.hyphen.replace(/\s*$/, ""));
            $WH.st(f, " " + b);
            $WH.aef(f, e)
          } else {
            f.className = "nowrap";
            $WH.st(f, j)
          }
          $WH.ae(k, f);
          if (h[0] <= g_serverTime && h[1] >= g_serverTime) {
            g.className = "checked";
            f.className = "q2 tip";
            g_addTooltip(f, LANG.tooltip_activeholiday, "q")
          }
        }
      },
      getVisibleText: function (c) {
        var e = $WH.g_getEventNextDates(c);
        if (e[0] && e[1]) {
          var f = g_formatDateSimple(e[0]),
              b = g_formatDateSimple(e[1]);
          if (f != b) {
            return f + LANG.hyphen + b
          } else {
            return f
          }
        }
        return ""
      },
      sortFunc: function (f, c, h) {
        var e = $WH.g_getEventNextDates(f);
        var g = $WH.g_getEventNextDates(c);
        if (e[0] && g[0]) {
          return e[0] - g[0]
        }
        return 0
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      width: "16%",
      compute: function (e, f) {
        f.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
        var b = $WH.ce("a"),
            c = g_getRelativeHostPrefix() + "/events=" + e.category;
        b.href = c;
        $WH.ae(b, $WH.ct(g_holiday_categories[e.category]));
        $WH.ae(f, b)
      },
      getVisibleText: function (b) {
        return g_holiday_categories[b.category]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_holiday_categories[e.category], g_holiday_categories[c.category])
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/event=" + b.id
    }
  },
  holidaycal: {
    sort: [1],
    mode: 4,
    startOnMonth: new Date(g_serverTime.getFullYear(), 0, 1),
    nMonthsToDisplay: 12,
    rowOffset: g_serverTime.getMonth(),
    poundable: 2,
    columns: [],
    compute: function (b, f, c) {
      if (!b.events || !b.events.length) {
        return
      }
      for (var c = 0; c < b.events.length; ++c) {
        var e = g_holidays.createIcon(b.events[c].id, 1);
        e.onmouseover = Listview.funcBox.dateEventOver.bind(e, b.date, b.events[c]);
        e.onmousemove = $WH.Tooltip.cursorUpdate;
        e.onmouseout = $WH.Tooltip.hide;
        e.style.cssFloat = e.style.styleFloat = "left";
        $WH.ae(f, e)
      }
    },
    sortFunc: function (g, c) {
      var f = $WH.g_getEventNextDates(g);
      var j = $WH.g_getEventNextDates(c);
      for (var k = 0; k < 2; ++k) {
        var h = f[k],
            e = j[k];
        if (h.getFullYear() == e.getFullYear() && h.getMonth() == e.getMonth() && h.getDate() == e.getDate()) {
          return h - e
        }
      }
      return $WH.strcmp(g.name, c.name)
    }
  },
  comment: {
    sort: [-5, 4, 6, -3, 2],
    mode: 2,
    nItemsPerPage: 40,
    poundable: 2,
    columns: [{
      value: "number"
    },
    {
      value: "id"
    },
    {
      value: "rating"
    },
    {
      value: "deleted"
    },
    {
      value: "sticky"
    },
    {
      value: "outofdate"
    }],
    compute: function (g, f, c) {
      var e = $("<div></div>");
      var b = (g.__minPatch && (g.__minPatch > new Date(g.date)));
      g.locale = (this.id == "english-comments" ? "www" : "");
      e.append('<table><tr><td class="vote-column"><p class="upvote"><span class="fa fa-chevron-up"></span></p><div class="rating-container"></div><p class="downvote"><span class="fa fa-chevron-down"></span></p><p class="comment-sticky" title="' + LANG.stickycomment_tip + '">STICKY</p></td><td class="main-body"><div class="comment-header"><table><tr><td class="comment-author"></td><td class="comment-controls"></td><td class="comment-notification"></td></tr></table></div><div class="text comment-body"></div><div class="comment-replies"></div><p class="comment-replies-control" style="display: none"></p></td></tr></table>');
      g.colorClass = "comment" + (c % 2);
      e.addClass("comment").addClass(g.colorClass);
      if (g.rating < -4) {
        e.addClass("comment-lowrated")
      }
      if (g.deleted) {
        e.addClass("comment-deleted")
      }
      if (g.outofdate) {
        e.addClass("comment-outofdate")
      }
      g.container = e;
      g.voteCell = e.find(".vote-column");
      g.commentCell = e.find(".main-body");
      g.repliesCell = e.find(".comment-replies");
      g.repliesControl = e.find(".comment-replies-control");
      g.headerCell = e.find(".comment-header");
      g.commentBody = e.find(".comment-body");
      g.commentAuthor = e.find(".comment-author");
      g.commentControls = e.find(".comment-controls");
      this.template.updateVoteCell(g);
      this.template.updateCommentCell(g);
      this.template.updateStickyStatus(g);
      this.template.updateReplies(g);
      if (g.deleted || g.rating < -4) {
        g.headerCell.css("cursor", "pointer");
        g.headerCell.bind("click", function () {
          g.voteCell.toggle();
          g.repliesCell.toggle();
          g.commentBody.toggle()
        })
      }
      $(f).addClass("comment-wrapper").html(e);
      if (b) {
        $(f).hide()
      } else {
        $(f).show()
      }
    },
    updateReplies: function (f) {
      this.updateRepliesCell(f);
      this.updateRepliesControl(f);
      SetupReplies(f.container, f);
      if (!f.alreadyLoadedBefore) {
        f.alreadyLoadedBefore = true;
        var e = location.hash.match("#comments:id=([0-9]+):reply=([0-9]+)");
        if (e) {
          var c = e[1];
          var b = e[2];
          if (f.id == c) {
            this.highlightReply(f, b)
          }
        }
      }
    },
    highlightReply: function (j, e, f) {
      var h = null;
      for (var c in j.replies) {
        if (j.replies[c].id == e) {
          h = j.replies[c];
          break
        }
      }
      if (!h) {
        if (f) {
          return
        }
        $.ajax({
          type: "GET",
          url: "/comment=show-replies",
          data: {
            id: j.id
          },
          success: function (k) {
            j.replies = k;
            Listview.templates.comment.updateReplies(j);
            Listview.templates.comment.highlightReply(j, e, true)
          },
          dataType: "json"
        });
        return
      }
      var g = j.repliesCell.find(".comment-reply-row[data-replyid=" + e + "]");
      var b = "#242424";
      if (j.deleted) {
        b = "#402424"
      } else {
        if (j.outofdate) {
          b = "#322C1C"
        }
      }
      g.css("background-color", "#581111");
      setTimeout(function () {
        g.animate({
          backgroundColor: b
        }, 1500)
      }, 1500)
    },
    updateStickyStatus: function (b) {
      if (b.sticky) {
        b.voteCell.find(".comment-sticky").show()
      } else {
        b.voteCell.find(".comment-sticky").hide()
      }
    },
    updateRepliesCell: function (j) {
      var l = j.repliesCell;
      var p = $("<table></table>");
      l.html("");
      if (!j.replies.length) {
        l.append(p).hide();
        return
      }
      for (var h = 0; h < j.replies.length; ++h) {
        var e = j.replies[h];
        var s = $('<tr class="comment-reply-row"><td class="reply-controls"><p class="reply-upvote"><span class="fa fa-chevron-up"></span></p><p class="reply-rating"></p><p class="reply-downvote"><span class="fa fa-chevron-down"></span></p></td><td class="reply-text"></td></tr>');
        var r = $('<p class="comment-reply-author"></p>');
        var n = $("<a></a>");
        var g = new Date(e.creationdate);
        var m = (g_serverTime - g) / 1000;
        var o = s.find(".reply-upvote");
        var q = s.find(".reply-downvote");
        var k = (g_user.name == e.username) || (g_user.roles & U_GROUP_COMMENTS_MODERATOR) != 0;
        var b = k;
        s.attr("data-replyid", e.id);
        s.attr("data-idx", h);
        s.find(".reply-text").addClass(g_GetStaffColorFromRoles(e.roles));
        var c = $("<a></a>");
        c.text(g_formatDate(null, m, g));
        c.attr("href", "#comments:id=" + j.id + ":reply=" + e.id);
        c.attr("id", "comments:id=" + j.id + ":reply=" + e.id);
        c.addClass("when");
        n.attr("href", "/user=" + e.username);
        n.text(e.username);
        r.append(n);
        r.append(" ").append(c).append(" ").append($WH.sprintf(LANG.lvcomment_patch, g_getPatchVersion(g)));
        var f = Markup.toHtml(e.body, {
          allow: Markup.CLASS_USER,
          mode: Markup.MODE_REPLY,
          roles: 0,
          locale: j.locale
        });
        if (g_user.canUpvote && g_user.name != e.username && !e.reportedByUser) {
          f += ' <span class="reply-report title="' + LANG.reportthisreply_stc + '"><span class="fa fa-warning"></span></span>'
        }
        if (b) {
          f += ' <span class="reply-edit title="' + LANG.editthisreply_stc + '"><span class="fa fa-pencil"></span></span>'
        }
        if (k) {
          f += ' <span class="reply-delete title="' + LANG.deletethisreply_stc + '"><span class="fa fa-times"></span></span>'
        }
        s.find(".reply-text").html(r).append(f);
        s.find(".reply-rating").text(e.rating);
        if (e.votedByUser) {
          o.attr("data-hasvoted", "true")
        }
        if (g_user.canUpvote && g_user.name != e.username && !e.votedByUser && !e.downvotedByUser) {
          o.attr("data-canvote", "true")
        }
        if (e.downvotedByUser) {
          q.attr("data-hasvoted", "true")
        }
        if (g_user.canDownvote && g_user.name != e.username && !e.votedByUser && !e.downvotedByUser) {
          q.attr("data-canvote", "true")
        }
        p.append(s)
      }
      l.html(p);
      if (j.deleted || j.rating < -4) {
        j.repliesCell.hide()
      }
    },
    updateRepliesControl: function (e) {
      var b = e.repliesControl;
      b.html("").hide().unbind().attr("class", "comment-replies-control");
      var c = Math.max(e.nreplies - e.replies.length, 0);
      if ((e.deleted || e.outofdate || e.rating < -4) || (!g_user.canPostReplies && !c)) {
        return
      }
      if (g_user.canPostReplies) {
        if (!c) {
          b.text(LANG.addreply_stc).addClass("add-reply")
        } else {
          b.text($WH.sprintf(c == 1 ? LANG.addshow1morereply_stc : LANG.addshowmorereplies_format, c)).addClass("show-more-replies")
        }
      } else {
        b.text($WH.sprintf(c == 1 ? LANG.show1morereply_stc : LANG.showmorereplies_format, c)).addClass("show-more-replies")
      }
      b.addClass("btn btn-small");
      b.show()
    },
    updateCommentCell: function (b) {
      b.commentCell.find(".comment-edit").remove();
      this.updateCommentBody(b, b.commentBody);
      this.updateCommentAuthor(b, b.commentAuthor);
      this.updateCommentControls(b, b.commentControls)
    },
    updateCommentAuthor: function (g, f) {
      var c = g_users[g.user];
      var b = new Date(g.date);
      var e = (g_serverTime - b) / 1000;
      f.html("");
      f.append(LANG.lvcomment_by);
      f.append($WH.sprintf('<a href="/user=$1">$2</a>', g.user, g.user));
      f.append(g_getReputationPlusAchievementText(c.gold, c.silver, c.copper, c.reputation));
      f.append($WH.sprintf(' <a class="q0" id="comments:id=$1" href="#comments:id=$2">$3</a>', g.id, g.id, g_formatDate(null, e, b)));
      f.append($WH.sprintf(LANG.lvcomment_patch, g_getPatchVersion(b)))
    },
    updateCommentControls: function (g, j) {
      var m = [];
      var b = (g_user.roles & U_GROUP_COMMENTS_MODERATOR) != 0 || (g.user.toLowerCase() == g_user.name.toLowerCase() && !g_user.commentban);
      var h = (g_user.roles & U_GROUP_COMMENTS_MODERATOR) != 0 || (g.user.toLowerCase() == g_user.name.toLowerCase() && !g_user.commentban);
      var k = (g_user.roles & U_GROUP_COMMENTS_MODERATOR) != 0;
      if (b) {
        if (!g.outofdate && !g.deleted) {
          m.push({
            extraClass: "fa fa-pencil",
            name: LANG.lvcomment_edit,
            func: Listview.funcBox.coEdit.bind(this, g, 0, false)
          })
        }
      }
      if (h && !g.deleted) {
        m.push({
          extraClass: "fa fa-times delete",
          name: LANG.lvcomment_delete,
          func: Listview.funcBox.coDelete.bind(this, g)
        })
      }
      if (k && g.deleted) {
        m.push({
          extraClass: "fa fa-times undelete",
          name: LANG.lvcomment_undelete,
          func: Listview.funcBox.coUndelete.bind(this, g)
        })
      }
      if (k && g.outofdate) {
        m.push({
          extraClass: "fa fa-clock-o uptodate",
          name: LANG.lvcomment_uptodate,
          func: Listview.funcBox.coFlagUpOfDate.bind(this, g)
        })
      }
      if (g_user.id != 0 && !g.outofdate && !g.deleted) {
        m.push({
          extraClass: "fa fa-clock-o outofdate",
          name: LANG.lvcomment_outofdate,
          func: Listview.funcBox.coFlagOutOfDate.bind(this, g)
        })
      }
      if (k && !g.sticky && !g.outofdate && !g.deleted) {
        m.push({
          extraClass: "fa fa-thumb-tack sticky",
          name: "Sticky",
          func: this.sticky.bind(this, g)
        })
      }
      if (k && g.sticky && !g.outofdate && !g.deleted) {
        m.push({
          extraClass: "fa fa-thumb-tack unsticky",
          name: "Unsticky",
          func: this.sticky.bind(this, g)
        })
      }
      if (!g.outofdate && !g.deleted) {
        m.push({
          extraClass: "fa fa-warning",
          tooltip: LANG.report_tooltip,
          name: LANG.lvcomment_report,
          func: ContactTool.show.bind(ContactTool, {
            mode: 1,
            comment: g
          })
        })
      }
      j.html("");
      for (var l in m) {
        var f = m[l];
        var e = $("<a></a>");
        var c = $("<span></span>");
        e.click(f.func);
        if (f.extraClass) {
          e.addClass(f.extraClass)
        }
        if (f.tooltip) {
          $WH.Tooltip.simple(e.get(0), f.tooltip, "q2")
        } else {
          if (f.name) {
            $WH.Tooltip.simple(e.get(0), f.name, "q2")
          }
        }
        c.append(e);
        j.append(c)
      }
    },
    updateCommentBody: function (f, c) {
      var e = Markup.rolesToClass(f.roles);
      c.removeClass("comment-green");
      c.addClass(Listview.funcBox.coGetColor(f));
      c.html(Markup.toHtml(f.body, {
        allow: e,
        mode: Markup.MODE_COMMENT,
        roles: f.roles,
        locale: f.locale
      }));
      if (f.response) {
        var b = $("<div></div>");
        b.addClass("text comment-body");
        b.html(Markup.toHtml("[div][/div][wowheadresponse=" + f.responseuser + " roles=" + f.responseroles + "]" + f.response + "[/wowheadresponse]", {
          allow: Markup.CLASS_STAFF,
          roles: f.responseroles,
          uid: "resp-" + f.id
        }));
        c.append(b)
      }
      if (f.lastEdit) {
        this.addEditedByOrDeletedByText(c, LANG.lvcomment_lastedit, f.lastEdit[2], f.lastEdit[0])
      }
      if (f.deletedInfo) {
        this.addEditedByOrDeletedByText(c, LANG.lvcomment_deletedby, f.deletedInfo[1], f.deletedInfo[0])
      }
      f.divBody = c[0];
      if (f.deleted || f.rating < -4) {
        c.hide()
      }
    },
    addEditedByOrDeletedByText: function (h, j, g, b) {
      var e = new Date(b);
      var f = (g_serverTime - e) / 1000;
      var c = $("<div></div>");
      c.addClass("comment-lastedit");
      c.html($WH.sprintf("$1 <a></a> $2 $3", j, g_formatDate(null, f, e), $WH.sprintf(LANG.lvcomment_patch, g_getPatchVersion(e))));
      c.find("a").text(g).attr("href", "/user=" + g);
      h.append(c)
    },
    updateVoteCell: function (h) {
      var f = h.voteCell.find(".upvote");
      var e = h.voteCell.find(".downvote");
      var g = h.voteCell.find(".rating-container");
      var c = $('<p class="rating"></p>');
      var b = this;
      g.html(c);
      if (h.userRating > 0) {
        f.attr("data-hasvoted", "true").attr("title", LANG.upvoted_tip)
      } else {
        f.attr("data-hasvoted", "false").attr("title", LANG.upvote_tip)
      }
      if (h.userRating < 0) {
        e.attr("data-hasvoted", "true").attr("title", LANG.downvoted_tip)
      } else {
        e.attr("data-hasvoted", "false").attr("title", LANG.downvote_tip)
      }
      c.unbind();
      f.unbind();
      e.unbind();
      c.text(h.rating);
      c.click(function () {
        b.showVoteBreakdown(h, g)
      });
      f.click(function () {
        b.vote(h, 1)
      });
      e.click(function () {
        b.vote(h, -1)
      });
      if (h.deleted || h.rating < -4) {
        h.voteCell.hide()
      }
    },
    vote: function (g, c) {
      if (!c) {
        return
      }
      if (!g_user.id) {
        this.voteError(g, LANG.votelogin_tip);
        return
      }
      if (g.deleted) {
        this.voteError(g, LANG.votedeleted_tip);
        return
      }
      if (g_user.name == g.user) {
        this.voteError(g, LANG.voteself_tip);
        return
      }
      if (!g_user.canUpvote && c > 0) {
        this.voteError(g, $WH.sprintf(LANG.upvotenorep_tip, g_user.upvoteRep));
        return
      }
      if (!g_user.canDownvote && c < 0) {
        this.voteError(g, $WH.sprintf(LANG.downvotenorep_tip, g_user.downvoteRep));
        return
      }
      if (c > 0) {
        c = g_user.superCommentVotes ? 2 : 1
      } else {
        if (c < 0) {
          c = g_user.superCommentVotes ? -2 : -1
        } else {
          return
        }
      }
      var f = g.rating;
      var e = g.userRating;
      var b = this;
      if ((g.userRating > 0 && c > 0) || (g.userRating < 0 && c < 0)) {
        g.rating -= g.userRating;
        g.userRating = 0
      } else {
        g.rating -= g.userRating;
        g.rating += c;
        g.userRating = c
      }
      this.updateVoteCell(g);
      $.get("/comment=vote", {
        id: g.id,
        rating: c
      }, function (h) {
        if (h.error) {
          g.rating = f;
          g.userRating = e;
          b.updateVoteCell(g)
        }
        if (h.message) {
          b.voteError(g, h.message)
        }
      }, "json")
    },
    voteError: function (c, b) {
      MessageBox(c.voteCell, b)
    },
    showVoteBreakdown: function (c, b) {
      b.find("p").html('<img src="' + g_staticUrl + '/images/icons/ajax.gif" />');
      $.get("/comment=rating&id=" + c.id, null, function (e) {
        if (e.success) {
          b.html($WH.sprintf('<p class="rating-up">$1</p><div class="rating-separator"></div><p class="rating-down">$2</p>', (e.up ? ("+" + e.up) : 0), -e.down))
        } else {
          MessageBox(b, "An error has occurred while fetching vote counts. Try refreshing the page.")
        }
      }, "json")
    },
    sticky: function (c) {
      var b = c.commentCell.find(".comment-notification");
      c.sticky = !c.sticky;
      this.updateStickyStatus(c);
      this.updateCommentCell(c);
      if (c.sticky) {
        MessageBox(b, "This comment is now sticky.")
      } else {
        MessageBox(b, "This comment is no longer sticky.")
      }
      $.post("/comment=sticky", {
        id: c.id,
        sticky: c.sticky ? 1 : 0
      })
    },
    createNote: function (b) {
      var g = $WH.ce("small");
      if (!g_user.commentban) {
        var n = $WH.ce("a");
        if (g_user.id > 0) {
          n.href = "javascript:;";
          n.onclick = co_addYourComment
        } else {
          n.href = "/account=signin"
        }
        $WH.ae(n, $WH.ct(LANG.lvcomment_add));
        $WH.ae(g, n);
        var e = $WH.ce("span");
        e.style.padding = "0 5px";
        e.style.color = "white";
        $WH.ae(e, $WH.ct("|"));
        $WH.ae(g, e)
      }
      $WH.ae(g, $WH.ct(LANG.sort + ": "));
      var o = $WH.ce("a");
      o.href = "javascript:;";
      $WH.ae(o, $WH.ct(LANG.newestfirst_stc));
      o.onclick = Listview.funcBox.coSortNewestFirst.bind(this, o);
      $WH.ae(g, o);
      $WH.ae(g, $WH.ct(LANG.comma));
      var q = $WH.ce("a");
      q.href = "javascript:;";
      $WH.ae(q, $WH.ct(LANG.oldestfirst_stc));
      q.onclick = Listview.funcBox.coSortOldestFirst.bind(this, q);
      $WH.ae(g, q);
      $WH.ae(g, $WH.ct(LANG.comma));
      var r = $WH.ce("a");
      r.href = "javascript:;";
      $WH.ae(r, $WH.ct(LANG.highestrated_stc));
      r.onclick = Listview.funcBox.coSortHighestRatedFirst.bind(this, r);
      $WH.ae(g, r);
      var h = $WH.gc()["comments_sort"];
      switch (h) {
      case "1":
        o.onclick();
        break;
      case "2":
        q.onclick();
        break;
      default:
      case "3":
        r.onclick();
        break
      }
      var e = $WH.ce("span");
      e.style.padding = "0 5px";
      e.style.color = "white";
      $WH.ae(e, $WH.ct("|"));
      $WH.ae(g, e);
      var s = $WH.ce("select");
      var f = $WH.ce("option");
      f.value = 0;
      f.selected = "selected";
      $WH.ae(s, f);
      var m = {};
      for (var k = 0; k < this.data.length; ++k) {
        var j = g_getPatchVersionObject(new Date(this.data[k].date).getTime());
        if (j) {
          m[j.build] = j
        }
      }
      var l = [];
      for (var c in m) {
        l.push(c)
      }
      l.sort(function (t, p) {
        return p - t
      });
      for (var c = 0; c < l.length; ++c) {
        var f = $WH.ce("option");
        f.value = m[l[c]].timestamp;
        $WH.ae(f, $WH.ct(m[l[c]].version));
        $WH.ae(s, f)
      }
      s.onchange = Listview.funcBox.coFilterByPatchVersion.bind(this, s);
      $WH.ae(g, $WH.ct(LANG.lvcomment_patchfilter));
      $WH.ae(g, s);
      $WH.ae(b, g);
      if (this.tabClick) {
        $("a, select", g).click(this.tabClick)
      }
    },
    onNoData: function (e) {
      var b = "<b>" + LANG.lvnodata_co1 + '</b><div class="pad2"></div>';
      if (g_user.id > 0) {
        var c = LANG.lvnodata_co2;
        c = c.replace("<a>", '<a href="javascript:;" onclick="co_addYourComment()" onmousedown="return false">');
        b += c
      } else {
        var c = LANG.lvnodata_co3;
        c = c.replace("<a>", '<a href="/account=signin">');
        c = c.replace("<a>", '<a href="/account=signup">');
        b += c
      }
      e.style.padding = "1.5em 0";
      e.innerHTML = b
    },
    onBeforeCreate: function () {
      if (location.hash && location.hash.match(/:id=([0-9]+)/) != null) {
        var b = $WH.gc()["comments_sort"];
        switch (b) {
        case "1":
          this.setSort([-5, 4, -1, -2], false, false);
          break;
        case "2":
          this.setSort([-5, 4, 1, 2], false, false);
          break;
        default:
        case "3":
          this.setSort([-5, 4, -3, 2], false, false);
          break
        }
        var c = $WH.in_array(this.data, parseInt(RegExp.$1), function (e) {
          return e.id
        });
        this.rowOffset = this.getRowOffset(c);
        return this.data[c]
      }
    },
    onAfterCreate: function (b) {
      if (b != null) {
        var c = b.__div;
        this.tabs.__st = c
      }
    }
  },
  commentpreview: {
    sort: [4],
    nItemsPerPage: 75,
    columns: [{
      id: "subject",
      name: LANG.subject,
      align: "left",
      value: "subject",
      compute: function (f, e) {
        var b = $WH.ce("a");
        b.className = "listview-cleartext" + (typeof f.quality == "number" ? " q" + f.quality : "");
        b.href = this.getItemLink(f);
        if (f.icon) {
          b.className += " icontiny tinyspecial";
          b.style.backgroundImage = 'url("' + g_staticUrl + "/images/wow/icons/tiny/" + f.icon.toLowerCase() + '.gif")'
        }
        $WH.ae(b, $WH.ct(f.subject));
        $WH.ae(e, b);
        if (LANG.types[f.type]) {
          var c = $WH.ce("div");
          c.className = "small";
          $WH.ae(c, $WH.ct(LANG.types[f.type][0]));
          $WH.ae(e, c)
        }
      }
    },
    {
      id: "preview",
      name: LANG.preview,
      align: "left",
      width: "50%",
      value: "preview",
      compute: function (h, g, c) {
        var e = $WH.ce("div");
        e.className = "crop";
        if (h.rating >= 10) {
          e.className += " comment-green"
        }
        $WH.ae(e, $WH.ct(Markup.removeTags(h.preview, {
          mode: Markup.MODE_ARTICLE
        })));
        $WH.ae(g, e);
        e = $WH.ce("div");
        e.className = "small3";
        if (h.rating) {
          $WH.ae(e, $WH.ct(LANG.lvcomment_rating + (h.rating > 0 ? "+" : "") + h.rating))
        }
        var b = $WH.ce("span"),
            f = "";
        b.className = "q10";
        if (h.deleted) {
          f = LANG.lvcomment_deleted
        }
        $WH.ae(b, $WH.ct(f));
        $WH.ae(e, b);
        c.__status = b;
        $WH.ae(g, e)
      }
    },
    {
      id: "author",
      name: LANG.author,
      value: "user",
      compute: function (e, c) {
        c.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
        var b = $WH.ce("a");
        b.href = "/user=" + e.user;
        $WH.ae(b, $WH.ct(e.user));
        $WH.ae(c, b)
      }
    },
    {
      id: "posted",
      name: LANG.posted,
      width: "16%",
      value: "elapsed",
      compute: function (g, f) {
        var b = new Date(g.date),
            e = (g_serverTime - b) / 1000;
        var c = $WH.ce("span");
        g_formatDate(c, e, b, 0, 1);
        $WH.ae(f, c)
      }
    }],
    getItemLink: function (e) {
      var b = (e.type in g_types_host) ? g_types_host[e.type] : "wowhead.com";
      var c = g_getCommentDomain(e.domain);
      if ((c == "") && e.hasOwnProperty("locale") && (e.locale != Locale.getId())) {
        c = "//" + Locale.locales[e.locale].domain.replace(/wowhead\.com$/, b)
      }
      if (c == "") {
        c = g_getRelativeHostPrefix(b)
      }
      if (e.url) {
        return c + "/" + e.url
      }
      if (!g_types[e.type]) {
        return c + "/go-to-comment&id=" + e.id
      }
      return c + "/" + g_types[e.type] + "=" + e.typeId + (e.id != null ? "#comments:id=" + e.id : "")
    }
  },
  replypreview: {
    sort: [4],
    nItemsPerPage: 75,
    columns: [{
      id: "subject",
      name: LANG.subject,
      align: "left",
      value: "subject",
      compute: function (c, f) {
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        $WH.ae(b, $WH.ct(c.subject));
        $WH.ae(f, b);
        if (LANG.types[c.type]) {
          var e = $WH.ce("div");
          e.className = "small";
          $WH.ae(e, $WH.ct(LANG.types[c.type][0]));
          $WH.ae(f, e)
        }
      }
    },
    {
      id: "preview",
      name: LANG.preview,
      align: "left",
      width: "50%",
      value: "preview",
      compute: function (c, h, e) {
        var f = $WH.ce("div");
        f.className = "crop";
        if (c.rating >= 10) {
          f.className += " comment-green"
        }
        $WH.ae(f, $WH.ct(Markup.removeTags(c.preview, {
          mode: Markup.MODE_ARTICLE
        })));
        $WH.ae(h, f);
        f = $WH.ce("div");
        f.className = "small3";
        if (c.rating) {
          $WH.ae(f, $WH.ct(LANG.lvcomment_rating + (c.rating > 0 ? "+" : "") + c.rating))
        }
        var b = $WH.ce("span"),
            g = "";
        if (c.deleted) {
          g = LANG.lvcomment_deleted
        }
        b.className = "q10";
        $WH.ae(b, $WH.ct(g));
        $WH.ae(f, b);
        e.__status = b;
        $WH.ae(h, f)
      }
    },
    {
      id: "author",
      name: LANG.author,
      value: "user",
      compute: function (c, e) {
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
        var b = $WH.ce("a");
        b.href = "/user=" + c.user;
        $WH.ae(b, $WH.ct(c.user));
        $WH.ae(e, b)
      }
    },
    {
      id: "posted",
      name: LANG.posted,
      width: "16%",
      value: "elapsed",
      compute: function (e, g) {
        var b = new Date(e.date),
            f = (g_serverTime - b) / 1000;
        var c = $WH.ce("span");
        g_formatDate(c, f, b, 0, 1);
        $WH.ae(g, c)
      }
    }],
    getItemLink: function (b) {
      var c = (b.type in g_types_host) ? g_types_host[b.type] : "wowhead.com";
      var e = g_getCommentDomain(b.domain);
      if ((e == "") && b.hasOwnProperty("locale") && (b.locale != Locale.getId())) {
        e = "//" + Locale.locales[b.locale].domain.replace(/wowhead\.com$/, c)
      }
      if (e == "") {
        e = g_getRelativeHostPrefix(c)
      }
      if (b.url) {
        return e + "/" + b.url
      }
      if (!g_types[b.type]) {
        return e + "/go-to-reply&id=" + b.id
      }
      return $WH.sprintf("$1/$2=$3#comments:id=$4:reply=$5", e, g_types[b.type], b.typeId, b.commentid, b.id)
    }
  },
  screenshot: {
    sort: [],
    mode: 3,
    nItemsPerPage: 40,
    nItemsPerRow: 4,
    poundable: 2,
    columns: [],
    compute: function (c, g, k) {
      var r;
      g.className = "screenshot-cell";
      g.vAlign = "bottom";
      var q = $WH.ce("a");
      q.href = "#" + this.id + ":id=" + c.id;
      q.onclick = $WH.rf2;
      var j = $WH.ce("img"),
          f = Math.min(150 / c.width, 150 / c.height);
      j.src = g_staticUrl + "/uploads/screenshots/thumb/" + c.id + ".jpg";
      $WH.ae(q, j);
      $WH.ae(g, q);
      var m = $WH.ce("div");
      m.className = "screenshot-cell-user";
      var t = (c.user != null && c.user.length);
      if (t) {
        q = $WH.ce("a");
        q.href = "/user=" + c.user;
        $WH.ae(q, $WH.ct(c.user));
        $WH.ae(m, $WH.ct(LANG.lvscreenshot_from));
        $WH.ae(m, q);
        $WH.ae(m, $WH.ct(" "))
      }
      if (c.date) {
        var l = new Date(c.date);
        var u = $WH.ce("span");
        if (t) {
          g_formatDate(u, (g_serverTime - l) / 1000, l)
        } else {
          g_formatDate(u, (g_serverTime - l) / 1000, l, 0, 1)
        }
        $WH.ae(m, u);
        $WH.ae(m, $WH.ct(" " + LANG.dash + " "));
        var q = $WH.ce("a");
        q.href = "javascript:;";
        if (!$WH.isset("g_thottbot") || !g_thottbot) {
          q.className = "icon-report"
        }
        if ((typeof this.deletefunction != "function") || (!this.deletefunction)) {
          q.onclick = ContactTool.show.bind(ContactTool, {
            mode: 3,
            screenshot: c
          });
          g_addTooltip(q, LANG.report_tooltip, "q2");
          $WH.ae(q, $WH.ct(LANG.report))
        } else {
          $WH.aE(q, "click", (function (s, v) {
            return function () {
              s(v)
            }
          })(this.deletefunction, c));
          $WH.ae(q, $WH.ct("Delete"))
        }
        $WH.ae(m, q)
      }
      $WH.ae(g, m);
      m = $WH.ce("div");
      m.style.position = "relative";
      m.style.height = "1em";
      if (Locale.getId() != LOCALE_ENUS && c.caption) {
        c.caption = ""
      }
      var e = (c.caption != null && c.caption.length);
      var h = (c.subject != null && c.subject.length);
      if (e || h) {
        var b = $WH.ce("div");
        b.className = "screenshot-caption";
        if (h) {
          var p = $WH.ce("small");
          $WH.ae(p, $WH.ct(LANG.types[c.type][0] + LANG.colon));
          var o = $WH.ce("a");
          if (c.hasOwnProperty("subjectQuality")) {
            o.className = "q" + c.subjectQuality
          }
          if (c.hasOwnProperty("subjectRel")) {
            o.rel = c.subjectRel
          }
          $WH.ae(o, $WH.ct(c.subject));
          o.href = g_getCommentDomain(c.domain) + "/" + g_types[c.type] + "=" + c.typeId;
          $WH.ae(p, o);
          $WH.ae(b, p);
          if (e && c.caption.length) {
            $WH.ae(p, $WH.ct(" (...)"))
          }
          $WH.ae(p, $WH.ce("br"))
        }
        if (e) {
          $WH.aE(g, "mouseover", Listview.funcBox.ssCellOver.bind(b));
          $WH.aE(g, "mouseout", Listview.funcBox.ssCellOut.bind(b));
          var n = $WH.ce("span");
          n.innerHTML = Markup.toHtml(c.caption, {
            mode: Markup.MODE_SIGNATURE
          });
          $WH.ae(b, n)
        }
        $WH.ae(m, b)
      }
      $WH.aE(g, "click", Listview.funcBox.ssCellClick.bind(this, k));
      $WH.ae(g, m)
    },
    createNote: function (e) {
      if (typeof g_pageInfo == "object" && g_pageInfo.type > 0 && g_pageInfo.type != 150) {
        var c = $WH.ce("small");
        var b = $WH.ce("a");
        if (g_user.id > 0) {
          b.href = "javascript:;";
          b.onclick = ss_submitAScreenshot
        } else {
          b.href = "/account=signin"
        }
        $WH.ae(b, $WH.ct(LANG.lvscreenshot_submit));
        $WH.ae(c, b);
        $WH.ae(e, c)
      }
    },
    onNoData: function (e) {
      if (typeof g_pageInfo == "object" && g_pageInfo.type > 0) {
        var b = "<b>" + LANG.lvnodata_ss1 + '</b><div class="pad2"></div>';
        if (g_user.id > 0) {
          var c = LANG.lvnodata_ss2;
          c = c.replace("<a>", '<a href="javascript:;" onclick="ss_submitAScreenshot()" onmousedown="return false">');
          b += c
        } else {
          var c = LANG.lvnodata_ss3;
          c = c.replace("<a>", '<a href="/account=signin">');
          c = c.replace("<a>", '<a href="/account=signup">');
          b += c
        }
        e.style.padding = "1.5em 0";
        e.innerHTML = b
      } else {
        return -1
      }
    },
    onBeforeCreate: function () {
      if (location.hash && location.hash.match(/:id=([0-9]+)/) != null) {
        var b = $WH.in_array(this.data, parseInt(RegExp.$1), function (c) {
          return c.id
        });
        this.rowOffset = this.getRowOffset(b);
        return b
      }
    },
    onAfterCreate: function (b) {
      if (b != null) {
        setTimeout((function () {
          ScreenshotViewer.show({
            screenshots: this.data,
            pos: b
          })
        }).bind(this), 1)
      }
    }
  },
  transmogsetgallery: {
    sort: [1],
    mode: 3,
    nItemsPerPage: 40,
    nItemsPerRow: 4,
    poundable: 1,
    sortOptions: [{
      id: "name",
      name: LANG.name,
      type: "text",
      value: "name",
      sortFunc: function (f, e) {
        var c = (8 - parseInt(f.name.charAt(0)));
        var g = (8 - parseInt(e.name.charAt(0)));
        if (c == 4) {
          c = 3
        }
        if (g == 4) {
          g = 3
        }
        if (c != g) {
          return $WH.strcmp(g, c)
        }
        return $WH.strcmp(f.name.substring(1), e.name.substring(1))
      }
    },
    {
      id: "level",
      name: LANG.tooltip_reqlevel,
      type: "range",
      sortFunc: function (e, c) {
        return $WH.strcmp(e.maxlevel, c.maxlevel)
      }
    },
    {
      id: "pieces",
      name: LANG.pieces,
      getValue: function (b) {
        return b.pieces.length
      },
      sortFunc: function (e, c) {
        var g = (e.pieces != null ? e.pieces.length : 0);
        var f = (c.pieces != null ? c.pieces.length : 0);
        return $WH.strcmp(g, f)
      }
    },
    {
      id: "armortype",
      name: LANG.type,
      type: "text",
      sortFunc: function (e, c) {
        return $WH.strcmp(e.armorType, c.armorType)
      }
    },
    {
      id: "style",
      name: LANG.style,
      getValue: function (b) {
        return g_transmog_notes_to_styles[b._note]
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(g_transmog_notes_to_styles[e._note], g_transmog_notes_to_styles[c._note])
      }
    }],
    columns: [],
    compute: function (l, e, g) {
      e.className = "screenshot-cell";
      e.vAlign = "bottom";
      var k = $WH.ce("a");
      k.href = g_getRelativeHostPrefix() + "/transmog-set=" + l.id;
      var m = ts_GetPreferredRace();
      var f = $WH.ce("img");
      f.src = g_staticUrl + "/modelviewer/transmog/" + m.race + "/" + (m.gender - 1) + "/" + l.id + ".png";
      f.style.width = "150px";
      f.style.height = "254px";
      $WH.ae(k, f);
      $WH.ae(e, k);
      if (true) {
        var h = $WH.ce("div");
        h.className = "screenshot-caption-wrapper";
        h.style.position = "relative";
        h.style.height = "1em";
        var b = $WH.ce("div");
        b.className = "screenshot-caption";
        $(b).click(function () {
          location.href = g_getRelativeHostPrefix() + "/transmog-set=" + l.id
        });
        $WH.aE(e, "mouseover", Listview.funcBox.ssCellOver.bind(b));
        $WH.aE(e, "mouseout", Listview.funcBox.ssCellOut.bind(b));
        var j = $WH.ce("span");
        var c = $WH.sprintf("[color=q$1]$2[/color]", 8 - parseInt(l.name.charAt(0)), l.name.substring(1));
        j.innerHTML = Markup.toHtml(c, {
          mode: Markup.MODE_ARTICLE
        });
        $WH.ae(b, j);
        $WH.ae(h, b);
        $WH.ae(e, h)
      }
    },
    sortFunc: function (f, e, g) {
      var c = (8 - parseInt(f.name.charAt(0)));
      var h = (8 - parseInt(e.name.charAt(0)));
      if (c == 4) {
        c = 3
      }
      if (h == 4) {
        h = 3
      }
      if (c != h) {
        return $WH.strcmp(h, c)
      }
      return $WH.strcmp(f.name.substring(1), e.name.substring(1))
    }
  },
  video: {
    sort: [],
    mode: 3,
    nItemsPerPage: 40,
    nItemsPerRow: 4,
    poundable: 2,
    columns: [],
    compute: function (e, f, j) {
      var q, k = new Date(e.date),
          r = (g_serverTime - k) / 1000;
      f.className = "screenshot-cell";
      f.vAlign = "bottom";
      var p = $WH.ce("a");
      p.href = "#videos:id=" + e.id;
      p.onclick = $WH.rf2;
      var h = $WH.ce("img");
      h.src = $WH.sprintf(vi_thumbnails[e.videoType], e.videoId);
      $WH.ae(p, h);
      $WH.ae(f, p);
      var l = $WH.ce("div");
      l.className = "screenshot-cell-user";
      var t = (e.user != null && e.user.length);
      if (t) {
        p = $WH.ce("a");
        p.href = "/user=" + e.user;
        $WH.ae(p, $WH.ct(e.user));
        $WH.ae(l, $WH.ct(LANG.lvvideo_from));
        $WH.ae(l, p);
        $WH.ae(l, $WH.ct(" "))
      }
      var u = $WH.ce("span");
      if (t) {
        g_formatDate(u, r, k)
      } else {
        g_formatDate(u, r, k, 0, 1)
      }
      $WH.ae(l, u);
      $WH.ae(f, l);
      l = $WH.ce("div");
      l.style.position = "relative";
      l.style.height = "1em";
      if (Locale.getId(true) != LOCALE_ENUS && e.caption) {
        e.caption = ""
      }
      var c = (e.caption != null && e.caption.length);
      var g = (e.subject != null && e.subject.length);
      if (c || g) {
        var b = $WH.ce("div");
        b.className = "screenshot-caption";
        if (g) {
          var o = $WH.ce("small");
          $WH.ae(o, $WH.ct(LANG.types[e.type][0] + LANG.colon));
          var n = $WH.ce("a");
          $WH.ae(n, $WH.ct(e.subject));
          n.href = g_getCommentDomain(e.domain) + "/" + g_types[e.type] + "=" + e.typeId;
          $WH.ae(o, n);
          $WH.ae(b, o);
          if (c && e.caption.length) {
            $WH.ae(o, $WH.ct(" (...)"))
          }
          $WH.ae(o, $WH.ce("br"))
        }
        if (c) {
          $WH.aE(f, "mouseover", Listview.funcBox.ssCellOver.bind(b));
          $WH.aE(f, "mouseout", Listview.funcBox.ssCellOut.bind(b));
          var m = $WH.ce("span");
          m.innerHTML = Markup.toHtml(e.caption, {
            mode: Markup.MODE_SIGNATURE
          });
          $WH.ae(b, m)
        }
        $WH.ae(l, b)
      }
      $WH.aE(f, "click", Listview.funcBox.viCellClick.bind(this, j));
      $WH.ae(f, l)
    },
    createNote: function (e) {
      if (g_user && g_user.roles & (U_GROUP_ADMIN | U_GROUP_BUREAU | U_GROUP_VIDEO)) {
        if (typeof g_pageInfo == "object" && g_pageInfo.type > 0) {
          var c = $WH.ce("small");
          var b = $WH.ce("a");
          if (g_user.id > 0) {
            b.href = "javascript:;";
            b.onclick = vi_submitAVideo
          } else {
            b.href = "/account=signin"
          }
          $WH.ae(b, $WH.ct(LANG.lvvideo_suggest));
          $WH.ae(c, b);
          $WH.ae(e, c)
        }
      }
    },
    onNoData: function (e) {
      if (typeof g_pageInfo == "object" && g_pageInfo.type > 0) {
        var b = "<b>" + LANG.lvnodata_vi1 + '</b><div class="pad2"></div>';
        if (g_user.id > 0) {
          var c = LANG.lvnodata_vi2;
          c = c.replace("<a>", '<a href="javascript:;" onclick="vi_submitAVideo()" onmousedown="return false">');
          b += c
        } else {
          var c = LANG.lvnodata_vi3;
          c = c.replace("<a>", '<a href="/account=signin">');
          c = c.replace("<a>", '<a href="/account=signup">');
          b += c
        }
        e.style.padding = "1.5em 0";
        e.innerHTML = b
      } else {
        return -1
      }
    },
    onBeforeCreate: function () {
      if (location.hash && location.hash.match(/:id=([0-9]+)/) != null) {
        var b = $WH.in_array(this.data, parseInt(RegExp.$1), function (c) {
          return c.id
        });
        this.rowOffset = this.getRowOffset(b);
        return b
      }
    },
    onAfterCreate: function (b) {
      if (b != null) {
        setTimeout((function () {
          VideoViewer.show({
            videos: this.data,
            pos: b,
            displayAd: true
          })
        }).bind(this), 1)
      }
    }
  },
  pet: {
    sort: [1],
    nItemsPerPage: -1,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (b, k, g) {
        var e = $WH.ce("td");
        e.style.width = "1px";
        e.style.paddingRight = "0";
        e.style.borderRight = "none";
        $WH.ae(e, Icon.create(b.icon, 0));
        $WH.ae(g, e);
        k.style.borderLeft = "none";
        var j = $WH.ce("div");
        var c = $WH.ce("a");
        c.className = "listview-cleartext";
        c.href = this.getItemLink(b);
        $WH.ae(c, $WH.ct(b.name));
        if (b.expansion) {
          var f = $WH.ce("span");
          f.className = g_GetExpansionClassName(b.expansion);
          $WH.ae(f, c);
          $WH.ae(j, f)
        } else {
          $WH.ae(j, c)
        }
        if (b.exotic) {
          j.style.position = "relative";
          var h = $WH.ce("div");
          h.className = (($WH.isset("g_thottbot") && g_thottbot) ? "listview-name-info q" : "listview-name-info q1");
          var c = $WH.ce("a");
          c.href = g_getRelativeHostPrefix() + "/spell=53270";
          $WH.ae(c, $WH.ct(LANG.lvpet_exotic));
          $WH.ae(h, c);
          $WH.ae(j, h)
        }
        $WH.ae(k, j)
      },
      getVisibleText: function (b) {
        var c = b.name + Listview.funcBox.getExpansionText(b);
        if (b.exotic) {
          c += " " + LANG.lvpet_exotic
        }
        return c
      }
    },
    {
      id: "level",
      name: LANG.level,
      type: "range",
      getMinValue: function (b) {
        return b.minlevel
      },
      getMaxValue: function (b) {
        return b.maxlevel
      },
      compute: function (b, c) {
        if (b.minlevel > 0 && b.maxlevel > 0) {
          if (b.minlevel != b.maxlevel) {
            return b.minlevel + LANG.hyphen + b.maxlevel
          } else {
            return b.minlevel
          }
        } else {
          return -1
        }
      },
      sortFunc: function (e, c, f) {
        if (f > 0) {
          return $WH.strcmp(e.minlevel, c.minlevel) || $WH.strcmp(e.maxlevel, c.maxlevel)
        } else {
          return $WH.strcmp(e.maxlevel, c.maxlevel) || $WH.strcmp(e.minlevel, c.minlevel)
        }
      }
    },
    {
      id: "abilities",
      name: LANG.abilities,
      type: "text",
      getValue: function (c) {
        if (!c.spells) {
          return ""
        }
        if (c.spells.length > 0) {
          var f = "";
          for (var e = 0, b = c.spells.length; e < b; ++e) {
            if (c.spells[e]) {
              f += g_spells[c.spells[e]]["name_" + Locale.getName()]
            }
          }
          return f
        }
      },
      compute: function (b, c) {
        if (!b.spells) {
          return ""
        }
        if (b.spells.length > 0) {
          c.style.padding = "0";
          Listview.funcBox.createCenteredIcons(b.spells, c, "", 1)
        }
      },
      sortFunc: function (e, c) {
        if (!e.spells || !c.spells) {
          return 0
        }
        return $WH.strcmp(e.spellCount, c.spellCount) || $WH.strcmp(e.spells, c.spells)
      },
      hidden: true
    },
    {
      id: "diet",
      name: LANG.diet,
      type: "text",
      compute: function (b, g) {
        if (g) {
          g.className = "small";
          g.style.minWidth = "110px"
        }
        var c = 0,
            e = "";
        for (var f in g_pet_foods) {
          if (b.diet & f) {
            if (c++ > 0) {
              e += LANG.comma
            }
            e += g_pet_foods[f]
          }
        }
        return e
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(c.foodCount, e.foodCount) || Listview.funcBox.assocArrCmp(e.diet, c.diet, g_pet_foods)
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      compute: function (b, e) {
        if (b.type != null) {
          e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
          var c = $WH.ce("a");
          c.href = g_getRelativeHostPrefix() + "/pets=" + b.type;
          $WH.ae(c, $WH.ct(g_pet_types[b.type]));
          $WH.ae(e, c)
        }
      },
      getVisibleText: function (b) {
        if (b.type != null) {
          return g_pet_types[b.type]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_pet_types[e.type], g_pet_types[c.type])
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/pet=" + b.id
    },
    getStatPct: function (c) {
      var b = $WH.ce("span");
      if (!isNaN(c) && c > 0) {
        b.className = "q2";
        $WH.ae(b, $WH.ct("+" + c + "%"))
      } else {
        if (!isNaN(c) && c < 0) {
          b.className = "q10";
          $WH.ae(b, $WH.ct(c + "%"))
        }
      }
      return b
    }
  },
  petability: {
    sort: [1],
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (g, f, e) {
        var c = $WH.ce("td");
        c.style.width = "1px";
        c.style.padding = "3px 0 3px 12px";
        c.style.borderRight = "none";
        if (g.icon) {
          $WH.ae(c, Icon.create(g.icon, (this.iconSize == null ? 1 : this.iconSize), null, g_getRelativeHostPrefix() + "/petability=" + g.id))
        } else {
          $WH.ae(c, Icon.create("inv_misc_questionmark", (this.iconSize == null ? 1 : this.iconSize), null, g_getRelativeHostPrefix() + "/petability=" + g.id))
        }
        $WH.ae(e, c);
        f.style.borderLeft = "none";
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(g);
        $WH.ae(b, $WH.ct(g.name));
        $WH.ae(f, b)
      },
      getVisibleText: function (c) {
        var b = c.name;
        return b
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "level",
      name: LANG.level,
      value: "level",
      hidden: true
    },
    {
      id: "damage",
      name: LANG.damage,
      value: "damage"
    },
    {
      id: "healing",
      name: LANG.healing,
      value: "healing"
    },
    {
      id: "duration",
      name: LANG.duration,
      value: "duration",
      compute: function (c, b) {
        if (c.duration) {
          return $WH.sprintf(LANG.durationturns_format, c.duration)
        }
      }
    },
    {
      id: "cooldown",
      name: LANG.cooldown,
      value: "cooldown",
      compute: function (c, b) {
        if (c.cooldown) {
          return $WH.sprintf(LANG.cooldownturns_format, c.cooldown)
        }
      }
    },
    {
      id: "accuracy",
      name: LANG.accuracy,
      value: "accuracy",
      compute: function (c, b) {
        if (c.accuracy) {
          return $WH.sprintf(LANG.accuracy_format, c.accuracy)
        }
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      width: "12%",
      compute: function (f, e) {
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/petabilities=" + f.type;
        var c = f.type != -1 ? g_petability_types[f.type + 1] : "Aura";
        $WH.ae(b, $WH.ct(c));
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_petability_types[b.type + 1]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_petability_types[e.type + 1], g_petability_types[c.type + 1])
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/petability=" + b.id
    }
  },
  petspecies: {
    sort: [1],
    mode: 1,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    completionText: LANG.lvcompletion_battlepet,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      compute: function (m, e, k) {
        var h = $WH.g_validateBpet(m, m.bpet),
            g = $WH.g_calcBattlePetStats(m, h.breed, h.quality, h.level, m.elite);
        var f = $WH.ce("td");
        f.style.width = "1px";
        f.style.padding = "3px 0 3px 3px";
        f.style.borderRight = "none";
        $WH.ae(f, Icon.create(m.icon, 1, null, this.getItemLink(m)));
        $WH.ae(k, f);
        e.style.borderLeft = "none";
        if (m.elite) {
          e.className = "icon-boss-padded"
        }
        var b = $WH.ce("div");
        b.className = "expanded-pet-view-wrapper";
        var n = $WH.ce("span");
        var l = $WH.ce("a");
        l.className = "q" + h.quality + " listview-cleartext";
        l.href = this.getItemLink(m);
        if (m.name && m.name != m.npc.name) {
          $WH.ae(l, $WH.ct(m.name + " <" + m.npc.name + ">"))
        } else {
          $WH.ae(l, $WH.ct(m.npc.name))
        }
        $WH.ae(n, l);
        if (m.expansion) {
          var c = $WH.ce("span");
          c.className = g_GetExpansionClassName(m.expansion);
          $WH.ae(c, n);
          $WH.ae(b, c)
        } else {
          $WH.ae(b, n)
        }
        if (m.untameable) {
          b.style.position = "relative";
          var j = $WH.ce("div");
          j.className = "listview-name-info q10";
          $WH.ae(j, $WH.ct(LANG.lvspecies_untameable));
          $WH.aef(b, j)
        } else {
          if (m.companion) {
            b.style.position = "relative";
            var j = $WH.ce("div");
            j.className = (($WH.isset("g_thottbot") && g_thottbot) ? "listview-name-info q" : "listview-name-info q1");
            $WH.ae(j, $WH.ct(LANG.lvspecies_companion));
            $WH.aef(b, j)
          }
        }
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        var c = "";
        if (b.name && b.name != b.npc.name) {
          c += b.name + " <" + b.npc.name + ">"
        } else {
          c += b.npc.name
        }
        c += Listview.funcBox.getExpansionText(b);
        if (b.companion) {
          c += " " + LANG.lvspecies_companion
        }
        if (b.untameable) {
          c += " " + LANG.lvspecies_untameable
        }
        if (b.elite) {
          c += " " + LANG.lvspecies_elite
        }
        return c
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(e.name, c.name) || $WH.strcmp(e.npc.name, c.npc.name)
      }
    },
    {
      id: "level",
      name: LANG.level,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet);
        return b.level
      },
      compute: function (c, f) {
        var b = $WH.g_validateBpet(c, c.bpet);
        if (c.elite) {
          $WH.ae(f, $WH.ct(b.level));
          var e = $WH.ce("div");
          e.className = "small";
          e.innerHTML = LANG.lvspecies_elite;
          $WH.ae(f, e);
          return
        }
        return b.level
      },
      sortFunc: function (e, c) {
        var g = $WH.g_validateBpet(e, e.bpet);
        var f = $WH.g_validateBpet(c, c.bpet);
        return $WH.strcmp(g.level, f.level)
      }
    },
    {
      id: "health",
      name: LANG.health,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.health
      },
      compute: function (c, f) {
        if (c.companion) {
          return
        }
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.health
      },
      sortFunc: function (e, c) {
        var j = $WH.g_validateBpet(e, e.bpet);
        var h = $WH.g_validateBpet(c, c.bpet);
        var f = $WH.g_calcBattlePetStats(e, j.breed, j.quality, j.level, e.elite);
        var g = $WH.g_calcBattlePetStats(c, h.breed, h.quality, h.level, c.elite);
        return $WH.strcmp(f.health, g.health)
      }
    },
    {
      id: "power",
      name: LANG.power,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.power
      },
      compute: function (c, f) {
        if (c.companion) {
          return
        }
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.power
      },
      sortFunc: function (e, c) {
        var j = $WH.g_validateBpet(e, e.bpet);
        var h = $WH.g_validateBpet(c, c.bpet);
        var f = $WH.g_calcBattlePetStats(e, j.breed, j.quality, j.level, e.elite);
        var g = $WH.g_calcBattlePetStats(c, h.breed, h.quality, h.level, c.elite);
        return $WH.strcmp(f.power, g.power)
      }
    },
    {
      id: "speed",
      name: LANG.speed,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.speed
      },
      compute: function (c, f) {
        if (c.companion) {
          return
        }
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.speed
      },
      sortFunc: function (e, c) {
        var j = $WH.g_validateBpet(e, e.bpet);
        var h = $WH.g_validateBpet(c, c.bpet);
        var f = $WH.g_calcBattlePetStats(e, j.breed, j.quality, j.level, e.elite);
        var g = $WH.g_calcBattlePetStats(c, h.breed, h.quality, h.level, c.elite);
        return $WH.strcmp(f.speed, g.speed)
      }
    },
    {
      id: "breeds",
      name: LANG.breed,
      compute: function (k, e) {
        if (k.companion) {
          return
        }
        var g = $WH.g_validateBpet(k, k.bpet);
        var j = [];
        for (var f = 1; f <= 10; f++) {
          if (k.breeds & 1 << f - 1) {
            j.push(f + 2)
          }
        }
        if (j.length == 0) {
          return
        }
        if (j.length == 1) {
          return "#" + j[0] + (g_pet_breed_abbrev[j[0]] ? (" " + g_pet_breed_abbrev[j[0]]) : "")
        }
        var l;
        if (!(l = e.getElementsByTagName("span")[0])) {
          l = $WH.ce("span");
          l.style.borderBottom = "1px dotted";
          $WH.aE(l, "mouseover", function (m) {
            Menu.showAtCursor(this.menu, m)
          });
          $WH.aE(l, "mouseout", function (m) {
            Menu.hide()
          });
          $WH.ae(e, l)
        }
        var h = this,
            c = false;
        l.menu = [
          [, LANG.breed]
        ];
        for (var f in j) {
          var b = "#" + j[f] + (g_pet_breed_abbrev[j[f]] ? (" " + g_pet_breed_abbrev[j[f]]) : "");
          l.menu.push([j[f], b, (function (m) {
            return function () {
              if (!k.bpet) {
                k.bpet = {}
              }
              k.bpet.breed = m;
              delete k.__tr;
              h.refreshRows()
            }
          })(j[f])]);
          if (g.breed == j[f]) {
            $WH.ee(l);
            $WH.ae(l, $WH.ct(b));
            c = true
          }
        }
        if ((!c) && j[0]) {
          $WH.ee(l);
          $WH.ae(l, $WH.ct("#" + j[0] + (g_pet_breed_abbrev[j[0]] ? (" " + g_pet_breed_abbrev[j[0]]) : "")))
        }
      },
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet);
        return b.breed
      },
      sortFunc: function (e, c) {
        var g = $WH.g_validateBpet(e, e.bpet);
        var f = $WH.g_validateBpet(c, c.bpet);
        return $WH.strcmp(g.breed, f.breed)
      }
    },
    {
      id: "abilities",
      name: LANG.abilities,
      type: "text",
      compute: function (c, f) {
        f.style.padding = "0";
        if (!c.abilities) {
          return
        }
        var b = [];
        for (var e = 0; e < c.abilities.length; e++) {
          b.push(c.abilities[e])
        }
        Listview.funcBox.createCenteredIcons(b, f, "", 3)
      },
      getVisibleText: function (c) {
        var f = "";
        if (!c.abilities) {
          return f
        }
        for (var e = 0, b = c.abilities.length; e < b; ++e) {
          if (g_petabilities[c.abilities[e]]) {
            f += " " + g_petabilities[c.abilities[e]]["name_" + Locale.getName()]
          }
        }
        return f
      },
      sortFunc: function (f, c) {
        var g = f.abilities ? f.abilities.length : 0;
        var e = c.abilities ? c.abilities.length : 0;
        return $WH.strcmp(g, e)
      }
    },
    {
      id: "source",
      name: LANG.source,
      type: "text",
      compute: function (c, g) {
        $WH.nw(g);
        $WH.ae(g, $WH.ct(g_battlepet_sources[c.category]));
        var f = $WH.ce("div");
        f.className = "small2";
        if (c.category == 4 && c.npc) {
          Listview.funcBox.location(c.npc, f, 2)
        } else {
          if (c.source != null) {
            var e = (c.sourcemore ? c.sourcemore[0] : {});
            if (e.t) {
              var b = $WH.ce("a");
              if (e.q != null) {
                b.className = "q" + e.q
              } else {
                b.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1")
              }
              b.href = g_getRelativeHostPrefix() + "/" + g_types[e.t] + "=" + e.ti;
              b.style.whiteSpace = "nowrap";
              if (e.icon) {
                b.className += " icontiny tinyspecial";
                b.style.backgroundImage = 'url("' + g_staticUrl + "/images/wow/icons/tiny/" + e.icon.toLowerCase() + '.gif")'
              }
              $WH.ae(b, $WH.ct(e.n));
              $WH.ae(f, b)
            }
          }
        }
        if (!$(f).is(":empty")) {
          $WH.ae(g, f)
        }
      },
      getVisibleText: function (b) {
        var e = "";
        e += g_battlepet_sources[b.category];
        if (b.category == 4 && b.npc) {
          e += Listview.funcBox.arrayText(b.npc.location, g_zones)
        } else {
          if (b.source != null) {
            var c = (b.sourcemore ? b.sourcemore[0] : {});
            if (c.t) {
              e += " " + c.n
            }
          }
        }
        return e
      },
      sortFunc: function (e, c) {
        return $WH.strcmp(g_battlepet_sources[e.category], g_battlepet_sources[c.category])
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      compute: function (c, e) {
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/petspecies=" + c.type;
        $WH.ae(b, $WH.ct(g_petability_types[c.type]));
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_petability_types[b.type]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_petability_types[e.type], g_petability_types[c.type])
      }
    },
    {
      id: "completed",
      name: LANG.completion,
      hidden: true,
      compute: function (g, j) {
        for (var h in g_user.lists) {
          var e = g_user.lists[h];
          if (!(e.id in g_completion.npc)) {
            continue
          }
          var f = ($WH.in_array(g_completion.npc[e.id], g.npc.id) != -1);
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + e.id + "/" + e.url;
          b.className = "progress-icon " + (f ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(b, (f ? LANG.lvcompletion.identical : LANG.lvcompletion.missing) + ": " + e.character + " - " + e.realm + " " + e.region);
          $WH.ae(j, b)
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this._speciesDoneFlags(e.npc.id), this._speciesDoneFlags(c.npc.id))
      },
      getValue: function (e) {
        var g = 0;
        var f = g_completion.npc;
        for (var h in g_user.lists) {
          var b = g_user.lists[h];
          if (!(b.id in f)) {
            continue
          }
          if ($WH.in_array(f[b.id], e.npc.id) != -1) {
            g++
          }
        }
        return g
      },
      _speciesDoneFlags: function (e) {
        var f = 0;
        if (!g_user.lists) {
          return f
        }
        for (var b = g_user.lists.length - 1; b >= 0; b--) {
          var c = g_user.lists[b];
          if (!(c.id in g_completion.npc)) {
            continue
          }
          f = (f << 1) | ($WH.in_array(g_completion.npc[c.id], e) != -1 ? 1 : 0)
        }
        return f
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/npc=" + (b.npc ? b.npc.id : b.id)
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "npc")
      }).bind(this);
      $WH.ae(e, b)
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("npc" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.push(parseInt(b))
          }
        }
      }
    }
  },
  petspeciesgallery: {
    sort: [1],
    mode: 3,
    nItemsPerPage: 40,
    nItemsPerRow: 4,
    searchable: 1,
    poundable: 1,
    sortOptions: [{
      id: "name",
      name: LANG.name,
      type: "text",
      sortFunc: function (e, c) {
        return $WH.strcmp(e.name, c.name)
      }
    },
    {
      id: "level",
      name: LANG.level,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet);
        return b.level
      },
      sortFunc: function (e, c) {
        var g = $WH.g_validateBpet(e, e.bpet);
        var f = $WH.g_validateBpet(c, c.bpet);
        return $WH.strcmp(g.level, f.level)
      }
    },
    {
      id: "health",
      name: LANG.health,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.health
      },
      sortFunc: function (e, c) {
        var j = $WH.g_validateBpet(e, e.bpet);
        var h = $WH.g_validateBpet(c, c.bpet);
        var f = $WH.g_calcBattlePetStats(e, j.breed, j.quality, j.level, e.elite);
        var g = $WH.g_calcBattlePetStats(c, h.breed, h.quality, h.level, c.elite);
        return $WH.strcmp(f.health, g.health)
      }
    },
    {
      id: "power",
      name: LANG.power,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.power
      },
      sortFunc: function (e, c) {
        var j = $WH.g_validateBpet(e, e.bpet);
        var h = $WH.g_validateBpet(c, c.bpet);
        var f = $WH.g_calcBattlePetStats(e, j.breed, j.quality, j.level, e.elite);
        var g = $WH.g_calcBattlePetStats(c, h.breed, h.quality, h.level, c.elite);
        return $WH.strcmp(f.power, g.power)
      }
    },
    {
      id: "speed",
      name: LANG.speed,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet),
            e = $WH.g_calcBattlePetStats(c, b.breed, b.quality, b.level, c.elite);
        return e.speed
      },
      sortFunc: function (e, c) {
        var j = $WH.g_validateBpet(e, e.bpet);
        var h = $WH.g_validateBpet(c, c.bpet);
        var f = $WH.g_calcBattlePetStats(e, j.breed, j.quality, j.level, e.elite);
        var g = $WH.g_calcBattlePetStats(c, h.breed, h.quality, h.level, c.elite);
        return $WH.strcmp(f.speed, g.speed)
      }
    },
    {
      id: "breeds",
      name: LANG.breed,
      getValue: function (c) {
        var b = $WH.g_validateBpet(c, c.bpet);
        return b.breed
      },
      sortFunc: function (e, c) {
        var g = $WH.g_validateBpet(e, e.bpet);
        var f = $WH.g_validateBpet(c, c.bpet);
        return $WH.strcmp(g.breed, f.breed)
      }
    },
    {
      id: "abilities",
      name: LANG.abilities,
      type: "text",
      sortFunc: function (f, c) {
        var g = f.abilities ? f.abilities.length : 0;
        var e = c.abilities ? c.abilities.length : 0;
        return $WH.strcmp(g, e)
      }
    },
    {
      id: "source",
      name: LANG.source,
      type: "text",
      sortFunc: function (e, c) {
        return $WH.strcmp(g_battlepet_sources[e.category], g_battlepet_sources[c.category])
      }
    },
    {
      id: "type",
      name: LANG.type,
      type: "text",
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_petability_types[e.type], g_petability_types[c.type])
      }
    },
    {
      id: "completed",
      name: LANG.completion,
      type: "text",
      hidden: true,
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this._speciesDoneFlags(e.npc.id), this._speciesDoneFlags(c.npc.id))
      },
      _speciesDoneFlags: function (e) {
        var f = 0;
        if (!g_user.lists) {
          return f
        }
        for (var b = g_user.lists.length - 1; b >= 0; b--) {
          var c = g_user.lists[b];
          if (!(c.id in g_completion.npc)) {
            continue
          }
          f = (f << 1) | ($WH.in_array(g_completion.npc[c.id], e) != -1 ? 1 : 0)
        }
        return f
      }
    }],
    columns: [{
      value: "name",
      sortFunc: function (e, c) {
        return Listview.templates.petspeciesgallery.sortFunc(e, c)
      }
    }],
    compute: function (e, k, o) {
      k.className = "bpet-listview-cell";
      k.vAlign = "bottom";
      var n = $WH.g_validateBpet(e, e.bpet),
          r = $WH.g_calcBattlePetStats(e, n.breed, n.quality, n.level, e.elite);
      var g = $WH.ce("div");
      g.className = "cell-wrapper";
      if (this.createModifyButton) {
        var s = $WH.ce("a");
        s.href = "javascript:;";
        s.className = "modify-cell icon-edit";
        s.innerHTML = LANG.li_menu_modify;
        $WH.ae(g, this.createModifyButton(e, s))
      }
      var q = $WH.ce("div");
      q.className = "preview-wrapper";
      if (e.compare) {
        $WH.ae(q, Listview.funcBox.getComparisonText(e.compare, this.completionMode, this.dataSource, this.completionText))
      }
      var h = $WH.ce("div");
      h.className = "expand-wrapper expanded-pet-view-wrapper";
      var u = $WH.ce("img");
      u.src = g_staticUrl + "/modelviewer/thumbs/npc/" + e.model + ".png";
      u.height = u.width = 150;
      $WH.ae(h, u);
      if (e.elite || e.untameable || e.companion) {
        var b = "untameable";
        if (e.companion) {
          b = "companion"
        }
        var p = $WH.ce("span");
        p.className = "banner";
        p.style.backgroundImage = "url(" + g_staticUrl + "/images/" + Locale.getName() + "/banner-" + b + ".png)";
        $WH.ae(h, p)
      }
      if (g_petability_types[e.type] && e.npc) {
        Listview.funcBox.addBattlePetExpandedView.call(this, h, e, n, r)
      }
      $WH.ae(q, h);
      if (this.showSideData && e.npc) {
        var l = {
          family: e.type
        };
        if (!e.companion) {
          l.breed = "#" + n.breed;
          l.level = LANG.lvspecies_sidelevel + n.level;
          l.health = r.health;
          l.power = r.power;
          l.speed = r.speed
        }
        if (!$.isEmptyObject(l)) {
          var m = $WH.ce("div");
          var f = $WH.ce("div");
          m.className = "side-left";
          f.className = "side-right";
          var j = 0;
          for (var o in l) {
            j++;
            p = $WH.ce("span");
            p.className = "side-" + o;
            if (o == "family") {
              var c = g_petability_types[l[o]] + (e.companion ? " " + LANG.lvspecies_companion : "");
              p.style.backgroundPosition = ((l[o] - 1) * -16) + "px 0"
            } else {
              if (o == "breed") {
                var c = $WH.sprintf(LANG.lvspecies_breedtip, n.breed, $WH.g_battlePetBreedStats[n.breed][0] * 50 + "%", $WH.g_battlePetBreedStats[n.breed][1] * 50 + "%", $WH.g_battlePetBreedStats[n.breed][2] * 50 + "%");
                p.className += " tip";
                p.innerHTML = l[o]
              } else {
                var c = LANG[o];
                p.innerHTML = l[o]
              }
            }
            p.onmouseover = (function (w, v) {
              $WH.Tooltip.showAtCursor(v, w, 0, 0, "q")
            }).bind(null, c);
            p.onmousemove = $WH.Tooltip.cursorUpdate;
            p.onmouseout = $WH.Tooltip.hide;
            $WH.ae(j > 3 ? f : m, p)
          }
          $WH.ae(q, m);
          $WH.ae(q, f)
        }
      }
      $WH.ae(g, q);
      var t = $WH.ce("div");
      t.className = "name";
      if (e.elite) {
        u = $WH.ce("img");
        u.src = g_staticUrl + "/images/icons/boss.gif";
        u.height = 16;
        u.width = 12;
        u.style.verticalAlign = "middle";
        u.onmouseover = function (v) {
          $WH.Tooltip.showAtCursor(v, LANG.lvspecies_elite, 0, 0, "q")
        };
        u.onmousemove = $WH.Tooltip.cursorUpdate;
        u.onmouseout = $WH.Tooltip.hide;
        $WH.ae(t, u);
        $WH.ae(t, $WH.ct(" "))
      }
      s = $WH.ce("a");
      s.href = this.getItemLink(e);
      s.className = "q" + n.quality;
      s.innerHTML = e.name;
      $WH.ae(t, s);
      $WH.ae(g, t);
      $WH.ae(k, g)
    },
    getVisibleText: function (c) {
      var f = c.name;
      if (g_petability_types[c.type] && c.npc) {
        f += " " + g_petability_types[c.type] + " " + c.npc.name
      }
      if (c.companion) {
        f += " " + LANG.lvspecies_companion
      }
      if (c.untameable) {
        f += " " + LANG.lvspecies_untameable
      }
      if (c.elite) {
        f += " " + LANG.lvspecies_elite
      }
      if (!c.abilities) {
        return f
      }
      for (var e = 0, b = c.abilities.length; e < b; ++e) {
        if (g_petabilities[c.abilities[e]]) {
          f += " " + g_petabilities[c.abilities[e]]["name_" + Locale.getName()]
        }
      }
      return f
    },
    sortFunc: function (e, c) {
      return $WH.strcmp(e.name, c.name)
    },
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/npc=" + (b.npc ? b.npc.id : b.id)
    }
  },
  achievement: {
    sort: [1, 2],
    mode: 1,
    nItemsPerPage: 100,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      span: 2,
      compute: function (c, j, g) {
        var b = null;
        if (c.who && c.completed) {
          b = "who=" + c.who + "&when=" + c.completed.getTime()
        }
        var f = $WH.ce("td");
        f.style.width = "1px";
        f.style.paddingRight = "0";
        f.style.borderRight = "none";
        $WH.ae(f, g_achievements.createIcon(c.id, 1));
        Icon.getLink(f.firstChild).href = this.getItemLink(c);
        Icon.getLink(f.firstChild).rel = b;
        $WH.ae(g, f);
        j.style.borderLeft = "none";
        var e = $WH.ce("a");
        e.className = "listview-cleartext";
        e.href = this.getItemLink(c);
        e.rel = b;
        $WH.ae(e, $WH.ct(c.name));
        $WH.ae(j, e);
        if (c.description != null) {
          var h = $WH.ce("div");
          h.className = "listview-blurb small";
          $WH.ae(h, $WH.ct(c.description));
          $WH.ae(j, h)
        }
      },
      getVisibleText: function (b) {
        var c = b.name;
        if (b.description) {
          c += " " + b.description
        }
        return c
      }
    },
    {
      id: "side",
      name: LANG.side,
      type: "text",
      compute: function (b, e) {
        if (b.side && b.side != 3) {
          var c = $WH.ce("span");
          c.className = (b.side == 1 ? "icon-alliance" : "icon-horde");
          c.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, g_sides[b.side], 0, 0, "q")
          };
          c.onmousemove = $WH.Tooltip.cursorUpdate;
          c.onmouseout = $WH.Tooltip.hide;
          $WH.ae(e, c)
        }
      },
      getVisibleText: function (b) {
        if (b.side) {
          return g_sides[b.side]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_sides[e.side], g_sides[c.side])
      }
    },
    {
      id: "points",
      name: LANG.points,
      type: "number",
      width: "10%",
      value: "points",
      compute: function (b, c) {
        if (b.points) {
          Listview.funcBox.appendMoney(c, 0, null, 0, 0, b.points)
        }
      }
    },
    {
      id: "rewards",
      name: LANG.rewards,
      type: "text",
      width: "20%",
      compute: function (m, f) {
        if (m.rewards) {
          var e = [];
          var c = [];
          var j = [];
          var h = [];
          for (var g = 0; g < m.rewards.length; g++) {
            if (m.rewards[g][0] == 11) {
              j.push(m.rewards[g][1])
            } else {
              if (m.rewards[g][0] == 3) {
                e.push(m.rewards[g][1])
              } else {
                if (m.rewards[g][0] == 6) {
                  c.push(m.rewards[g][1])
                } else {
                  if (m.rewards[g][0] == 21) {
                    h.push(m.rewards[g][1])
                  }
                }
              }
            }
          }
          if (e.length > 0) {
            for (var g = 0; g < e.length; g++) {
              if (!g_items[e[g]]) {
                return
              }
              var o = g_items[e[g]];
              var l = $WH.ce("a");
              l.href = g_getRelativeHostPrefix() + "/item=" + e[g];
              l.className = "q" + o.quality + " icontiny tinyspecial";
              l.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + o.icon.toLowerCase() + ".gif)";
              $WH.ae(l, $WH.ct(o["name_" + Locale.getName()]));
              var n = $WH.ce("span");
              $WH.ae(n, l);
              $WH.ae(f, n);
              $WH.ae(f, $WH.ce("br"))
            }
          }
          if (c.length > 0) {
            for (var g = 0; g < c.length; g++) {
              if (!g_spells[c[g]]) {
                return
              }
              var o = g_spells[c[g]];
              var l = $WH.ce("a");
              l.href = g_getRelativeHostPrefix() + "/spell=" + c[g];
              l.className = "q13 icontiny tinyspecial";
              l.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + o.icon.toLowerCase() + ".gif)";
              $WH.ae(l, $WH.ct(o["name_" + Locale.getName()]));
              var n = $WH.ce("span");
              $WH.ae(n, l);
              $WH.ae(f, n);
              $WH.ae(f, $WH.ce("br"))
            }
          }
          if (j.length > 0) {
            for (var g = 0; g < j.length; g++) {
              if (!g_titles[j[g]]) {
                return
              }
              var k = g_titles[j[g]]["name_" + Locale.getName()];
              k = k.replace("%s", '<span class="q0">&lt;' + LANG.name + "&gt;</span>");
              var n = $WH.ce("a");
              n.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
              n.href = g_getRelativeHostPrefix() + "/title=" + j[g];
              n.innerHTML = k;
              $WH.ae(f, n);
              $WH.ae(f, $WH.ce("br"))
            }
          }
          if (h.length > 0) {
            for (var g = 0; g < h.length; g++) {
              if (!g_followers[h[g]]) {
                return
              }
              var b = g_followers[h[g]]["name_" + Locale.getName()];
              var n = $WH.ce("a");
              n.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
              n.href = g_getRelativeHostPrefix() + "/follower=" + h[g];
              n.innerHTML = b;
              $WH.ae(f, n);
              $WH.ae(f, $WH.ce("br"))
            }
          }
        } else {
          if (m.reward) {
            var n = $WH.ce("span");
            n.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
            $WH.ae(n, $WH.ct(m.reward));
            $WH.ae(f, n)
          }
        }
      },
      getVisibleText: function (b) {
        var e = "";
        if (b.rewards) {
          for (var c = 0; c < b.rewards.length; c++) {
            if (b.rewards[c][0] == 11 && g_titles[b.rewards[c][1]]) {
              e += " " + g_titles[b.rewards[c][1]]["name_" + Locale.getName()].replace("%s", "<" + LANG.name + ">")
            } else {
              if (b.rewards[c][0] == 3 && g_items[b.rewards[c][1]]) {
                e += " " + g_items[b.rewards[c][1]]["name_" + Locale.getName()]
              } else {
                if (b.rewards[c][0] == 6 && g_spells[b.rewards[c][1]]) {
                  e += " " + g_spells[b.rewards[c][1]]["name_" + Locale.getName()]
                }
              }
            }
          }
        } else {
          if (b.reward) {
            e += " " + b.reward
          }
        }
        return e
      },
      sortFunc: function (e, c) {
        var g = this.getVisibleText(e);
        var f = this.getVisibleText(c);
        if (g != "" && f == "") {
          return -1
        }
        if (f != "" && g == "") {
          return 1
        }
        return $WH.strcmp(g, f)
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      width: "15%",
      compute: function (e, h) {
        h.className = "small";
        var c = {
          "1": -1,
          "2": 1,
          "3": 15076
        },
            g = g_getRelativeHostPrefix() + "/achievements=";
        if (e.category != c[e.type] && e.parentcat != c[e.type]) {
          var b = $WH.ce("a");
          b.className = "q0";
          b.href = g_getRelativeHostPrefix() + "/achievements=" + e.type + "." + e.parentcat;
          $WH.ae(b, $WH.ct(g_achievement_categories[e.parentcat]));
          $WH.ae(h, b);
          $WH.ae(h, $WH.ce("br"));
          g = b.href + "."
        }
        var f = $WH.ce("a");
        f.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
        f.href = g + e.category;
        $WH.ae(f, $WH.ct(g_achievement_categories[e.category]));
        $WH.ae(h, f)
      },
      getVisibleText: function (b) {
        return g_achievement_categories[b.category]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_achievement_categories[e.category], g_achievement_categories[c.category])
      },
      hidden: true
    },
    {
      id: "completed",
      name: LANG.completion,
      hidden: true,
      compute: function (b, j) {
        for (var h in g_user.lists) {
          var f = g_user.lists[h];
          if (!(f.id in g_completion.achievement)) {
            continue
          }
          var g = ($WH.in_array(g_completion.achievement[f.id], b.id) != -1);
          var e = $WH.ce("a");
          e.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + f.id + "/" + f.url;
          e.className = "progress-icon " + (g ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(e, (g ? LANG.lvcompletion.identical : LANG.lvcompletion.missing) + ": " + f.character + " - " + f.realm + " " + f.region);
          $WH.ae(j, e)
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this._achievementDoneFlags(e.id), this._achievementDoneFlags(c.id))
      },
      getValue: function (e) {
        var g = 0;
        var f = g_completion.achievement;
        for (var h in g_user.lists) {
          var b = g_user.lists[h];
          if (!(b.id in f)) {
            continue
          }
          if ($WH.in_array(f[b.id], e.id) != -1) {
            g++
          }
        }
        return g
      },
      _achievementDoneFlags: function (e) {
        var f = 0;
        if (!g_user.lists) {
          return f
        }
        for (var b = g_user.lists.length - 1; b >= 0; b--) {
          var c = g_user.lists[b];
          if (!(c.id in g_completion.achievement)) {
            continue
          }
          f = (f << 1) | ($WH.in_array(g_completion.achievement[c.id], e) != -1 ? 1 : 0)
        }
        return f
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/achievement=" + b.id
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "achievement")
      }).bind(this);
      $WH.ae(e, b)
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("achievement" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.push(parseInt(b))
          }
        }
      }
    }
  },
  title: {
    sort: [1],
    mode: 1,
    nItemsPerPage: -1,
    searchable: 1,
    filtrable: 1,
    completionText: LANG.lvcompletion_collection,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name",
      compute: function (g, j, f) {
        var e = $WH.ce("a"),
            h = $WH.ce("span"),
            c = $WH.ct($WH.str_replace(g.name, "%s", ""));
        e.className = "listview-cleartext";
        e.href = this.getItemLink(g);
        if (g.who) {
          $WH.ae(h, $WH.ct(g.who))
        } else {
          $WH.ae(h, $WH.ct("<" + LANG.name + ">"));
          h.className = "q0"
        }
        if (g.name.indexOf("%s") > 0) {
          $WH.ae(e, c);
          $WH.ae(e, h)
        } else {
          if (g.name.indexOf("%s") == 0) {
            $WH.ae(e, h);
            $WH.ae(e, c)
          }
        }
        if (g.expansion) {
          var b = $WH.ce("span");
          b.className = g_GetExpansionClassName(g.expansion);
          $WH.ae(b, e);
          $WH.ae(j, b)
        } else {
          $WH.ae(j, e)
        }
      },
      sortFunc: function (e, c, f) {
        var g = $WH.trim(e.name.replace("%s", "").replace(/^[\s,]*(,|the |of the |of )/i, ""));
        bName = $WH.trim(c.name.replace("%s", "").replace(/^[\s,]*(,|the |of the |of )/i, ""));
        return $WH.strcmp(g, bName)
      },
      getVisibleText: function (b) {
        var c = b.name + Listview.funcBox.getExpansionText(b);
        return c
      }
    },
    {
      id: "gender",
      name: LANG.gender,
      type: "text",
      value: "gender",
      compute: function (e, f) {
        if (e.gender && e.gender != 3) {
          var b = g_file_genders[e.gender - 1];
          var c = $WH.ce("span");
          c.className = "icon-" + b;
          c.onmouseover = function (g) {
            $WH.Tooltip.showAtCursor(g, LANG[b], 0, 0, "q")
          };
          c.onmousemove = $WH.Tooltip.cursorUpdate;
          c.onmouseout = $WH.Tooltip.hide;
          $WH.ae(f, c)
        }
      },
      getVisibleText: function (b) {
        if (b.gender && b.gender != 3) {
          return LANG[g_file_genders[b.gender - 1]]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(e.gender, c.gender)
      }
    },
    {
      id: "side",
      name: LANG.side,
      type: "text",
      compute: function (c, e) {
        if (c.side && c.side != 3) {
          var b = $WH.ce("span");
          b.className = (c.side == 1 ? "icon-alliance" : "icon-horde");
          b.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, g_sides[c.side], 0, 0, "q")
          };
          b.onmousemove = $WH.Tooltip.cursorUpdate;
          b.onmouseout = $WH.Tooltip.hide;
          $WH.ae(e, b)
        }
      },
      getVisibleText: function (b) {
        if (b.side) {
          return g_sides[b.side]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_sides[e.side], g_sides[c.side])
      }
    },
    {
      id: "source",
      name: LANG.source,
      type: "text",
      compute: function (k, e) {
        if (k.source) {
          $WH.nw(e);
          e.className = "small";
          e.style.lineHeight = "18px";
          var b = 0;
          for (var l in k.source) {
            k.source[l].sort(function (n, m) {
              return m.s - n.s
            });
            for (var f = 0, g = k.source[l].length; f < g; ++f) {
              var c = k.source[l][f];
              var h = 0;
              if (k.faction && typeof c != "string" && c.s !== undefined && c.s != -1 && c.s != 2 - k.faction) {
                continue
              }
              if (b > 0) {
                $WH.ae(e, $WH.ce("br"))
              }
              if (typeof c == "string") {
                $WH.ae(e, $WH.ct(c))
              } else {
                if (c.t && c.n) {
                  h = c.t;
                  var j = $WH.ce("a");
                  j.href = g_getRelativeHostPrefix() + "/" + g_types[c.t] + "=" + c.ti;
                  j.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
                  if (c.s == 1) {
                    j.className += " icon-alliance"
                  }
                  if (c.s == 0) {
                    j.className += " icon-horde"
                  }
                  if (c.t == 5) {
                    j.className += " icontiny tinyspecial";
                    j.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/quest_start.gif)"
                  }
                  $WH.ae(j, $WH.ct(c.n));
                  $WH.ae(e, j)
                } else {
                  continue
                }
              }
              b++
            }
          }
        }
      },
      getVisibleText: function (f) {
        var h = "";
        if (f.source) {
          for (var e in f.source) {
            for (var c = 0, b = f.source[e].length; c < b; ++c) {
              var g = f.source[e][c];
              if (typeof g == "string") {
                h += " " + g
              } else {
                if (g.t) {
                  h += " " + g.n
                }
              }
            }
          }
        }
        return h
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this.getVisibleText(e), this.getVisibleText(c))
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      width: "15%",
      compute: function (c, e) {
        $WH.nw(e);
        e.className = (($WH.isset("g_thottbot") && g_thottbot) ? "small q" : "small q1");
        var b = $WH.ce("a");
        b.href = g_getRelativeHostPrefix() + "/titles=" + c.category;
        $WH.ae(b, $WH.ct(g_title_categories[c.category]));
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_title_categories[b.category]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_title_categories[e.category], g_title_categories[c.category])
      },
      hidden: true
    },
    {
      id: "completed",
      name: LANG.completion,
      hidden: true,
      compute: function (g, j) {
        for (var h in g_user.lists) {
          var e = g_user.lists[h];
          if (!(e.id in g_completion.title)) {
            continue
          }
          var f = ($WH.in_array(g_completion.title[e.id], g.id) != -1);
          var b = $WH.ce("a");
          b.href = g_getRelativeHostPrefix("wowhead.com") + "/list=" + e.id + "/" + e.url;
          b.className = "progress-icon " + (f ? "progress-8" : "progress-0");
          $WH.Tooltip.simple(b, (f ? LANG.lvcompletion.identical : LANG.lvcompletion.missing) + ": " + e.character + " - " + e.realm + " " + e.region);
          $WH.ae(j, b)
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(this._titleDoneFlags(e.id), this._titleDoneFlags(c.id))
      },
      getValue: function (e) {
        var g = 0;
        var f = g_completion.title;
        for (var h in g_user.lists) {
          var b = g_user.lists[h];
          if (!(b.id in f)) {
            continue
          }
          if ($WH.in_array(f[b.id], e.id) != -1) {
            g++
          }
        }
        return g
      },
      _titleDoneFlags: function (e) {
        var f = 0;
        if (!g_user.lists) {
          return f
        }
        for (var b = g_user.lists.length - 1; b >= 0; b--) {
          var c = g_user.lists[b];
          if (!(c.id in g_completion.title)) {
            continue
          }
          f = (f << 1) | ($WH.in_array(g_completion.title[c.id], e) != -1 ? 1 : 0)
        }
        return f
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/title=" + b.id
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "title")
      }).bind(this);
      $WH.ae(e, b)
    },
    onBeforeCreate: function () {
      for (var b in this.columns) {
        if ((this.columns[b].id == "completed") && (this.columns[b].hidden)) {
          if ((!(this.hasOwnProperty("completionMode") && this.completionMode)) && $WH.isset("g_user") && ("lists" in g_user) && ("title" in g_completion) && ($WH.in_array(this.hiddenCols, this.columns[b].id) == -1)) {
            this.visibility.push(parseInt(b))
          }
        }
      }
    }
  },
  model: {
    sort: [],
    mode: 3,
    nItemsPerPage: 40,
    nItemsPerRow: 4,
    poundable: 2,
    columns: [],
    compute: function (e, k, f) {
      k.className = "screenshot-cell";
      k.vAlign = "bottom";
      var b = $WH.ce("a");
      b.href = "javascript:;";
      b.onclick = this.template.modelShow.bind(this.template, e.npcId, e.displayId, false);
      var c = $WH.ce("img");
      c.src = g_staticUrl + "/modelviewer/thumbs/npc/" + e.displayId + ".png";
      $WH.ae(b, c);
      $WH.ae(k, b);
      var j = $WH.ce("div");
      j.className = "screenshot-cell-user";
      b = $WH.ce("a");
      b.href = g_getRelativeHostPrefix() + "/npcs=1?filter=" + (e.family ? "fa=" + e.family + ";" : "") + "minle=1;cr=35;crs=0;crv=" + e.skin;
      $WH.ae(b, $WH.ct(e.skin));
      $WH.ae(j, b);
      $WH.ae(j, $WH.ct(" (" + e.count + ")"));
      $WH.ae(k, j);
      j = $WH.ce("div");
      j.style.position = "relative";
      j.style.height = "1em";
      var h = $WH.ce("div");
      h.className = "screenshot-caption";
      var g = $WH.ce("small");
      $WH.ae(g, $WH.ct(LANG.level + ": "));
      $WH.ae(g, $WH.ct((e.minLevel == 9999 ? "??" : e.minLevel) + (e.minLevel == e.maxLevel ? "" : LANG.hyphen + (e.maxLevel == 9999 ? "??" : e.maxLevel))));
      $WH.ae(g, $WH.ce("br"));
      $WH.ae(h, g);
      $WH.ae(j, h);
      $WH.ae(k, j);
      $WH.aE(k, "click", this.template.modelShow.bind(this.template, e.npcId, e.displayId, true))
    },
    modelShow: function (g, c, h, k) {
      if (h) {
        k = $WH.$E(k);
        if (k.shiftKey || k.ctrlKey) {
          return
        }
        var b = 0,
            f = k._target;
        while (f && b < 3) {
          if (f.nodeName == "A") {
            return
          }
          if (f.nodeName == "IMG") {
            break
          }
          f = f.parentNode
        }
      }
      ModelViewer.show({
        type: 1,
        typeId: g,
        displayId: c,
        noPound: 1
      })
    }
  },
  genericmodel: {
    sort: [1],
    mode: 3,
    nItemsPerPage: 40,
    nItemsPerRow: 4,
    poundable: 2,
    columns: [{
      value: "name",
      sortFunc: function (e, c) {
        return Listview.templates.genericmodel.sortFunc(e, c)
      }
    }],
    compute: function (j, f, h) {
      f.className = "screenshot-cell";
      f.vAlign = "bottom";
      var m, q, r, p, l;
      var o = "";
      var e = ("modelviewer" in j) ? j.modelviewer : j;
      if ("modelviewer" in j) {
        m = j.modelviewer.displayid;
        l = j.modelviewer.typeid;
        q = j.modelviewer.type;
        p = j.slot
      } else {
        if ("npcmodel" in j) {
          m = j.npcmodel;
          l = j.id;
          q = 1
        } else {
          if ("displayid" in j) {
            m = j.displayid;
            l = j.id;
            q = 3;
            p = j.slotbak || j.slot;
            var c = Listview.funcBox.getCurrentItemBonuses.call(this, j);
            if (c.length > 0) {
              o = "&bonus=" + c.join(":")
            }
            var k = g_items.getAppearance(j.id, c);
            if (k != null && k[0]) {
              m = k[0]
            }
          }
        }
      }
      switch (q) {
      case 1:
        r = "npc";
        break;
      case 3:
        r = "item";
        break;
      default:
        r = "item";
        break
      }
      if (m) {
        var n = $WH.ce("a");
        n.href = "javascript:;";
        n.rel = this.genericlinktype + "=" + j.id + o;
        n.onclick = this.template.modelShow.bind(this.template, q, l, m, p, false);
        var g = $WH.ce("img");
        g.src = g_staticUrl + "/modelviewer/thumbs/" + r + "/" + m + ".png";
        $WH.ae(n, g);
        $WH.ae(f, n)
      }
      d = $WH.ce("div");
      d.style.position = "relative";
      d.style.height = "1em";
      var b = $WH.ce("div");
      b.className = "screenshot-caption";
      var n = $WH.ce("a");
      n.className = "q" + ((this.genericlinktype == "item") ? g_items[j.id].quality : "");
      n.href = g_getRelativeHostPrefix() + "/" + this.genericlinktype + "=" + j.id + o;
      $WH.ae(n, $WH.ct(j.name.substr(1)));
      $WH.ae(b, n);
      $WH.ae(d, b);
      $WH.ae(f, d);
      if (m) {
        $WH.aE(f, "click", this.template.modelShow.bind(this.template, q, l, m, p, true))
      }
    },
    modelShow: function (l, m, b, n, c, k) {
      if (c) {
        k = $WH.$E(k);
        if (k.shiftKey || k.ctrlKey) {
          return
        }
        var h = 0,
            g = k._target;
        while (g && h < 3) {
          if (g.nodeName == "A") {
            return
          }
          if (g.nodeName == "IMG") {
            break
          }
          g = g.parentNode
        }
      }
      var f = {
        type: l,
        typeId: m,
        displayId: b,
        noPound: 1
      };
      if (typeof n != "undefined") {
        f.slot = n
      }
      ModelViewer.show(f)
    },
    sortFunc: function (e, c, f) {
      return ($WH.strcmp(e.displayid, c.displayid) || $WH.strcmp(e.name, c.name) || -$WH.strcmp(e.level, c.level))
    }
  },
  currency: {
    sort: [1],
    mode: 1,
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      value: "name",
      compute: function (c, h, f) {
        var e = $WH.ce("td");
        e.style.width = "1px";
        e.style.paddingRight = "0";
        e.style.borderRight = "none";
        $WH.ae(e, Icon.create(c.icon, 0, null, this.getItemLink(c), c.stack ? c.stack : null));
        $WH.ae(f, e);
        h.style.borderLeft = "none";
        var g = $WH.ce("div");
        var b = $WH.ce("a");
        b.className = "listview-cleartext";
        b.href = this.getItemLink(c);
        if (typeof c.name == "undefined") {
          c.name = (typeof g_currencies[c.id] != "undefined") ? g_currencies[c.id][0] : ""
        }
        $WH.ae(b, $WH.ct(c.name));
        $WH.ae(g, b);
        $WH.ae(h, g)
      }
    },
    {
      id: "category",
      name: LANG.category,
      type: "text",
      width: "15%",
      compute: function (c, e) {
        e.className = "small";
        var b = $WH.ce("a");
        b.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
        b.href = g_getRelativeHostPrefix() + "/currencies=" + c.category;
        $WH.ae(b, $WH.ct(g_currency_categories[c.category]));
        $WH.ae(e, b)
      },
      getVisibleText: function (b) {
        return g_currency_categories[b.category]
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_currency_categories[e.category], g_currency_categories[c.category])
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/currency=" + b.id
    },
    createCbControls: function (e, c) {
      if (!c) {
        return
      }
      var b = $WH.ce("input");
      b.type = "button";
      b.value = (!this.characterSettings || !this.characterSettings.editable ? LANG.li_addtolist : LANG.li_addtoanotherlist);
      b.onclick = (function (f) {
        Listview.cbAddToList.call(this, f, "currency")
      }).bind(this);
      $WH.ae(e, b)
    }
  },
  classs: {
    sort: [1],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      value: "name",
      compute: function (e, k, g) {
        var c = $WH.ce("td");
        c.style.width = "1px";
        c.style.paddingRight = "0";
        c.style.borderRight = "none";
        $WH.ae(c, Icon.create("class_" + g_file_classes[e.id], 0, null, this.getItemLink(e)));
        $WH.ae(g, c);
        k.style.borderLeft = "none";
        var j = $WH.ce("div");
        var b = $WH.ce("a");
        b.className = "c" + e.id + " listview-cleartext";
        b.href = this.getItemLink(e);
        $WH.ae(b, $WH.ct(e.name));
        if (e.expansion) {
          var f = $WH.ce("span");
          f.className = g_GetExpansionClassName(e.expansion);
          $WH.ae(f, b);
          $WH.ae(j, f)
        } else {
          $WH.ae(j, b)
        }
        if (e.hero) {
          j.style.position = "relative";
          var h = $WH.ce("div");
          h.className = "listview-name-info";
          $WH.ae(h, $WH.ct(LANG.lvclass_hero));
          $WH.aef(j, h)
        }
        $WH.ae(k, j)
      }
    },
    {
      id: "races",
      name: LANG.races,
      type: "text",
      compute: function (f, h) {
        if (f.races) {
          var g = Listview.funcBox.assocBinFlags(f.races, g_chr_races);
          h.className = (($WH.isset("g_thottbot") && g_thottbot) ? "q" : "q1");
          for (var e = 0, b = g.length; e < b; ++e) {
            if (e > 0) {
              $WH.ae(h, $WH.ct(LANG.comma))
            }
            var c = $WH.ce("a");
            c.href = g_getRelativeHostPrefix() + "/race=" + g[e];
            $WH.ae(c, $WH.ct(g_chr_races[g[e]]));
            $WH.ae(h, c)
          }
        }
      },
      getVisibleText: function (b) {
        if (b.races) {
          return Listview.funcBox.arrayText(Listview.funcBox.assocBinFlags(b.races, g_chr_races), g_chr_races)
        }
      },
      sortFunc: function (e, c, f) {
        return Listview.funcBox.assocArrCmp(Listview.funcBox.assocBinFlags(e.races, g_chr_races), Listview.funcBox.assocBinFlags(c.races, g_chr_races), g_chr_races)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/class=" + b.id
    }
  },
  race: {
    sort: [1],
    searchable: 1,
    filtrable: 1,
    columns: [{
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      span: 2,
      value: "name",
      compute: function (g, e, j) {
        var h = $WH.ce("div"),
            k;
        h.style.margin = "0 auto";
        h.style.textAlign = "left";
        h.style.width = "52px";
        k = Icon.create("race_" + g_file_races[g.id] + "_" + g_file_genders[0], 0, null, this.getItemLink(g));
        k.style.cssFloat = k.style.styleFloat = "left";
        $WH.ae(h, k);
        k = Icon.create("race_" + g_file_races[g.id] + "_" + g_file_genders[1], 0, null, this.getItemLink(g));
        k.style.cssFloat = k.style.styleFloat = "left";
        $WH.ae(h, k);
        var f = $WH.ce("td");
        f.style.width = "1px";
        f.style.paddingRight = "0";
        f.style.borderRight = "none";
        $WH.ae(f, h);
        $WH.ae(j, f);
        e.style.borderLeft = "none";
        var b = $WH.ce("div");
        var l = $WH.ce("a");
        l.className = "listview-cleartext";
        l.href = this.getItemLink(g);
        $WH.ae(l, $WH.ct(g.name));
        if (g.expansion) {
          var c = $WH.ce("span");
          c.className = g_GetExpansionClassName(g.expansion);
          $WH.ae(c, l);
          $WH.ae(b, c)
        } else {
          $WH.ae(b, l)
        }
        $WH.ae(e, b)
      }
    },
    {
      id: "side",
      name: LANG.side,
      type: "text",
      compute: function (b, e) {
        if (b.side && b.side != 3) {
          var c = $WH.ce("span");
          c.className = (b.side == 1 ? "icon-alliance" : "icon-horde");
          c.onmouseover = function (f) {
            $WH.Tooltip.showAtCursor(f, g_sides[b.side], 0, 0, "q")
          };
          c.onmousemove = $WH.Tooltip.cursorUpdate;
          c.onmouseout = $WH.Tooltip.hide;
          $WH.ae(e, c)
        }
      },
      getVisibleText: function (b) {
        if (b.side) {
          return g_sides[b.side]
        }
      },
      sortFunc: function (e, c, f) {
        return $WH.strcmp(g_sides[e.side], g_sides[c.side])
      }
    },
    {
      id: "classes",
      name: LANG.classes,
      type: "text",
      compute: function (f, k) {
        if (f.classes) {
          var e = Listview.funcBox.assocBinFlags(f.classes, g_chr_classes);
          var j = $WH.ce("div");
          j.style.width = (26 * e.length) + "px";
          j.style.margin = "0 auto";
          for (var c = 0, b = e.length; c < b; ++c) {
            var g = Icon.create("class_" + g_file_classes[e[c]], 0, null, g_getRelativeHostPrefix() + "/class=" + e[c]);
            var h = g_chr_classes[e[c]];
            $(g).mouseover((function (m, l) {
              $WH.Tooltip.showAtCursor(l, m, 0, 0, "q")
            }).bind(g, h));
            $(g).mousemove(function (l) {
              $WH.Tooltip.cursorUpdate(l)
            }).mouseout(function () {
              $WH.Tooltip.hide()
            }).css("float", "left").appendTo(j)
          }
          $WH.ae(k, j)
        }
      },
      getVisibleText: function (b) {
        if (b.classes) {
          return Listview.funcBox.arrayText(Listview.funcBox.assocBinFlags(b.classes, g_chr_classes), g_chr_classes)
        }
      },
      sortFunc: function (e, c, f) {
        return Listview.funcBox.assocArrCmp(Listview.funcBox.assocBinFlags(e.classes, g_chr_classes), Listview.funcBox.assocBinFlags(c.classes, g_chr_classes), g_chr_classes)
      }
    }],
    getItemLink: function (b) {
      return g_getRelativeHostPrefix() + "/race=" + b.id
    }
  },
  betatalents: {
    nItemsPerPage: 100,
    mode: Listview.MODE_CHECKBOX,
    sortable: false,
    columns: [{
      id: "row",
      name: "Row",
      value: "row",
      compute: function (c, b) {
        $(b).html(parseInt(c.row) + 1)
      }
    },
    {
      id: "col",
      name: "Column",
      value: "col",
      compute: function (c, b) {
        $(b).html(parseInt(c.col) + 1)
      }
    },
    {
      id: "name",
      name: LANG.name,
      type: "text",
      align: "left",
      value: "name_enus",
      span: 2,
      compute: function (f, e, c) {
        var b = f.tooltip_enus;
        $(e).mouseover((function (g, h) {
          $WH.Tooltip.showAtCursor(h, g, 0, 0)
        }).bind(e, b));
        $(e).mousemove(function (g) {
          $WH.Tooltip.cursorUpdate(g)
        }).mouseout(function () {
          $WH.Tooltip.hide()
        });
        $(e).html(f.name_enus)
      }
    }],
    createCbControls: function (c) {
      var b = $WH.ce("input");
      b.type = "button";
      b.value = "Edit";
      b.onclick = (function () {
        var e = this.getCheckedRows();
        if (!e.length) {
          alert("No talent selected.")
        } else {
          if (e.length > 1) {
            alert("You can only edit one talent at a time.")
          } else {
            if (confirm("Are you sure that you want to edit this talent?")) {
              enableEditMode(e[0])
            }
          }
        }
      }).bind(this);
      $WH.ae(c, b);
      var b = $WH.ce("input");
      b.type = "button";
      b.value = "Delete";
      b.onclick = (function () {
        var f = this.getCheckedRows();
        if (!f.length) {
          alert("No talents selected.")
        } else {
          if (confirm("Are you sure that you want to delete " + (f.length == 1 ? "this talent" : "these " + f.length + " talents") + "?")) {
            var e = "";
            $WH.array_walk(f, function (g) {
              e += g.id + ","
            });
            e = $WH.rtrim(e, ",");
            if (e != "") {
              $.post("/admin=beta-talents&delete=" + e + "&classid=" + f[0].classid)
            }
            this.deleteRows(f);
            this.resetCheckedRows()
          }
        }
      }).bind(this);
      $WH.ae(c, b)
    }
  },
  changelog: {
    nItemsPerPage: 100,
    sortable: false,
    columns: [{
      id: "name",
      name: "Name",
      compute: function (b, e) {
        var c = $(b.tooltip).find("b").first().text();
        $(e).html(c);
        e.className += " listview-cleartext"
      }
    },
    {
      id: "version",
      name: "Version (mouseover to see tooltip)",
      compute: function (h, k) {
        var e = h.tooltip;
        $(k).mouseover((function (l, m) {
          $WH.Tooltip.showAtCursor(m, l, 0, 0)
        }).bind(k, e));
        $(k).mousemove(function (l) {
          $WH.Tooltip.cursorUpdate(l)
        }).mouseout(function () {
          $WH.Tooltip.hide()
        });
        var g = ((typeof g_hearthhead != "undefined") && g_hearthhead) ? "hearthstone" : "wow";
        if (!g_getPatchVersionObject.hasOwnProperty("parsed") || !g_getPatchVersionObject.parsed[g]) {
          g_getPatchVersionObject()
        }
        var j = ((h.build > 0) ? "" : "Before ") + "Build " + Math.abs(h.build);
        if (h.version > 0) {
          var f = (parseInt(h.version / 10000)) + "." + ((parseInt(h.version / 100)) % 100) + "." + (h.version % 100);
          j = f + " " + j;
          var c = false;
          for (var b in g_gameversions[g]) {
            if (g_gameversions[g][b].versionnum >= h.version && (!c || c.build > g_gameversions[g][b].build)) {
              c = g_gameversions[g][b]
            }
          }
          if (c) {
            j = j.replace(f, f + " (" + new Date(c.timestamp).toDateString() + ")")
          }
        }
        $(k).html(j)
      }
    }]
  }
};
var LiveSearch = new
function () {
  var currentTextbox, lastSearch = {},
      lastDiv, timer, prepared, container, cancelNext, hasData, summary, selection, LIVESEARCH_DELAY = 500;

  function setText(textbox, txt) {
    textbox.value = txt;
    textbox.selectionStart = textbox.selectionEnd = txt.length
  }
  function colorDiv(div, fromOver) {
    if (lastDiv) {
      lastDiv.className = lastDiv.className.replace("live-search-selected", "")
    }
    lastDiv = div;
    lastDiv.className += " live-search-selected";
    selection = div.i;
    if (!fromOver) {
      show();
      setTimeout(setText.bind(0, currentTextbox, g_getTextContent(div.firstChild.firstChild.childNodes[1])), 1);
      cancelNext = 1
    }
  }
  function aOver() {
    colorDiv(this.parentNode.parentNode, 1)
  }
  function isVisible() {
    if (!container) {
      return false
    }
    return container.style.display != "none"
  }
  function adjust(fromResize) {
    if (fromResize == 1 && !isVisible()) {
      return
    }
    if (currentTextbox == null) {
      return
    }
    var c = $WH.ac(currentTextbox);
    container.style.left = (c[0]) + "px";
    container.style.top = (c[1] + currentTextbox.offsetHeight) + "px";
    container.style.width = (currentTextbox.offsetWidth - 4) + "px"
  }
  function prepare() {
    if (prepared) {
      if (Platform.isMobile()) {
        container.className += " live-search-mobile"
      } else {
        container.className = container.className.replace(/ *live-search-mobile\b/g, "")
      }
      return
    }
    prepared = 1;
    container = $WH.ce("div");
    container.className = "live-search" + (Platform.isMobile() ? " live-search-mobile" : "");
    container.style.display = "none";
    $WH.ae(document.body, container);
    $WH.aE(window, "resize", adjust.bind(0, 1));
    if (!Platform.isMobile()) {
      $WH.aE(document, "click", hide)
    }
  }
  function show() {
    if (container && !isVisible()) {
      adjust();
      if (currentTextbox) {
        currentTextbox.setAttribute("data-has-live-search", "true")
      }
      $(container).css({
        opacity: "0"
      }).show().animate({
        opacity: "1"
      }, "fast", null, doneShowing)
    }
  }
  function doneShowing(a) {
    $(this).css("opacity", "")
  }
  function hide(e) {
    if (e && !g_isLeftClick(e)) {
      return
    }
    if (container) {
      container.style.display = "none"
    }
    if (currentTextbox) {
      currentTextbox.setAttribute("data-has-live-search", "false")
    }
  }
  function highlight(match, $1) {
    return ($1 ? match : "<b><u>" + match + "</u></b>")
  }
  function display(textbox, search, suggz, dataz) {
    prepare();
    show();
    var isMobile = Platform.isMobile();
    hasData = 1;
    selection = null;
    while (container.firstChild) {
      $WH.de(container.firstChild)
    }
    search = search.replace(/[^a-z0-9\-]/gi, " ");
    search = $WH.trim(search.replace(/\s+/g, " "));
    var regex = g_createOrRegex(search, (search == "s" ? "[%]" : null));
    if (Platform.isMobile()) {
      var firstDiv = $WH.ce("div");
      var firstDivDiv = $WH.ce("div");
      var firstA = $WH.ce("a");
      firstA.innerHTML = '<i class="fa fa-times"></i><span class="q10">' + LANG.zul_closesearch + "</span>";
      firstA.onclick = hide;
      $WH.ae(firstDivDiv, firstA);
      $WH.ae(firstDiv, firstDivDiv);
      $WH.ae(container, firstDiv)
    }
    for (var i = 0, len = suggz.length; i < len; ++i) {
      var pos = suggz[i].lastIndexOf("(");
      if (pos != -1) {
        suggz[i] = suggz[i].substr(0, pos - 1)
      }
      var type = dataz[i][0],
          typeId = dataz[i][1],
          param1 = dataz[i][2],
          param2 = dataz[i][3],
          a = $WH.ce("a"),
          sp = $WH.ce("i"),
          sp2 = $WH.ce("span"),
          div = $WH.ce("div"),
          div2 = $WH.ce("div");
      div.i = i;
      a.onmouseover = aOver;
      a.href = "/" + (type == 10 && param2 ? "statistic" : g_types[type]) + "=" + typeId;
      if (textbox._append) {
        a.rel += textbox._append
      }
      if (type == 1 && param1 != null) {
        div.className += " live-search-icon-boss"
      } else {
        if (type == 3 && param2 != null) {
          a.className += " q" + param2
        } else {
          if (type == 4 && param1 != null) {
            a.className += " q" + param1
          } else {
            if (type == 13) {
              a.className += " c" + typeId
            }
          }
        }
      }
      if ((type == 3 || type == 6 || type == 9 || type == 10 || type == 13 || type == 14 || type == 15 || type == 17) && param1) {
        div.className += " live-search-icon";
        div.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/" + (isMobile ? "medium" : "small") + "/" + param1.toLowerCase() + ".jpg)"
      } else {
        if ((type == 5 || type == 11) && param1 >= 1 && param1 <= 2) {
          div.className += " live-search-icon-quest-" + (param1 == 1 ? "alliance" : "horde")
        }
      }
      if (type == 220) {
        if (param1 in g_hearthstone_qualities) {
          $WH.ae(sp, $WH.ct(g_hearthstone_qualities[param1] + " "))
        }
        if (param2 in g_hearthstone_cardtypes) {
          $WH.ae(sp, $WH.ct(g_hearthstone_cardtypes[param2] + " "))
        }
      }
      $WH.ae(sp, $WH.ct(LANG.types[type][0]));
      $WH.ae(a, sp);
      var buffer = suggz[i];
      buffer = buffer.replace(regex, highlight);
      if (type == 11) {
        buffer = buffer.replace("%s", '<span class="q0">&lt;' + LANG.name + "&gt;</span>")
      }
      sp2.innerHTML = buffer;
      $WH.ae(a, sp2);
      if (type == 6 && param2) {
        $WH.ae(a, $WH.ct(" (" + param2 + ")"))
      }
      $WH.ae(div2, a);
      $WH.ae(div, div2);
      $WH.ae(container, div)
    }
  }
  function receive(xhr, opt) {
    var text = xhr.responseText;
    if (text.charAt(0) != "[" || text.charAt(text.length - 1) != "]") {
      return
    }
    var a = eval(text);
    var search = a[0];
    if (search == opt.search) {
      if (a.length == 8) {
        display(opt.textbox, search, a[1], a[7])
      } else {
        hide()
      }
    }
  }
  function fetch(textbox, search) {
    new Ajax("/search?q=" + $WH.urlencode(search) + "&opensearch", {
      onSuccess: receive,
      textbox: textbox,
      search: search
    })
  }
  function preFetch(textbox, search) {
    if (cancelNext) {
      cancelNext = 0;
      return
    }
    hasData = 0;
    if (timer > 0) {
      clearTimeout(timer);
      timer = 0
    }
    timer = setTimeout(fetch.bind(0, textbox, search), LIVESEARCH_DELAY)
  }
  function cycle(dir) {
    if (!isVisible()) {
      if (hasData) {
        show()
      }
      return
    }
    var firstNode = (container.childNodes[0].nodeName == "EM" ? container.childNodes[3] : container.firstChild);
    var bakDiv = dir ? firstNode : container.lastChild;
    if (lastDiv == null) {
      colorDiv(bakDiv)
    } else {
      var div = dir ? lastDiv.nextSibling : lastDiv.previousSibling;
      if (div) {
        if (div.nodeName == "STRONG") {
          div = container.lastChild
        }
        colorDiv(div)
      } else {
        colorDiv(bakDiv)
      }
    }
  }
  function onKeyUp(e) {
    e = $WH.$E(e);
    var textbox = e._target;
    var search = $WH.trim(textbox.value.replace(/\s+/g, " "));
    if (search == lastSearch[textbox.id]) {
      return
    }
    lastSearch[textbox.id] = search;
    if (textbox != document) {
      currentTextbox = textbox
    }
    if (search.length) {
      preFetch(textbox, search)
    } else {
      hide()
    }
  }
  function onKeyDown(e) {
    e = $WH.$E(e);
    switch (e.keyCode) {
    case 27:
      hide();
      break;
    case 38:
      cycle(0);
      break;
    case 40:
      cycle(1);
      break
    }
  }
  function onFocus(e) {
    e = $WH.$E(e);
    var textbox = e._target;
    if (textbox != document) {
      currentTextbox = textbox
    }
  }
  this.attach = function (textbox) {
    textbox = $(textbox);
    if (!textbox.length) {
      return
    }
    textbox = textbox[0];
    if (textbox.getAttribute("autocomplete") == "off") {
      return
    }
    textbox.setAttribute("autocomplete", "off");
    $WH.aE(textbox, "focus", onFocus);
    $WH.aE(textbox, "keyup", onKeyUp);
    $WH.aE(textbox, "keydown", onKeyDown)
  };
  this.reset = function (textbox) {
    lastSearch[textbox.id] = null;
    textbox.value = "";
    hasData = 0;
    hide()
  };
  this.hide = function () {
    hide()
  }
};
var LOCALE_ENUS = 0;
var LOCALE_FRFR = 2;
var LOCALE_DEDE = 3;
var LOCALE_ZHCN = 4;
var LOCALE_ESES = 6;
var LOCALE_RURU = 7;
var LOCALE_PTBR = 8;
var LOCALE_ITIT = 9;
var Locale = {
  current: {},
  locales: {
    0: {
      id: LOCALE_ENUS,
      name: "enus",
      domain: "www.wowhead.com",
      description: "English"
    },
    2: {
      id: LOCALE_FRFR,
      name: "frfr",
      domain: "fr.wowhead.com",
      description: "Fran" + String.fromCharCode(231) + "ais"
    },
    3: {
      id: LOCALE_DEDE,
      name: "dede",
      domain: "de.wowhead.com",
      description: "Deutsch"
    },
    4: {
      id: LOCALE_ZHCN,
      name: "zhcn",
      domain: "cn.wowhead.com",
      description: "简体中文"
    },
    6: {
      id: LOCALE_ESES,
      name: "eses",
      domain: "es.wowhead.com",
      description: "Espa" + String.fromCharCode(241) + "ol"
    },
    7: {
      id: LOCALE_RURU,
      name: "ruru",
      domain: "ru.wowhead.com",
      description: String.fromCharCode(1056, 1091, 1089, 1089, 1082, 1080, 1081)
    },
    8: {
      id: LOCALE_PTBR,
      name: "ptbr",
      domain: "pt.wowhead.com",
      description: "Português Brasileiro"
    },
    9: {
      id: LOCALE_ITIT,
      name: "itit",
      domain: "it.wowhead.com",
      description: "Italiano"
    }
  },
  getAll: function () {
    var b = [];
    for (var c in Locale.locales) {
      b.push(Locale.locales[c])
    }
    return b
  },
  getAllByName: function () {
    var b = Locale.getAll();
    b.sort(function (e, c) {
      return $WH.strcmp(e.description, c.description)
    });
    return b
  },
  getId: function () {
    return Locale.current.id
  },
  getName: function () {
    var b = Locale.getId();
    return Locale.locales[b].name
  },
  get: function () {
    var b = Locale.getId();
    return Locale.locales[b]
  },
  set: function (b) {
    $.extend(Locale.current, Locale.locales[b])
  }
};
Locale.set(LOCALE_ENUS);
if ((typeof g_hearthhead != "undefined") && g_hearthhead) {
  (function () {
    for (var b in Locale.locales) {
      Locale.locales[b].domain = Locale.locales[b].domain.replace(/wowhead.com$/, "hearthhead.com")
    }
  })()
}
var LoginDialog = new
function () {
  var c;
  var b = null;
  this.onShow = function () {
    b = $WH.g_setHash("login")
  };
  this.onHide = function () {
    if (b && b != "#login" && (b.indexOf("screenshots:") == -1 || b.indexOf("videos:") == -1)) {
      $WH.g_setHash(b)
    } else {
      $WH.g_clearHash()
    }
  };
  this.onSubmit = function (j, f, h) {
    if (j.submitting) {
      return false
    }
    for (var g = 0; g < h.elements.length; ++g) {
      h.elements[g].disabled = true
    }
    j.submitting = true;
    var e = "/account=signin";
    if (location.pathname != "/") {
      e += "?next=" + location.pathname
    }
    $WH.g_visitUrlWithPostData(e, {
      username: h.username.value,
      password: h.password.value,
      remember_me: h.remember_me.checked,
      masterpass: ""
    });
    return false
  };
  this.show = function () {
    if (!c) {
      this.init()
    }
    var e = {
      mode: 0
    };
    e.remember_me = 1;
    e.focus = "username";
    c.show("login", {
      data: e,
      onShow: this.onShow,
      onHide: this.onHide,
      onSubmit: this.onSubmit
    })
  };
  this.checkPound = function () {
    if (location.hash && location.hash == "#login") {
      LoginDialog.show()
    }
  };
  this.init = function () {
    c = new Dialog();
    Dialog.templates.login = {
      width: 550,
      buttons: [
        ["x", LANG.cancel]
      ],
      fields: [{
        id: "iframe",
        type: "dynamic",
        compute: function (h, j, f, k, g) {
          var e = $WH.ce("iframe");
          e.id = e.className = "zul-bar-login-lightbox-iframe";
          e.src = ($WH.isset("g_dev") && g_dev && $WH.isset("g_enablessl") && !g_enablessl ? "http" : "https") + "://" + location.host + "/account=signin-form&next=" + location.pathname;
          e.frameBorder = "0";
          e.allowTransparency = "true";
          $WH.ae(k, e)
        }
      },
      {
        id: "forgot",
        type: "caption",
        compute: function (j, l, e, g, h) {
          g.className = "login-dialog-cell";
          var k = $WH.ce("div");
          k.style.textAlign = "right";
          k.style.position = "relative";
          var f = $WH.ce("div", {
            className: "login-dialog-caption",
            innerHTML: LANG.zul_createone
          });
          $WH.ae(k, f);
          $WH.ae(g, k)
        }
      }],
      onInit: function (e) {},
      onShow: function (e) {
        setTimeout(function () {
          g_safeFocus($WH.ge("zul-bar-login-lightbox-iframe"))
        }, 100);
        setTimeout(Lightbox.reveal, 250)
      }
    }
  };
  $(document).ready(this.checkPound)
};

function Mapper(c, e) {
  $WH.cO(this, c);
  if (this.parent && !this.parent.nodeName) {
    this.parent = $WH.ge(this.parent)
  } else {
    if (!this.parent) {
      return
    }
  }
  var b;
  this.mouseX = this.mouseY = 0;
  this.editable = this.editable || false;
  this.overlay = this.overlay || false;
  if (this.editable) {
    this.zoomable = this.toggle = false;
    this.show = this.mouse = true
  } else {
    this.zoomable = (this.zoomable == null ? true : this.zoomable);
    this.toggle = (this.toggle == null ? true : this.toggle);
    this.show = (this.show == null ? true : this.show);
    this.mouse = (this.mouse == null ? false : this.mouse)
  }
  this.buttons = (this.buttons == null ? true : this.buttons);
  this.zoneLink = (this.zoneLink == null ? true : this.zoneLink);
  if (location.href.indexOf("zone=") != -1) {
    this.zoneLink = false
  }
  this.zoom = (this.zoom == null ? 0 : this.zoom);
  this.zone = (this.zone == null ? 0 : this.zone);
  this.level = (this.level == null ? (Mapper.zoneDefaultLevel[this.zone] ? Mapper.zoneDefaultLevel[this.zone] : 0) : this.level);
  this.pins = [];
  this.nCoords = 0;
  this.tempWidth = null;
  this.tempHeight = null;
  this.parent.className = "mapper";
  this.parent.appendChild(this.span = $WH.ce("span", {
    className: "mapper-map"
  }));
  $WH.ns(this.span);
  this.overlaySpan = b = $WH.ce("div", {
    className: "mapper-overlay"
  });
  this.overlaySpan.appendChild($WH.ce("div", {
    className: "mapper-overlay-expander"
  }));
  this.span.appendChild(b);
  this.buttonDiv = b = $WH.ce("div");
  b.style.position = "absolute";
  b.style.top = b.style.right = "3px";
  if (this.buttons) {
    this.parent.appendChild(b)
  }
  if (this.editable) {
    this.span.onmouseup = this.addPin.bind(this);
    b = g_createGlow(LANG.mapper_tippin);
    b.style.fontSize = "13px";
    b.style.position = "absolute";
    b.style.bottom = b.style.right = "0";
    $WH.ns(b);
    this.parent.appendChild(b)
  } else {
    this.sToggle = b = $WH.g_createButton(LANG.mapper_hidepins, null, {
      click: this.toggleShow.bind(this)
    });
    b.style["float"] = "right";
    b.style.display = "none";
    $WH.ns(b);
    this.buttonDiv.appendChild(b)
  }
  if (this.zoomable && !Platform.isMobile()) {
    this.span.onclick = this.toggleZoom.bind(this);
    this.span.id = "sjdhfkljawelis" + (this.unique !== undefined ? this.unique : "");
    this.sZoom = b = g_createGlow(LANG.mapper_tipzoom, "mapper-zoomtip");
    b.style.fontSize = "13px";
    b.style.position = "absolute";
    b.style.bottom = b.style.right = "0";
    $WH.ns(b);
    this.span.appendChild(b)
  }
  this.sZoneLink = b = g_createGlow("");
  b.style.display = "none";
  b.style.position = "absolute";
  b.style.top = b.style.left = "0";
  this.parent.appendChild(b);
  if (this.mouse) {
    this.parent.onmouseout = (function () {
      this.timeout = setTimeout((function () {
        this.sMouse.style.display = "none"
      }).bind(this), 1)
    }).bind(this);
    this.parent.onmouseover = (function () {
      clearTimeout(this.timeout);
      this.sMouse.style.display = ""
    }).bind(this);
    this.span.onmousemove = this.span.onmousedown = this.getMousePos.bind(this);
    this.sMouse = b = g_createGlow("(0.0, 0.0)");
    b.style.display = "none";
    b.style.position = "absolute";
    b.style.bottom = b.style.left = "0";
    b.onmouseup = $WH.sp;
    $WH.ns(b);
    this.span.appendChild(b)
  }
  this.floorPins = {};
  if (c.coords != null) {
    this.setCoords(c.coords)
  } else {
    if (c.link != null) {
      this.setLink(c.link)
    }
  }
  if (c.objectives) {
    this.setObjectives(c.objectives)
  }
  if (c.zoneparent && c.zones) {
    this.setZones(c.zoneparent, c.zones)
  }
  this.updateMap(e)
}
Mapper.sizes = [
  [488, 325, "normal"],
  [772, 515, "zoom"],
  [1002, 668, "original"],
  [224, 149, "small"]
];
Mapper.onlyOneFloor = {
  4120: true,
  4264: true,
  4375: true,
  4415: true,
  4493: true,
  4500: true,
  4603: true,
  4723: true,
  4809: true,
  4813: true,
  4820: true
};
Mapper.zoneLevelOffset = {};
Mapper.garrisonLevelsToMapTiers = {
  7004: {
    26: 1,
    27: 2,
    28: 3
  },
  7078: {
    23: 1,
    24: 2,
    25: 3
  }
};
Mapper.zoneDefaultLevel = {
  3456: 5,
  4812: 5,
  6298: 1,
  6142: 3,
  6611: 1
};
Mapper.remappedLevels = {
  4273: {
    6: 5
  },
  2257: {
    0: 2
  }
};
Mapper.multiLevelZones = {};
Mapper.zonePhased = {};
Mapper.prototype = {
  getMap: function () {
    return this.parent
  },
  update: function (c, h) {
    if (c.zoom != null) {
      this.zoom = c.zoom
    }
    if (c.zone != null) {
      this.zone = c.zone
    }
    if (c.show != null) {
      this.show = c.show
    }
    this.pins = [];
    this.nCoords = 0;
    for (var g in this.floorPins) {
      if (this.floorPins[g].parentNode) {
        $WH.de(this.floorPins[g])
      }
    }
    this.floorPins = {};
    if (this.floorButton) {
      $WH.de(this.floorButton);
      this.floorButton = null
    }
    var b = (c.level === undefined ? 0 : this.fixLevel(parseInt(c.level), this.zone));
    if (!c.preservelevel) {
      this.level = 0
    } else {
      b = this.level
    }
    var e = false;
    if ($WH.isset("g_mapperData")) {
      e = g_mapperData
    } else {
      if ($WH.isset("g_mapper_data")) {
        e = g_mapper_data
      }
    }
    if (e && e[this.zone] && !c.coords) {
      var k = e[this.zone];
      var f = -1;
      for (var g in k) {
        g = parseInt(g);
        var l = this.fixLevel(g, this.zone);
        if (c.level === undefined && k[g].count > f) {
          b = parseInt(l);
          f = k[g].count
        }
        if (k[g].coords) {
          this.setCoords(k[g].coords, l)
        }
      }
      this.level = b;
      if (this.floorPins[this.level]) {
        $WH.ae(this.span, this.floorPins[this.level])
      }
    } else {
      if (c.coords != null) {
        var j = 999;
        for (var g in c.coords) {
          g = parseInt(g);
          var l = this.fixLevel(g, this.zone);
          this.setCoords(c.coords[g], l);
          if (l < j) {
            j = l
          }
        }
        if (j != 999 && !c.preservelevel) {
          this.level = j
        }
        if (this.floorPins[this.level]) {
          $WH.ae(this.span, this.floorPins[this.level])
        }
      } else {
        if (c.link != null) {
          this.setLink(c.link)
        }
      }
    }
    this.updateMap(h)
  },
  fixLevel: function (f, b) {
    if (Mapper.zoneLevelOffset[b] !== undefined) {
      f += Mapper.zoneLevelOffset[b]
    } else {
      if (Mapper.multiLevelZones[b] && f > 0) {
        var e = Mapper.multiLevelZones[b][0];
        var c = e.match(/^(\d+)-(\d+)$/);
        if (c && c[2]) {
          f -= parseInt(c[2])
        } else {
          f += -1
        }
      }
    }
    if (Mapper.remappedLevels[b] && Mapper.remappedLevels[b][f] !== undefined) {
      f = Mapper.remappedLevels[b][f]
    }
    return f
  },
  getZone: function () {
    return this.zone
  },
  setZone: function (b, e, c) {
    this.pins = [];
    this.nCoords = 0;
    if (this.floorPins[this.level]) {
      $WH.de(this.floorPins[this.level])
    }
    this.floorPins = {};
    if (this.floorButton) {
      $WH.de(this.floorButton);
      this.floorButton = null
    }
    this.zone = b;
    this.level = e | 0;
    this.updateMap(c);
    return true
  },
  getFloorsMenu: function () {
    if (!Mapper.multiLevelZones[this.zone]) {
      return null
    }
    var h = [];
    var e = Mapper.multiLevelZones[this.zone];
    var g = (Mapper.zonePhased[this.zone] ? g_zone_phases : g_zone_areas);
    var c = (function (j) {
      return j[0] == this.level || (this.level === undefined && j[0] == 0)
    }).bind(this);
    for (var f = 0; f < e.length; ++f) {
      if (e[f] == "") {
        continue
      }
      var b;
      if (!g[this.zone]) {
        b = [f, (Mapper.zonePhased[this.zone] ? "[Phase " : "[Level ") + (f + 1) + "]", this.setMap.bind(this, e[f], f, true)]
      } else {
        b = [f, g[this.zone][f], this.setMap.bind(this, e[f], f, true)]
      }
      b[MENU_IDX_OPT] = {
        checkedFunc: c
      };
      h.push(b)
    }
    return h
  },
  setMap: function (c, e, k) {
    if (e != this.level) {
      if (this.floorPins[this.level]) {
        $WH.de(this.floorPins[this.level])
      }
      if (this.floorPins[e]) {
        $WH.ae(this.span, this.floorPins[e])
      }
      this.level = e
    }
    var j = Locale.getName();
    if ($WH.isset("g_ptr") && g_ptr) {
      j = "ptr"
    } else {
      if ($WH.isset("g_beta") && g_beta) {
        j = "beta"
      } else {
        if ($WH.isset("g_old") && g_old) {
          j = "old"
        }
      }
    }
    this.span.style.background = "url(" + g_staticUrl + "/images/wow/maps/" + j + "/" + Mapper.sizes[this.zoom][2] + "/" + c + ".jpg?" + g_wow_build + ")";
    if (this.overlay) {
      this.overlaySpan.style.background = "url(" + g_staticUrl + "/images/wow/maps/overlay/" + Mapper.sizes[this.zoom][2] + "/" + c + ".png?" + g_wow_build + ")"
    }
    if (this.sZoneLink) {
      var h = "";
      var g = parseInt(this.zone);
      var l = g_zones[g] != null;
      var b = (Mapper.zonePhased[this.zone] ? g_zone_phases : g_zone_areas);
      if (l) {
        if (this.zoneLink) {
          h += '<a href="/zone=' + g + '">' + g_zones[g] + "</a>"
        }
        if (Mapper.multiLevelZones[g]) {
          if (this.zoneLink) {
            h += ": "
          }
          h += (b[g] ? b[g][this.level] : (Mapper.zonePhased[g] ? "Phase " : "Level ") + (this.level + 1))
        }
        g_setInnerHtml(this.sZoneLink, h, "div");
        if (this.zoneLink) {
          for (var f = 0; f < 9; ++f) {
            if (f == 4) {
              continue
            }
            this.sZoneLink.childNodes[f].firstChild.style.color = "black"
          }
        }
      }
      this.sZoneLink.style.display = l ? "" : "none"
    }
    if (k) {
      this.onMapUpdate && this.onMapUpdate(this)
    }
  },
  setObjectives: function (k) {
    var c = {
      start: 1,
      end: 1,
      startend: 1,
      sourcestart: 1,
      sourceend: 1
    };
    for (var o in k) {
      var n = k[o];
      if (g_mapperData[o] === undefined) {
        g_mapperData[o] = {}
      }
      var j = {};
      var m = 0;
      for (var e in n.levels) {
        var b = n.levels[e];
        var h = ShowOnMap.combinePins(b);
        var f = h[0];
        g_mapperData[o][e] = {
          count: f.length,
          coords: []
        };
        for (var g = 0; g < f.length; ++g) {
          var p = ShowOnMap.buildTooltip(f[g].list);
          g_mapperData[o][e].coords.push([f[g].coord[0], f[g].coord[1],
          {
            type: p[1],
            url: p[2],
            menu: p[3],
            label: p[0]
          }])
        }
      }
    }
  },
  setZones: function (n, o) {
    n = $("#" + n);
    if (!n || !o || o.length == 0 || !this.objectives) {
      return
    }
    var s = function (B, G, A, H) {
      var F = [false, -1];
      for (var D = 0; D < A.length; ++D) {
        if (D > 0) {
          u.append((D == A.length - 1 ? LANG.and : LANG.comma))
        }
        var E = null;
        if (B.objectives[A[D][0]].mappable > 0) {
          E = $("<a/>", {
            href: "javascript:;",
            text: B.objectives[A[D][0]].zone
          });
          E.click(function (J, I) {
            B.update({
              zone: I
            });
            g_setSelectedLink(J, "mapper")
          }.bind(B, E[0], A[D][0]));
          E.isLink = true
        } else {
          E = $("<a/>", {
            href: "/zone=" + A[D][0],
            text: B.objectives[A[D][0]].zone
          });
          g_addTooltip(E[0], LANG.tooltip_zonelink)
        }
        if (o.length > 1) {
          var C = H[A[D][0]];
          if (C.start && C.end) {
            E.addClass("icontiny");
            E.css("background-image", "url(" + g_staticUrl + "/images/wow/icons/tiny/quest_startend.gif)");
            E.css("padding-left", "20px")
          } else {
            if (C.start) {
              E.addClass("icontiny");
              E.css("background-image", "url(" + g_staticUrl + "/images/wow/icons/tiny/quest_start.gif)");
              E.css("padding-left", "14px")
            } else {
              if (C.end) {
                E.addClass("icontiny");
                E.css("background-image", "url(" + g_staticUrl + "/images/wow/icons/tiny/quest_end.gif)");
                E.css("padding-left", "16px")
              }
            }
          }
        }
        G.append(E);
        if (A[D][1] > F[1]) {
          F = [E, A[D][1]]
        }
      }
      return F[0]
    };
    var k = function (A, E, D) {
      var B = [];
      for (var C = 0; C < A.length; ++C) {
        if (E[A[C][0]][D]) {
          B.push(A[C])
        }
      }
      return B
    };
    var g = {};
    var l = {
      start: [],
      end: [],
      objective: []
    };
    for (var e in this.objectives) {
      if (g[e] === undefined) {
        g[e] = {}
      }
      var v = this.objectives[e];
      for (var p in v.levels) {
        var c = v.levels[p];
        for (var t = 0; t < c.length; ++t) {
          if (c[t].point == "start" || c[t].point == "sourcestart") {
            l.start.push(e);
            g[e].start = true
          } else {
            if (c[t].point == "end" || c[t].point == "sourceend") {
              l.end.push(e);
              g[e].end = true
            } else {
              if (c[t].point == "requirement" || c[t].point == "sourcerequirement") {
                l.objective.push(e);
                g[e].objective = true
              }
            }
          }
        }
      }
    }
    n.append(g_getMajorHeading(LANG.mapper_relevantlocs, 2, 3));
    if (o.length == 1 && this.missing == 0) {
      var u = $("<span/>", {
        html: LANG.mapper_entiretyinzone.replace("$$", "<b>" + this.objectives[o[0][0]].zone + "</b>.")
      });
      n.append(u);
      this.update({
        zone: o[0][0]
      })
    } else {
      if (this.missing > 0) {
        var u = $("<span/>");
        var m = false,
            j = false,
            w = false;
        l.objective = $WH.array_unique(l.objective);
        l.start = $WH.array_unique(l.start);
        l.end = $WH.array_unique(l.end);
        var y = l.start.length > 0 && $WH.array_compare(l.start, l.end);
        var f = l.start.length > 0 && $WH.array_compare(l.start, l.objective);
        var q = l.end.length > 0 && $WH.array_compare(l.end, l.objective);
        var z = k(o, g, "objective");
        var b = k(o, g, "start");
        var h = k(o, g, "end");
        if (y && f) {
          var r = LANG.mapper_happensin.split("$$");
          u.text(r[0]);
          m = s(this, u, o, g);
          u.append(r[1])
        } else {
          if (y && l.objective.length == 0) {
            var r = LANG.mapper_objectives.sex.split("$$");
            u.text(r[0]);
            m = s(this, u, o, g);
            u.append(r[1])
          } else {
            if (y) {
              var r = LANG.mapper_objectives.ox_sey.split("$$");
              u.text(r[0]);
              m = s(this, u, b, g);
              u.append(r[1]);
              j = s(this, u, z, g);
              u.append(r[2])
            } else {
              if (f && l.end.length == 0) {
                var r = LANG.mapper_objectives.osx.split("$$");
                u.text(r[0]);
                m = s(this, u, o, g);
                u.append(r[1])
              } else {
                if (f) {
                  var r = LANG.mapper_objectives.osx_ey.split("$$");
                  u.text(r[0]);
                  m = s(this, u, z, g);
                  u.append(r[1]);
                  j = s(this, u, h, g);
                  u.append(r[2])
                } else {
                  if (q && l.start.length == 0) {
                    var r = LANG.mapper_objectives.oex.split("$$");
                    u.text(r[0]);
                    m = s(this, u, o, g);
                    u.append(r[1])
                  } else {
                    if (q) {
                      var r = LANG.mapper_objectives.oex_sy.split("$$");
                      u.text(r[0]);
                      m = s(this, u, b, g);
                      u.append(r[1]);
                      j = s(this, u, z, g);
                      u.append(r[2])
                    } else {
                      if (l.start.length > 0 && l.end.length > 0 && l.objective.length > 0) {
                        var r = LANG.mapper_objectives.ox_sy_ez.split("$$");
                        u.text(r[0]);
                        m = s(this, u, b, g);
                        u.append(r[1]);
                        j = s(this, u, z, g);
                        u.append(r[2]);
                        w = s(this, u, h, g);
                        u.append(r[3])
                      } else {
                        if (l.start.length > 0 && l.end.length > 0) {
                          var r = LANG.mapper_objectives.sx_ey.split("$$");
                          u.text(r[0]);
                          m = s(this, u, b, g);
                          u.append(r[1]);
                          j = s(this, u, h, g);
                          u.append(r[2])
                        } else {
                          if (l.start.length > 0 && l.objective.length > 0) {
                            var r = LANG.mapper_objectives.ox_sy.split("$$");
                            u.text(r[0]);
                            m = s(this, u, b, g);
                            u.append(r[1]);
                            j = s(this, u, z, g);
                            u.append(r[2])
                          } else {
                            if (l.end.length > 0 && l.objective.length > 0) {
                              var r = LANG.mapper_objectives.ox_ey.split("$$");
                              u.text(r[0]);
                              m = s(this, u, z, g);
                              u.append(r[1]);
                              j = s(this, u, h, g);
                              u.append(r[2])
                            } else {
                              if (l.start.length > 0) {
                                var r = LANG.mapper_objectives.sx.split("$$");
                                u.text(r[0]);
                                m = s(this, u, o, g);
                                u.append(r[1])
                              } else {
                                if (l.end.length > 0) {
                                  var r = LANG.mapper_objectives.ex.split("$$");
                                  u.text(r[0]);
                                  m = s(this, u, o, g);
                                  u.append(r[1])
                                } else {
                                  if (l.objective.length > 0) {
                                    var r = LANG.mapper_objectives.ox.split("$$");
                                    u.text(r[0]);
                                    m = s(this, u, o, g);
                                    u.append(r[1])
                                  } else {
                                    var r = LANG.mapper_happensin.split("$$");
                                    u.text(r[0]);
                                    m = s(this, u, o, g);
                                    u.append(r[1])
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        n.append(u);
        if (m && m.isLink) {
          m.click()
        } else {
          if (j && j.isLink) {
            j.click()
          } else {
            if (w && w.isLink) {
              w.click()
            }
          }
        }
      } else {
        var r = LANG.mapper_happensin.split("$$");
        var u = $("<span/>", {
          text: r[0]
        });
        var m = s(this, u, o, g);
        u.append(r[1]);
        n.append(u);
        if (m && m.isLink) {
          m.click()
        }
      }
    }
  },
  setSize: function (b, c) {
    this.tempWidth = b;
    this.tempHeight = c;
    this.updateMap(true)
  },
  getZoom: function () {
    return this.zoom
  },
  setZoom: function (b, c) {
    this.zoom = b;
    this.tempWidth = this.tempHeight = null;
    this.updateMap(c)
  },
  toggleZoom: function (b) {
    this.zoom = 1 - this.zoom;
    this.updateMap(true);
    if (b) {
      this.getMousePos(b)
    }
    if (this.sZoom) {
      if (this.sZoom.style.display == "none") {
        this.sZoom.style.display = ""
      } else {
        this.sZoom.style.display = "none"
      }
    }
    if (this.zoom) {
      MapViewer.show({
        mapper: this
      })
    }
  },
  getShow: function () {
    return this.show
  },
  setShow: function (b) {
    this.show = b;
    var e = this.show ? "" : "none";
    for (var c in this.floorPins) {
      this.floorPins[c].style.display = e
    }
    this.sToggle.innerHTML = this.show ? LANG.mapper_hidepins : LANG.mapper_showpins
  },
  toggleShow: function () {
    this.setShow(!this.show)
  },
  getCoords: function () {
    var b = [];
    for (var c in this.pins) {
      if (!this.pins[c].free) {
        b.push([this.pins[c].x, this.pins[c].y])
      }
    }
    return b
  },
  clearPins: function () {
    for (var b in this.pins) {
      this.pins[b].style.display = "none";
      this.pins[b].free = true
    }
  },
  setCoords: function (q, m) {
    var o;
    var c, k;
    if (m === undefined) {
      this.clearPins();
      if (q.length) {
        k = true;
        c = 0
      } else {
        for (var j in q) {
          c = j;
          break
        }
        if (c == null) {
          return
        }
        q = q[c]
      }
      c = parseInt(c);
      if (!k) {
        c = this.fixLevel(c, this.zone);
        this.level = c
      }
    } else {
      c = m
    }
    this.nCoords = q.length;
    for (var j in q) {
      var n = q[j],
          f = n[2];
      if (n[0] === undefined || n[1] === undefined) {
        continue
      }
      o = this.getPin(c);
      o.x = n[0];
      o.y = n[1];
      o.style.left = o.x + "%";
      o.style.top = o.y + "%";
      if (this.editable) {
        o.a.onmouseup = this.delPin.bind(this, o)
      } else {
        if (f && f.url) {
          o.a.href = Markup._fixUrl(f.url);
          o.a.rel = "np";
          o.a.style.cursor = "pointer"
        }
      }
      if (f && f.tooltip) {
        o.a.tt = "";
        var l = false;
        for (var b in f.tooltip) {
          if (o.a.tt != "") {
            o.a.tt += "<br />"
          }
          o.a.tt += '<b class="q">' + b + "</b> ($)<br />";
          for (var u in f.tooltip[b].info) {
            o.a.tt += "<div>" + f.tooltip[b].info[u] + "</div>"
          }
          if (!l && f.tooltip[b].footer) {
            o.a.tt += f.tooltip[b].footer + "<br />";
            l = true
          }
        }
      } else {
        if (f && f.label) {
          o.a.tt = f.label
        } else {
          o.a.tt = "$"
        }
      }
      if (f && f.menu) {
        o.a.menu = f.menu;
        Menu.add(o.a, o.a.menu, {
          showAtCursor: true
        })
      }
      if (f && f.type) {
        o.className += " pin-" + f.type
      }
      if (f && f.mapicon) {
        o.className += " pin-object";
        o.a.style.backgroundPosition = (((f.mapicon + 2) % 8) * -16) + "px " + (Math.floor((f.mapicon + 2) / 8) * -16) + "px"
      }
      o.a.tt = $WH.str_replace(o.a.tt, "$", o.x.toFixed(1) + ", " + o.y.toFixed(1));
      if (f && f.lines) {
        for (var e = 0, h = f.lines.length; e < h; ++e) {
          if (n[0] == f.lines[e][0] && n[1] == f.lines[e][1]) {
            continue
          }
          for (var t = 0, g = Mapper.sizes.length; t < g; ++t) {
            var r = Mapper.sizes[t];
            o = Line(n[0] * r[0] / 100, n[1] * r[1] / 100, f.lines[e][0] * r[0] / 100, f.lines[e][1] * r[1] / 100, f.type);
            o.className += " " + r[2];
            $WH.ae(this.floorPins[c], o)
          }
        }
      }
    }
    this.onPinUpdate && this.onPinUpdate(this)
  },
  getLink: function () {
    var c = "";
    for (var b in this.pins) {
      if (!this.pins[b].free && this.pins[b].floor == this.level) {
        c += (this.pins[b].x < 10 ? "0" : "") + (this.pins[b].x < 1 ? "0" : "") + (this.pins[b].x * 10).toFixed(0) + (this.pins[b].y < 10 ? "0" : "") + (this.pins[b].y < 1 ? "0" : "") + (this.pins[b].y * 10).toFixed(0)
      }
    }
    return (this.zone ? this.zone : "") + (Mapper.multiLevelZones[this.zone] && this.level != 0 ? "." + this.level : "") + (c ? ":" + c : "")
  },
  setLink: function (j, f, m) {
    var l = [];
    j = j.split(":");
    var g = j[0];
    var b = 0;
    if (g.indexOf(".") != -1) {
      var e = g.split(".");
      g = e[0];
      b = parseInt(e[1])
    }
    b = (m && m != -1 && !b) ? m : b;
    if (!this.setZone(g, b, f)) {
      return false
    }
    if (j.length == 2) {
      for (var c = 0; c < j[1].length; c += 6) {
        var k = j[1].substr(c, 3) / 10;
        var h = j[1].substr(c + 3, 3) / 10;
        if (isNaN(k) || isNaN(h)) {
          break
        }
        l.push([k, h])
      }
    }
    this.setCoords(l, b);
    return true
  },
  updateMap: function (b) {
    this.parent.style.width = this.span.style.maxWidth = (this.tempWidth ? this.tempWidth : Mapper.sizes[this.zoom][0]) + "px";
    this.span.style.maxHeight = (this.tempHeight ? this.tempHeight : Mapper.sizes[this.zoom][1]) + "px";
    this.parent.setAttribute("data-mapsize", Mapper.sizes[this.zoom][2]);
    if (!this.editable) {
      this.parent.style.cssFloat = this.parent.style.styleFloat = "left"
    }
    if (this.zone == "0") {
      this.span.style.background = "black"
    } else {
      var e = this.level;
      var c = this.zone + (e ? "-" + e : "");
      if (Mapper.garrisonLevelsToMapTiers[this.zone] && Mapper.garrisonLevelsToMapTiers[this.zone][e]) {
        c = this.zone + "__" + Mapper.garrisonLevelsToMapTiers[this.zone][e]
      } else {
        if (Mapper.multiLevelZones[this.zone]) {
          c = Mapper.multiLevelZones[this.zone][e]
        }
      }
      this.setMap(c, e);
      if (!this.floorButton && Mapper.multiLevelZones[this.zone]) {
        this.floorButton = _ = $WH.g_createButton((Mapper.zonePhased[this.zone] ? LANG.mapper_phase : LANG.mapper_floor));
        _.menu = this.getFloorsMenu();
        if (_.menu && _.menu.length) {
          Menu.add(_, _.menu, {
            showAtElement: true
          })
        }
        _.style["float"] = "right";
        $WH.ns(_);
        this.buttonDiv.appendChild(_)
      } else {
        if (this.floorButton) {
          this.floorButton.style.display = Mapper.multiLevelZones[this.zone] ? "" : "none"
        }
      }
    }
    if (this.sToggle) {
      this.sToggle.style.display = (this.toggle && this.nCoords ? "" : "none")
    }
    $(".line", this.floorPins[e]).hide();
    $(".line." + Mapper.sizes[this.zoom][2], this.floorPins[e]).show();
    this.onMapUpdate && this.onMapUpdate(this)
  },
  cleanPin: function (c, e) {
    var b = this.pins[c];
    b.style.display = "";
    b.free = false;
    b.className = "pin";
    b.a.onmousedown = $WH.rf;
    b.a.onmouseup = $WH.rf;
    b.a.href = "javascript:;";
    b.a.style.cursor = "default";
    b.floor = e;
    return b
  },
  getPin: function (f) {
    for (var e = 0; e < this.pins.length; ++e) {
      if (this.pins[e].free) {
        return this.cleanPin(e, f)
      }
    }
    var c = $WH.ce("div"),
        b = $WH.ce("a");
    c.className = "pin";
    c.appendChild(b);
    c.a = b;
    c.floor = f;
    b.onmouseover = this.pinOver;
    b.onmouseout = $WH.Tooltip.hide;
    b.onclick = $WH.sp;
    this.pins.push(c);
    this.cleanPin(this.pins.length - 1, f);
    if (!this.floorPins[f]) {
      this.floorPins[f] = $WH.ce("div");
      this.floorPins[f].style.display = this.show ? "" : "none";
      if (f == this.level) {
        $WH.ae(this.span, this.floorPins[f])
      }
    }
    $WH.ae(this.floorPins[f], c);
    return c
  },
  addPin: function (c) {
    c = $WH.$E(c);
    if (c._button >= 2) {
      return
    }
    this.getMousePos(c);
    var b = this.getPin(this.level);
    b.x = this.mouseX;
    b.y = this.mouseY;
    b.style.left = b.x.toFixed(1) + "%";
    b.style.top = b.y.toFixed(1) + "%";
    b.a.onmouseup = this.delPin.bind(this, b);
    b.a.tt = b.x.toFixed(1) + ", " + b.y.toFixed(1);
    this.onPinUpdate && this.onPinUpdate(this);
    return false
  },
  delPin: function (b, c) {
    c = $WH.$E(c);
    b.style.display = "none";
    b.free = true;
    $WH.sp(c);
    this.onPinUpdate && this.onPinUpdate(this);
    return
  },
  pinOver: function () {
    $WH.Tooltip.show(this, this.tt, 4, 0)
  },
  getMousePos: function (f) {
    f = $WH.$E(f);
    var g = $WH.ac(this.parent);
    var b = $WH.g_getScroll();
    this.mouseX = Math.floor((f.clientX + b.x - g[0] - 3) / Mapper.sizes[this.zoom][0] * 1000) / 10;
    this.mouseY = Math.floor((f.clientY + b.y - g[1] - 3) / Mapper.sizes[this.zoom][1] * 1000) / 10;
    if (this.mouseX < 0) {
      this.mouseX = 0
    } else {
      if (this.mouseX > 100) {
        this.mouseX = 100
      }
    }
    if (this.mouseY < 0) {
      this.mouseY = 0
    } else {
      if (this.mouseY > 100) {
        this.mouseY = 100
      }
    }
    if (this.mouse) {
      g_setTextNodes(this.sMouse, "(" + this.mouseX.toFixed(1) + ", " + this.mouseY.toFixed(1) + ")")
    }
  }
};
var g_zone_areas = {};
var MapViewer = new
function () {
  var h, u, A, c, v, f, n, l, y, e, o, b, q, w, s;

  function k() {
    var B = Math.max(50, Math.min(618, $WH.g_getWindowSize().h - 72));
    c = 1;
    A = 1;
    if (c > 1) {
      c = 1
    }
    if (A > 1) {
      A = 1
    }
    h = Math.round(A * 772);
    u = Math.round(A * 515);
    var C = Math.max(480, h);
    Lightbox.setSize(C + 20, u + 52)
  }
  function g(B) {
    var C = function (F, E) {
      E += ":" + F.zone;
      if (F.level) {
        E += "." + F.level
      }
      return E
    };
    var D = "#map";
    if (e) {
      D += "=" + v.getLink()
    } else {
      if (Mapper.zoneDefaultLevel[v.zone]) {
        if (Mapper.zoneDefaultLevel[v.zone] != v.level) {
          D = C(v, D)
        }
      } else {
        if (v.level != 0) {
          D = C(v, D)
        } else {
          if ((!$WH.isset("g_mapperData") || !g_mapperData[v.zone]) && (!$WH.isset("g_mapper_data") || !g_mapper_data[v.zone])) {
            D = C(v, D)
          }
        }
      }
    }
    return D
  }
  function t() {
    if (n) {
      n(v)
    }
    location.replace(g(true))
  }
  function r(B) {
    if (B && (A == c) && $WH.g_getWindowSize().h > b.offsetHeight) {
      return
    }
    b.style.visibility = "hidden";
    k(0);
    if (!B) {
      if (!o) {
        o = $WH.ce("div");
        o.style.height = "325px";
        o.style.padding = "3px";
        o.style.marginTop = "10px"
      }
      v.parent.style.borderWidth = "0px";
      v.parent.style.marginTop = "0px";
      v.span.style.cursor = "pointer";
      if (v.span.onclick) {
        f = v.span.onclick
      }
      v.span.onclick = Lightbox.hide;
      v.span.onmouseover = function () {
        s.style.display = "block"
      };
      v.span.onmouseout = function () {
        setTimeout(function () {
          if (!s.hasMouse) {
            s.style.display = "none"
          }
        }, 10)
      };
      if (v.onMapUpdate) {
        n = v.onMapUpdate
      }
      v.onMapUpdate = t;
      if (!e) {
        l = v.parent.parentNode;
        y = v.parent.nextSibling;
        l.insertBefore(o, v.parent);
        $WH.de(v.parent);
        $WH.ae(w, v.parent)
      } else {
        $WH.de(e);
        $WH.ae(w, e)
      }
      if (location.hash.indexOf("#show") == -1) {
        location.replace(g(false))
      } else {
        if ($WH.isset("mapShower")) {
          mapShower.onExpand()
        }
      }
    }
    Lightbox.reveal();
    b.style.visibility = "visible"
  }
  function j() {
    r(1)
  }
  function p() {
    if (f) {
      v.span.onclick = f
    } else {
      v.span.onclick = null
    }
    f = null;
    if (n) {
      v.onMapUpdate = n
    } else {
      v.onMapUpdate = null
    }
    n = null;
    v.span.style.cursor = "";
    v.span.onmouseover = null;
    v.span.onmouseout = null;
    if (!e) {
      $WH.de(o);
      $WH.de(v.parent);
      v.parent.style.borderWidth = "";
      v.parent.style.marginTop = "";
      if (y) {
        l.insertBefore(v.parent, y)
      } else {
        $WH.ae(l, v.parent)
      }
      l = y = null
    } else {
      $WH.de(e);
      e = null
    }
    v.toggleZoom();
    if (location.hash.indexOf("#show") == -1) {
      $WH.g_clearHash()
    } else {
      if ($WH.isset("mapShower")) {
        mapShower.onCollapse()
      }
    }
  }
  function z(C, E, D) {
    v = D.mapper;
    b = C;
    if (E) {
      C.className += " mapviewer";
      q = $WH.ce("div");
      q.style.width = "772px";
      q.style.height = "515px";
      q.className = "lightbox-content mapviewer-screen";
      s = $WH.ce("a");
      s.className = "mapviewer-cover";
      s.href = "javascript:;";
      s.onclick = Lightbox.hide;
      s.onmouseover = function () {
        s.hasMouse = true
      };
      s.onmouseout = function () {
        s.hasMouse = false
      };
      var G = $WH.ce("span");
      var B = $WH.ce("b");
      $WH.ae(B, $WH.ct(LANG.close));
      $WH.ae(G, B);
      $WH.ae(s, G);
      $WH.ae(q, s);
      w = $WH.ce("div");
      $WH.ae(q, w);
      $WH.ae(C, q);
      var F = $WH.ce("a");
      F.className = "dialog-x fa fa-times";
      F.href = "javascript:;";
      F.onclick = Lightbox.hide;
      $WH.ae(F, $WH.ct(LANG.close));
      $WH.ae(C, F)
    }
    m()
  }
  function m() {
    r()
  }
  this.checkPound = function () {
    if (location.hash && location.hash.indexOf("#map") == 0) {
      var F = location.hash.split("=");
      if (F.length == 2) {
        var D = F[1];
        if (D) {
          MapViewer.show({
            link: D
          })
        }
      } else {
        F = location.hash.split(":");
        var E = $WH.ge("sjdhfkljawelis");
        if (E) {
          E.onclick()
        }
        if (F.length == 2) {
          if (!E) {
            MapViewer.show({
              link: F[1]
            })
          }
          var B = F[1].split(".");
          var C = {
            zone: B[0]
          };
          if (B.length == 2) {
            C.level = parseInt(B[1]) + 1
          }
          v.update(C)
        }
      }
    }
  };
  this.show = function (B) {
    g_trackEvent("Zone Maps", "Show", (B.link ? B.link : "General"));
    if (B.link) {
      e = $WH.ce("div");
      e.id = "fewuiojfdksl";
      $WH.ae(document.body, e);
      var C = new Mapper({
        parent: e.id
      });
      C.setLink(B.link, true);
      C.toggleZoom()
    } else {
      Lightbox.show("mapviewer", {
        onShow: z,
        onHide: p,
        onResize: j
      }, B)
    }
  };
  $(document).ready(this.checkPound)
};
var MARKUP_MODE_COMMENT = 1,
    MARKUP_MODE_ARTICLE = 2,
    MARKUP_MODE_QUICKFACTS = 3,
    MARKUP_MODE_SIGNATURE = 4,
    MARKUP_MODE_REPLY = 5,
    MARKUP_CLASS_ADMIN = 40,
    MARKUP_CLASS_STAFF = 30,
    MARKUP_CLASS_PREMIUM = 20,
    MARKUP_CLASS_USER = 10,
    MARKUP_CLASS_PENDING = 1;
var MARKUP_SOURCE_LIVE = 1,
    MARKUP_SOURCE_PTR = 2,
    MARKUP_SOURCE_BETA = 3;
var MarkupModeMap = {};
MarkupModeMap[MARKUP_MODE_COMMENT] = "comment";
MarkupModeMap[MARKUP_MODE_REPLY] = "reply";
MarkupModeMap[MARKUP_MODE_ARTICLE] = "article";
MarkupModeMap[MARKUP_MODE_QUICKFACTS] = "quickfacts";
MarkupModeMap[MARKUP_MODE_SIGNATURE] = "signature";
var MarkupSourceMap = {};
MarkupSourceMap[MARKUP_SOURCE_LIVE] = "live";
MarkupSourceMap[MARKUP_SOURCE_PTR] = "ptr";
MarkupSourceMap[MARKUP_SOURCE_BETA] = "beta";
var MarkupIconPath = "";
if ($WH.isset("g_thottbot") && g_thottbot) {
  MarkupIconPath = "/tb"
}
var Markup = {
  MODE_COMMENT: MARKUP_MODE_COMMENT,
  MODE_REPLY: MARKUP_MODE_REPLY,
  MODE_ARTICLE: MARKUP_MODE_ARTICLE,
  MODE_QUICKFACTS: MARKUP_MODE_QUICKFACTS,
  MODE_SIGNATURE: MARKUP_MODE_SIGNATURE,
  SOURCE_LIVE: MARKUP_SOURCE_LIVE,
  SOURCE_PTR: MARKUP_SOURCE_PTR,
  SOURCE_BETA: MARKUP_SOURCE_BETA,
  CLASS_ADMIN: MARKUP_CLASS_ADMIN,
  CLASS_STAFF: MARKUP_CLASS_STAFF,
  CLASS_PREMIUM: MARKUP_CLASS_PREMIUM,
  CLASS_USER: MARKUP_CLASS_USER,
  CLASS_PENDING: MARKUP_CLASS_PENDING,
  whitelistedWebsites: [/(.*\.)?wowhead.com/i, /(.*\.)?thottbot.com/i, /(.*\.)?torhead.com/i, /(.*\.)?mmoui.com/i, /(.*\.)?tankspot.com/i, /(.*\.)?guildfans.com/i, /(.*\.)?allakhazam.com/i, /(.*\.)?zam.com/i, /(.*\.)?blizzard.com/i, /(.*\.)?worldofwarcraft.com/i, /(.*\.)?wow-europe.com/i, /(.*\.)?battle.net/i, /(.*\.)?sc2ranks.com/i, /(.*\.)?torchlightarmory.com/i, /(.*\.)?vindictusdb.com/i, /(.*\.)?wowinterface.com/i, /(.*\.)?vginterface.com/i, /(.*\.)?lotrointerface.com/i, /(.*\.)?eq2interface.com/i, /(.*\.)?eqinterface.com/i, /(.*\.)?mmo-champion.com/i, /(.*\.)?joystiq.com/i, /(.*\.)?wow-heroes.com/i, /(.*\.)?be-imba.hu/i, /(.*\.)?wowpedia.org/i, /(.*\.)?curse.com/i, /(.*\.)?elitistjerks.com/i, /(.*\.)?wowwiki.com/i, /(.*\.)?worldoflogs.com/i, /(.*\.)?wowinsider.com/i, /(.*\.)?guildwork.com/i, /(.*\.)?hearthhead\.com/i],
  rolesToClass: function (b) {
    if (b & (U_GROUP_ADMIN | U_GROUP_VIP | U_GROUP_DEV)) {
      return Markup.CLASS_ADMIN
    } else {
      if (b & U_GROUP_STAFF) {
        return Markup.CLASS_STAFF
      } else {
        if (b & U_GROUP_PREMIUM) {
          return Markup.CLASS_PREMIUM
        } else {
          if (b & U_GROUP_PENDING) {
            return Markup.CLASS_PENDING
          } else {
            return Markup.CLASS_USER
          }
        }
      }
    }
  },
  defaultSource: false,
  nameCol: "name_enus",
  domainToLocale: {
    www: "enus",
    ptr: "ptr",
    beta: "beta",
    mop: "beta",
    wod: "beta",
    fr: "frfr",
    de: "dede",
    es: "eses",
    ru: "ruru",
    pt: "ptbr",
    it: "itit",
    cn: "zhcn"
  },
  maps: [],
  firstTags: {},
  postTags: [],
  collectTags: {},
  excludeTags: {},
  tooltipTags: {},
  tooltipBare: {},
  attributes: {
    id: {
      req: false,
      valid: /^[a-z0-9_-]+$/i
    },
    title: {
      req: false,
      valid: /[\S ]+/
    },
    "class": {
      req: false,
      valid: /\S+/
    }
  },
  deckWidgetCount: 0,
  youtube: {
    players: [],
    APIIsReady: false,
    readyTimeout: undefined,
    APIReady: function () {
      var c = false;
      Markup.youtube.readyTimeout = undefined;
      Markup.youtube.APIIsReady = true;
      for (var b in Markup.youtube.players) {
        if (!Markup.youtube.players.hasOwnProperty(b)) {
          continue
        }
        if (Markup.youtube.players[b].loaded) {
          continue
        }
        if ($WH.ge(Markup.youtube.players[b].containerId)) {
          Markup.youtube.players[b].loaded = true;
          Markup.youtube.players[b].player = new YT.Player(Markup.youtube.players[b].containerId, Markup.youtube.players[b].yt)
        } else {
          c = true
        }
      }
      if (c) {
        Markup.youtube.readyTimeout = window.setTimeout(Markup.youtube.APIReady, 500)
      }
    }
  },
  IsLinkAllowed: function (f) {
    var g = f.match("[a-z]+://([a-z0-9.-]+)");
    if (!g) {
      return true
    }
    var b = g[1];
    var h = false;
    for (var c in Markup.whitelistedWebsites) {
      var e = Markup.whitelistedWebsites[c];
      if (b.search(e) == 0) {
        h = true
      }
    }
    return h
  },
  tags: {
    "<text>": {
      empty: true,
      noHelp: true,
      allowInReplies: true,
      toHtml: function (c, b) {
        b = b || $.noop;
        if (c._text == " " && !b.noNbsp) {
          c._text = "&nbsp;"
        }
        c._text = c._text.replace(/\\\[/g, "[");
        if (b && b.noLink) {
          return c._text
        } else {
          if (b && b.needsRaw) {
            return c._rawText
          } else {
            var f = [];
            var g = Markup._preText(c._rawText.replace(/(https?:\/\/|www\.)([\/_a-z0-9\%\?#@\-\+~&=;:'|]|\.[a-z0-9\-])+/gi, function (h) {
              matchUrl = Markup._preText(h.replace(/^www/, "http://www"));
              h = Markup._preText(h);
              var j = f.length;
              f.push([matchUrl, h]);
              return "$L" + j
            }));
            g = g.replace(/\$L([\d+]) /gi, "$L$1&nbsp;");
            for (var e in f) {
              g = g.replace("$L" + e, function (j) {
                if (Markup.allow < Markup.CLASS_USER && !Markup.IsLinkAllowed(f[e][0])) {
                  return $WH.sprintf('<span class="tip" onmouseover="$WH.Tooltip.showAtCursor(event, LANG.linkremoved_tip, 0, 0, \'q\')" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()">[$1]</span>', LANG.linkremoved)
                }
                var h = '<a href="' + f[e][0] + '"';
                if (Markup._isUrlExternal(f[e][0])) {
                  h += ' target="_blank"'
                }
                h += ">" + f[e][1] + "</a>";
                return h
              })
            }
            return g
          }
        }
      },
      toText: function (b) {
        return b._text
      }
    },
    achievement: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        icon: {
          req: false,
          valid: /^false$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var k = c.unnamed;
        var j = Markup._getDatabaseDomainInfo(c);
        var g = j[0];
        var h = j[1];
        var b = [];
        var f = null;
        if (c.diff) {
          b.push("diff=" + c.diff)
        }
        if (c.diffnew) {
          b.push("diffnew=" + c.diffnew)
        }
        if (c.tempname) {
          f = c.tempname
        }
        if (g_achievements[k] && g_achievements[k][h]) {
          var e = g_achievements[k];
          return '<a href="' + g + "/achievement=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + (!c.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + e.icon.toLowerCase() + '.gif"' : "") + Markup._addGlobalAttributes(c) + ' align="absmiddle" /> <span class="tinyicontxt">' + Markup._safeHtml(e[h]) + "</span></a>"
        }
        return '<a href="' + g + "/achievement=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + Markup._addGlobalAttributes(c) + ">" + (f ? f : ("(" + LANG.types[10][0] + " #" + k + ")")) + "</a>"
      },
      toText: function (b) {
        var g = b.unnamed;
        var f = Markup._getDatabaseDomainInfo(b);
        var c = f[0];
        var e = f[1];
        if (g_achievements[g] && g_achievements[g][e]) {
          return Markup._safeHtml(g_achievements[g][e])
        }
        return LANG.types[10][0] + " #" + g
      }
    },
    achievementpoints: {
      empty: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var c = '<span class="moneyachievement tip" onmouseover="Listview.funcBox.moneyAchievementOver(event)" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()"' + Markup._addGlobalAttributes(b) + ">" + b.unnamed + "</span>";
        return c
      }
    },
    adventure: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var j = b.unnamed;
        var h = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = h[0];
        var e = h[1];
        if (g_hearthstone_adventures && g_hearthstone_adventures[j] && g_hearthstone_adventures[j][e]) {
          var f = g_hearthstone_adventures[j];
          var g = "<a" + Markup._addGlobalAttributes(b) + ' href="' + c + "/adventure=" + j + "/" + g_urlize(f[e]) + '"><span class="tinyicontxt">';
          g += Markup._safeHtml(f[e]) + "</span></a>";
          return g
        }
        return '<a href="' + c + "/adventure=" + j + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[227][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = e[1];
        if (g_hearthstone_adventures && g_hearthstone_adventures[f] && g_hearthstone_adventures[f][c]) {
          return Markup._safeHtml(g_hearthstone_adventures[f][c])
        }
        return LANG.types[227][0] + " #" + f
      }
    },
    anchor: {
      empty: true,
      ltrim: true,
      rtrim: true,
      attr: {
        unnamed: {
          req: false,
          valid: /\S+/
        }
      },
      validate: function (b) {
        if (!b.unnamed && !b.id) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        if (!b.unnamed && b.id) {
          b.unnamed = b.id;
          b.id = null
        }
        return '<a name="' + b.unnamed + '"' + Markup._addGlobalAttributes(b) + "></a>"
      }
    },
    acronym: {
      empty: false,
      attr: {
        unnamed: {
          req: true
        }
      },
      toHtml: function (b) {
        return ['<span class="tip" onmouseover="$WH.Tooltip.showAtCursor(event, \'' + Markup._safeHtml(b.unnamed) + '\', 0, 0, \'q1\');" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()" ' + Markup._addGlobalAttributes(b) + ">", "</span>"]
      }
    },
    b: {
      empty: false,
      allowInReplies: true,
      toHtml: function (b) {
        return ["<b" + Markup._addGlobalAttributes(b) + ">", "</b>"]
      },
      fromHtml: function (b) {
        return b.replace(/<(b|big|strong)\b[\s\S]*?>([\s\S]*?)<\/\1>/gi, "[b]$2[/b]")
      }
    },
    blip: {
      empty: true,
      attr: {
        unnamed: {
          req: true,
          valid: /\S+/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var c = "http://blip.tv/play/" + b.unnamed;
        var f = 600;
        var g = 368;
        var e = "";
        e += '<embed width="' + f + '" height="' + g + '" src="' + c + '" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque"></embed>';
        return e
      }
    },
    bluetweet: {
      empty: true,
      ltrim: true,
      attr: {
        id: {
          req: true,
          valid: /^[0-9]+$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        if (g_bluetweets[b.id] && g_bluetweets[b.id].id) {
          return Markup.CreateTweet(g_bluetweets[b.id]).outerHTML
        }
        return '<a href="https://twitter.com/wowheadtweets/status/' + b.id + '" class="full-tweet">Tweet #' + b.id + "</a>"
      }
    },
    boss: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var j = b.unnamed;
        var h = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var e = h[0];
        var f = h[1];
        if (g_hearthstone_bosses && g_hearthstone_bosses[j] && g_hearthstone_bosses[j][f]) {
          var c = g_hearthstone_bosses[j];
          var g = "<a" + Markup._addGlobalAttributes(b) + ' href="' + e + "/boss=" + j + "/" + g_urlize(c[f]) + '"><span class="tinyicontxt">';
          g += Markup._safeHtml(c[f]) + "</span></a>";
          return g
        }
        return '<a href="' + e + "/boss=" + j + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[228][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = e[1];
        if (g_hearthstone_bosses && g_hearthstone_bosses[f] && g_hearthstone_bosses[f][c]) {
          return Markup._safeHtml(g_hearthstone_bosses[f][c])
        }
        return LANG.types[228][0] + " #" + f
      }
    },
    br: {
      empty: true,
      toHtml: function (b) {
        return "<br />"
      },
      fromHtml: function (b) {
        return b.replace(/<br\b[\s\S]*?>/gi, "\n")
      }
    },
    building: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        nolvl: {
          req: false,
          valid: /^true$/
        },
        "short": {
          req: false,
          valid: /^true$/
        },
        side: {
          req: false,
          valid: /^1|2$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (j) {
        var e = j.unnamed;
        var g = Markup._getDatabaseDomainInfo(j);
        var c = g[0];
        var l = g[1];
        if (g_buildings[e] && g_buildings[e][l]) {
          var m = g_buildings[e];
          var b = m[l];
          var h = j["short"] ? LANG.traits["level"][2] : LANG.level;
          if (j.side) {
            var k = new RegExp(j.side == 1 ? " \\/ .+$" : "[^\\/]+ \\/ ");
            b = b.replace(k, "")
          } else {
            if (j["short"]) {
              if (g_garrison_building_short_names.hasOwnProperty(e)) {
                b = g_garrison_building_short_names[e]
              }
            }
          }
          var f = (!j.nolvl && m.hasOwnProperty("level")) ? h + " " + m.level + " " : "";
          return '<a href="' + c + "/building=" + e + '"' + Markup._addGlobalAttributes(j) + ">" + f + Markup._safeHtml(b) + "</a>"
        }
        return '<a href="' + c + "/building=" + e + '"' + Markup._addGlobalAttributes(j) + ">(" + LANG.types[20][0] + " #" + e + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_buildings[f] && g_buildings[f][c]) {
          return Markup._safeHtml(g_buildings[f][c])
        }
        return LANG.types[20][0] + " #" + f
      }
    },
    "class": {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        icon: {
          req: false,
          valid: /^false$/i
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        if (b.unnamed >= 1 && b.unnamed <= 11) {
          return true
        }
        return false
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var e = g[0];
        var f = g[1];
        if (g_classes[h] && g_classes[h][f]) {
          var c = g_classes[h];
          return '<a href="' + e + "/class=" + h + '"' + (!b.icon ? ' class="icontiny c' + h + '"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + g_classes.getIcon(h) + '.gif"' : "") + Markup._addGlobalAttributes(b) + ' align="absmiddle" /> <span class="tinyicontxt">' + Markup._safeHtml(c[f]) + "</span></a>"
        }
        return '<a href="' + e + "/class=" + h + '" class="c' + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[13][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_classes[f] && g_classes[f][c]) {
          return Markup._safeHtml(g_classes[f][c])
        }
        return LANG.types[13][0] + " #" + f
      }
    },
    card: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        premium: {
          req: false,
          valid: /^true$/i
        },
        icon: {
          req: false,
          valid: /^false$/i
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var j = b.unnamed;
        var h = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var e = h[0];
        var f = h[1];
        if (g_hearthstone_cards && g_hearthstone_cards[j] && g_hearthstone_cards[j][f]) {
          var c = g_hearthstone_cards[j];
          var g = "<a" + Markup._addGlobalAttributes(b) + ' href="' + e + "/card=" + j + (b.premium ? "&premium" : "") + "/" + g_urlize(c[f]) + '" class="q' + c.quality + (!b.icon ? ' icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + c.icon.toLowerCase() + '.gif"' : "") + ' align="absmiddle" /> <span class="tinyicontxt">';
          g += Markup._safeHtml(c[f]) + "</span></a>";
          return g
        }
        return '<a href="' + e + "/card=" + j + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[220][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = e[1];
        if (g_hearthstone_cards && g_hearthstone_cards[f] && g_hearthstone_cards[f][c]) {
          return Markup._safeHtml(g_hearthstone_cards[f][c])
        }
        return LANG.types[220][0] + " #" + f
      }
    },
    cardback: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var j = b.unnamed;
        var h = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = h[0];
        var e = h[1];
        if (g_hearthstone_cardbacks && g_hearthstone_cardbacks[j] && g_hearthstone_cardbacks[j][e]) {
          var f = g_hearthstone_cardbacks[j];
          var g = "<a" + Markup._addGlobalAttributes(b) + ' href="' + c + "/cardback=" + j + "/" + g_urlize(f[e]) + '"><span class="tinyicontxt">';
          g += Markup._safeHtml(f[e]) + "</span></a>";
          return g
        }
        return '<a href="' + c + "/cardback=" + j + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[225][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = e[1];
        if (g_hearthstone_cardbacks && g_hearthstone_cardbacks[f] && g_hearthstone_cardbacks[f][c]) {
          return Markup._safeHtml(g_hearthstone_cardbacks[f][c])
        }
        return LANG.types[225][0] + " #" + f
      }
    },
    chart: {
      empty: true,
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {
        id: {
          req: true,
          valid: /^\d+$/
        },
        type: {
          req: true,
          valid: /^barpercent|pie$/
        },
        width: {
          req: false,
          valid: /^\d+$/
        },
        height: {
          req: false,
          valid: /^\d+$/
        },
        credits: {
          req: false,
          valid: /^profiler|none$/
        }
      },
      toHtml: function (s) {
        if (!g_charts.hasOwnProperty(s.id)) {
          var l = '<div class="highchart ' + s.type + '" style="border: 1px solid #CCC;';
          if (s.width) {
            l += "width: " + s.width + "px;"
          }
          if (s.height) {
            l += "height: " + s.height + "px"
          }
          l += '">(Chart ' + s.id + " not found)</div>";
          return l
        }
        if (!$WH.isset("g_highcharts")) {
          g_highcharts = {
            charts: [],
            divIndex: 0,
            pending: undefined
          };
          $WH.g_ajaxIshRequest(g_staticUrl + "/js/highcharts.js", true);
          g_highcharts.ShowCharts = function (o) {
            if (o) {
              g_highcharts.pending = undefined
            } else {
              if (typeof g_highcharts.pending != "undefined") {
                return
              }
            }
            var z = false;
            if ($WH.isset("Highcharts")) {
              for (var k = 0; k < g_highcharts.charts.length; k++) {
                if (g_highcharts.charts[k].rendered) {
                  continue
                }
                if ($(g_highcharts.charts[k].container).length == 0) {
                  z = true;
                  continue
                }
                $(g_highcharts.charts[k].container).highcharts(g_highcharts.charts[k].chart);
                g_highcharts.charts[k].rendered = true
              }
            } else {
              z = true
            }
            if (z) {
              g_highcharts.pending = window.setTimeout(g_highcharts.ShowCharts, 250, true);
              return
            }
          }
        }
        var j = "highchart-markup-" + (g_highcharts.divIndex++);
        var l = '<div class="highchart ' + s.type + '" id="' + j + '" style="';
        if (s.width) {
          l += "width: " + s.width + "px;"
        }
        if (s.height) {
          l += "height: " + s.height + "px"
        }
        l += '"></div>';
        var n = {};
        if (!s.credits || s.credits == "profiler") {
          n.href = "/list";
          n.text = LANG.message_poweredbyprofiler
        }
        if (s.credits == "none") {
          n.enabled = false
        }
        switch (s.type) {
        case "barpercent":
          var e = g_charts[s.id];
          var c = (e[0].keyType && g_types.hasOwnProperty(e[0].keyType)) ? g_types[e[0].keyType] : false;
          var p = {
            container: "#" + j,
            chart: {}
          };
          p.chart = {
            credits: n,
            chart: {
              type: "bar",
              backgroundColor: "#242424",
              plotBorderWidth: 0,
              style: {
                fontFamily: "Open Sans"
              }
            },
            plotOptions: {
              bar: {
                borderWidth: 0,
                dataLabels: {
                  color: "#ddd",
                  style: {
                    textShadow: "none"
                  }
                }
              }
            },
            xAxis: {
              categories: [],
              labels: {
                style: {
                  color: "#CCC"
                }
              },
              gridLineColor: "#404040",
              lineColor: "#404040",
              tickColor: "#404040"
            },
            yAxis: {
              min: 0,
              max: 100,
              title: {
                enabled: false
              },
              gridLineColor: "#404040",
              lineColor: "#404040",
              tickColor: "#404040"
            },
            legend: {
              enabled: false
            },
            title: {
              text: ""
            },
            tooltip: {
              formatter: function () {
                var z = this.x + ": " + this.y + "%";
                if (c) {
                  var A = (c in g_completion) ? g_completion[c] : false;
                  for (var B in g_user.lists) {
                    var k = g_user.lists[B];
                    if (!(k.id in A)) {
                      continue
                    }
                    var o = ($WH.in_array(A[k.id], this.point.id) != -1);
                    z += '<br><span class="progress-icon ' + (o ? "progress-8" : "progress-0") + '"></span> ';
                    z += k.character + " - " + k.realm + " " + k.region
                  }
                }
                return z
              },
              useHTML: true,
              backgroundColor: "rgba(36, 36, 36, 0.85)",
              style: {
                color: "#ccc"
              }
            },
            series: [{
              data: [],
              events: {
                click: function (z) {
                  if (g_charts[s.id][0].keyType) {
                    var k = g_charts[s.id][0].keyType;
                    var o = g_getRelativeHostPrefix(k in g_types_host ? g_types_host[k] : "wowhead.com");
                    location.href = o + "/" + g_types[g_charts[s.id][0].keyType] + "=" + z.point.series.data[z.point.x].id
                  }
                }
              }
            }]
          };
          var v = (e[0].keyType && g_gathered_types.hasOwnProperty(e[0].keyType)) ? g_gathered_types[e[0].keyType] : {};
          var m, y = [];
          if (c && $WH.isset("g_completion") && g_completion.hasOwnProperty(c) && g_user.hasOwnProperty("lists") && g_user.lists && g_user.lists.length) {
            for (var h = 0; h < g_user.lists.length; h++) {
              m = "" + g_user.lists[h].id;
              if ((g_user.lists[h].pinned > 0) && g_completion[c].hasOwnProperty(m)) {
                y = g_completion[c][m];
                if (g_user.lists[h].pinned > 1) {
                  break
                }
              }
            }
          }
          var b = Locale.getName();
          var w = [];
          for (var u in e[0].data) {
            if (!e[0].data.hasOwnProperty(u)) {
              continue
            }
            w.push({
              k: u,
              v: e[0].data[u]
            })
          }
          w.sort(function (o, k) {
            return $WH.strcmp(k.v, o.v)
          });
          for (var h = 0; h < w.length; h++) {
            var t = w[h];
            var f = v.hasOwnProperty(t.k) ? v[t.k]["name_" + b] : t.k;
            var q = {
              id: t.k,
              y: Math.round(t.v / e[1].data * 100)
            };
            if (y.indexOf(parseInt(q.id, 10)) != -1) {
              q.color = "#7CECB5"
            }
            p.chart.xAxis.categories.push(f);
            p.chart.series[0].data.push(q)
          }
          g_highcharts.charts.push(p);
          break;
        case "pie":
          var p = {
            container: "#" + j,
            chart: {}
          };
          p.chart = {
            credits: n,
            chart: {
              type: "pie",
              backgroundColor: "#242424",
              plotBorderWidth: 0,
              style: {
                fontFamily: "Open Sans"
              }
            },
            plotOptions: {
              pie: {
                borderColor: "#242424",
                dataLabels: {
                  color: "#ddd",
                  style: {
                    textShadow: "none"
                  }
                }
              }
            },
            legend: {
              enabled: false
            },
            title: {
              text: ""
            },
            tooltip: {
              formatter: function () {
                return this.point.name + ": " + Math.round(this.y) + "%"
              },
              backgroundColor: "rgba(36, 36, 36, 0.85)",
              style: {
                color: "#ccc"
              }
            },
            series: [{
              data: []
            }]
          };
          var e = g_charts[s.id];
          var w = [];
          var g = 0,
              r = true;
          for (var u in e[0].data) {
            if (!e[0].data.hasOwnProperty(u)) {
              continue
            }
            g += e[0].data[u];
            r &= !isNaN(u) && (u != "0");
            w.push({
              k: u,
              v: e[0].data[u]
            })
          }
          if (!isNaN(e[1].data) && (g / e[1].data < 0.98)) {
            w.push({
              k: r ? 0 : "Other",
              v: e[1].data - g
            })
          }
          w.sort(function (o, k) {
            return $WH.strcmp(o.k, k.k) || $WH.strcmp(k.v, o.v)
          });
          for (var h = 0; h < w.length; h++) {
            var t = w[h];
            var f = t.k;
            p.chart.series[0].data.push({
              id: t.k,
              name: f,
              y: (t.v / e[1].data * 100)
            })
          }
          g_highcharts.charts.push(p);
          break;
        default:
          l = "<div>(Chart type " + s.type + " unknown)</div>";
          break
        }
        g_highcharts.ShowCharts();
        return l
      }
    },
    changelog: {
      empty: false,
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {
        open: {
          req: false,
          valid: /^true$/
        }
      },
      toHtml: function (b) {
        var e = '<a id="revealtoggle-changelog" class="revealtoggle changelog" href="javascript:;" onclick="Markup.toggleReveal(\'changelog\');">Show Changelog</a>';
        var c = "display: none";
        if (b.open == "true") {
          e = c = ""
        }
        return ['<div style="margin: 1em 0" id="guide-changelog"><div id="reveal-changelog" style="' + c + '"><h3 class="heading-size-3">Changelog</h3>', "</div>" + e + "</div>"]
      }
    },
    code: {
      block: true,
      empty: false,
      rtrim: true,
      itrim: true,
      helpText: true,
      allowedChildren: {
        "<text>": 1
      },
      toHtml: function (b) {
        var c = '<pre class="code';
        if (b.first) {
          c += " first"
        }
        if (b.last) {
          c += " last"
        }
        c += '"' + Markup._addGlobalAttributes(b) + ">";
        return [c, "</pre>"]
      }
    },
    color: {
      empty: false,
      attr: {
        unnamed: {
          req: true,
          valid: /^.*/i
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      extraColors: {
        deathknight: "c6",
        dk: "c6",
        druid: "c11",
        hunter: "c3",
        mage: "c8",
        monk: "c10",
        paladin: "c2",
        priest: "c5",
        rogue: "c4",
        shaman: "c7",
        warlock: "c9",
        warrior: "c1",
        poor: "q0",
        common: "q1",
        uncommon: "q2",
        rare: "q3",
        epic: "q4",
        legendary: "q5",
        artifact: "q6",
        heirloom: "q7",
        wowtoken: "q8"
      },
      toHtml: function (b) {
        var e = /^(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow|c\d+|r\d+|q\d*?|#[a-f0-9]{6})$/i;
        var f = "<span ";
        if (b.unnamed.match(e)) {
          if (b.unnamed == "#00C0FF") {
            f += 'class="blizzard-blue"' + Markup._addGlobalAttributes(b)
          } else {
            var c = b.unnamed.charAt(0);
            f += ((c == "q" || c == "c" || (c == "r" && b.unnamed != "red")) ? 'class="' : 'style="color: ') + b.unnamed + '"' + Markup._addGlobalAttributes(b)
          }
        } else {
          if (Markup.tags.color.extraColors[b.unnamed]) {
            f += 'class = "' + Markup.tags.color.extraColors[b.unnamed] + '"'
          }
        }
        f += ">";
        return [f, "</span>"]
      }
    },
    currency: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        amount: {
          req: false,
          valid: /^[0-9\:]+$/
        },
        icon: {
          req: false,
          valid: /^false$/i
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var c = g[0];
        var e = g[1];
        if (g_gatheredcurrencies[h] && g_gatheredcurrencies[h][e]) {
          var f = g_gatheredcurrencies[h];
          if (b.amount) {
            return '<a href="' + c + "/currency=" + h + '"' + (!b.icon ? ' class="icontinyr tip q1" onmouseover="$WH.Tooltip.showAtCursor(event, \'' + Markup._safeHtml(f[e]) + '\', 0, 0, \'q1\');" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()" style="background-image:url(' + g_staticUrl + "/images/wow/icons/tiny/" + f.icon[0].toLowerCase() + ".gif)" : "") + Markup._addGlobalAttributes(b) + '"> <span class="tinyicontxt">' + b.amount.split(":").join(" - ") + "</span></a>"
          } else {
            return '<a href="' + c + "/currency=" + h + '"' + (!b.icon ? ' class="icontiny q1"><span><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + f.icon[0].toLowerCase() + '.gif"' : "") + Markup._addGlobalAttributes(b) + ' align="absmiddle" /> <span class="tinyicontxt">' + Markup._safeHtml(f[e]) + "</a>"
          }
        }
        return '<a href="' + c + "/currency=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[17][0] + " #" + h + ")</a>" + (b.amount > 0 ? " x" + b.amount : "")
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_gatheredcurrencies[f] && g_gatheredcurrencies[f][c]) {
          return Markup._safeHtml(g_gatheredcurrencies[f][c])
        }
        return LANG.types[17][0] + " #" + f
      }
    },
    db: {
      empty: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^(live|ptr|beta|wod|mop)$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        if (b.unnamed == "live") {
          Markup.defaultSource = Markup.SOURCE_LIVE
        } else {
          if (b.unnamed == "ptr") {
            Markup.defaultSource = Markup.SOURCE_PTR
          } else {
            if (b.unnamed == "beta" || b.unnamed == "mop" || b.unnamed == "wod") {
              Markup.defaultSource = Markup.SOURCE_BETA
            }
          }
        }
        return ""
      },
      toText: function (b) {
        if (b.unnamed == "live") {
          Markup.defaultSource = Markup.SOURCE_LIVE
        } else {
          if (b.unnamed == "ptr") {
            Markup.defaultSource = Markup.SOURCE_PTR
          } else {
            if (b.unnamed == "beta" || b.unnamed == "mop" || b.unnamed == "wod") {
              Markup.defaultSource = Markup.SOURCE_BETA
            }
          }
        }
        return ""
      }
    },
    deck: {
      empty: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        cards: {
          req: false,
          valid: /^(hide)$/i
        },
        "float": {
          req: false,
          valid: /^(left|right)$/i
        },
        format: {
          req: false,
          valid: /^(list)$/i
        }
      },
      toHtml: function (q) {
        var o = q.unnamed;
        var k = g_hearthstone_decks[o];
        var u = g_getRelativeHostPrefix("hearthhead.com");
        var l;
        if (k) {
          if (k.classid) {
            l = '<a href="' + u + "/deck=" + o + '" class="icontiny c' + k.classid + '" target="_blank" whattach="true"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + g_classes.getIcon(k.classid) + '.gif" align="absmiddle" /> '
          } else {
            l = '<a href="' + u + "/deck=" + o + '" target="_blank" whattach="true">'
          }
          l += $WH.htmlentities(k.name) + "</a>"
        } else {
          l = '<a href="' + u + "/deck=" + o + '" target="_blank" whattach="true">Deck #' + o + "</a>"
        }
        if (q.format == "list") {
          Markup.deckWidgetCount++;
          var m = "deck-widget-" + o + "-" + Markup.deckWidgetCount;
          var g = q["float"] ? " float-" + q["float"] : "";
          var v = '<div id="' + m + '" class="deck-widget' + g + '"' + Markup._addGlobalAttributes(q) + ">";
          if (k) {
            l = l.replace(/( class=")icontiny (c\d+" target="_blank" whattach="true">)<img[^>]+> /, '$1deck-widget-portrait $2<span class="deck-widget-image" style="background:url(' + g_staticUrl + "/images/hearthhead/hero-frames/x100/" + k.classid + '.png)"></span><br>');
            v += '<div class="deck-widget-title">' + l;
            if (k.cardlist) {
              var f = "0zMcmVokRsaqbdrfwihuGINALpTjnyxtgevElBCDFHJKOPQSUWXYZ123456789";
              var e = "c" + k.hash + "8" + f.charAt(k.classid ? parseInt(k.classid) : 0) + (k.type == 1 ? "z" : "");
              v += '<div class="deck-widget-ratings"></div>';
              setTimeout(function () {
                $("#" + m + " .deck-widget-ratings").append(deck_getUpDownVotes(null, null, typeof g_user != "undefined" && g_user.id, null, o, true))
              }, 0);
              v += "</div>";
              if (q.cards != "hide") {
                v += '<div class="deck-widget-cards">';
                var p = k.cardlist.split(",");
                var h = [];
                for (var s = 0, n; n = p[s]; s++) {
                  var b = n.split("|");
                  if (g_hearthstone_cards[b[0]]) {
                    h.push($.extend({}, g_hearthstone_cards[b[0]], {
                      id: b[0],
                      count: b[1]
                    }))
                  } else {
                    h.push({
                      id: b[0],
                      name: "Card #" + b[0],
                      unknown: true,
                      count: b[1]
                    })
                  }
                }
                h.sort(function (w, j) {
                  return $WH.strcmp(w.cost, j.cost) || $WH.strcmp(j.type, w.type) || $WH.strcmp(w["name_" + Locale.getName()] || w.name, j["name_" + Locale.getName()] || j.name)
                });
                var t = $WH.ce("div");
                for (var r = 0, c; c = h[r]; r++) {
                  $WH.ae(t, $WH.g_createCardCollapsed(c, {
                    count: c.count,
                    newTab: true
                  }));
                  v += t.innerHTML;
                  $WH.ee(t)
                }
                v += "</div>"
              }
            } else {
              v += "</div>";
              if (q.cards != "hide") {
                v += '<div class="deck-widget-cards deck-widget-cards-error">' + LANG.dg_nocards + "</div>"
              }
            }
          } else {
            v += '<div class="deck-widget-title">' + l + "</div>"
          }
          v += "</div>";
          return v
        }
        return l
      }
    },
    del: {
      empty: false,
      attr: {
        copy: {
          req: false,
          valid: /^true$/
        }
      },
      toHtml: function (b) {
        var c = '<del class="diffmod"' + Markup._addGlobalAttributes(b);
        if (!b.copy) {
          c += ' unselectable="on"'
        }
        c += ">";
        return [c, "</del>"]
      }
    },
    div: {
      empty: false,
      block: true,
      ltrim: true,
      rtrim: true,
      itrim: true,
      attr: {
        clear: {
          req: false,
          valid: /^(left|right|both)$/i
        },
        unnamed: {
          req: false,
          valid: /^hidden$/i
        },
        "float": {
          req: false,
          valid: /^(left|right)$/i
        },
        align: {
          req: false,
          valid: /^(left|right|center)$/i
        },
        margin: {
          req: false,
          valid: /^\d+$/
        },
        style: {
          req: false,
          valid: /^[^"<>]+$/
        },
        width: {
          req: false,
          valid: /^[0-9]+(px|em|\%)$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var f = "<div" + Markup._addGlobalAttributes(b);
        var c = [];
        var e = [];
        if (b.clear) {
          c.push("clear: " + b.clear)
        }
        if (b.unnamed) {
          c.push("display: none")
        }
        if (b.width) {
          c.push("width: " + b.width)
        }
        if (b["float"]) {
          e.push("markup-float-" + b["float"])
        }
        if (b.align) {
          c.push("text-align: " + b.align)
        }
        if (b.margin) {
          c.push("margin: " + b.margin)
        }
        if (b.style) {
          c.push(b.style)
        }
        if (b.first) {
          e.push("first")
        }
        if (b.last) {
          e.push("last")
        }
        if (c.length > 0) {
          f += ' style="' + c.join(";") + '"'
        }
        if (e.length > 0) {
          f += ' class="' + e.join(" ") + '"'
        }
        f += ">";
        return [f, "</div>"]
      },
      fromHtml: function (g, f) {
        f = f || 0;
        var b;
        if (b = Markup.matchOuterTags(g, "<div\\b[\\s\\S]*?>", "</div>", "g")) {
          for (var c = 0; c < b.length; ++c) {
            var h = b[c][1].match(/float:\s*(left|right)"/i),
                e = b[c][1].match(/width[:="]+\s*([0-9]+)/i);
            g = g.replace(b[c][1] + b[c][0] + b[c][2], "\n" + Array(f + 1).join("\t") + "[div" + (h ? " float=" + h[1] : "") + (e ? " width=" + e[1] : "") + "]" + Markup.tags.div.fromHtml(b[c][0], f + 1) + "[/div]")
          }
        }
        return g
      }
    },
    event: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var e = g[0];
        var f = g[1];
        if (g_holidays[h] && g_holidays[h][f]) {
          var c = g_holidays[h];
          return '<a href="' + e + "/event=" + h + '"' + Markup._addGlobalAttributes(b) + ">" + Markup._safeHtml(c[f]) + "</a>"
        }
        return '<a href="' + e + "/event=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[12][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_holidays[f] && g_holidays[f][c]) {
          return Markup._safeHtml(g_holidays[f][c])
        }
        return LANG.types[12][0] + " #" + f
      }
    },
    faction: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var c = g[0];
        var e = g[1];
        if (g_factions[h] && g_factions[h][e]) {
          var f = g_factions[h];
          return '<a href="' + c + "/faction=" + h + '"' + Markup._addGlobalAttributes(b) + ">" + Markup._safeHtml(f[e]) + "</a>"
        }
        return '<a href="' + c + "/faction=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[8][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_factions[f] && g_factions[f][c]) {
          return Markup._safeHtml(g_factions[f][c])
        }
        return LANG.types[8][0] + " #" + f
      }
    },
    feedback: {
      empty: true,
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {
        mailto: {
          req: false,
          valid: /^true$/i
        }
      },
      toHtml: function (b) {
        return '<b><span class="icontiny" style="background-image: url(' + g_staticUrl + "/images/icons" + MarkupIconPath + '/email.gif)"><a href="' + (b.mailto ? "mailto:feedback@wowhead.com" : 'javascript:;" onclick="ContactTool.show();') + '">feedback@wowhead.com</a></span></b>'
      }
    },
    follower: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9\.]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        level: {
          req: false,
          valid: /^[0-9:]+$/
        },
        quality: {
          req: false,
          valid: /^[2345]$/
        },
        abilities: {
          req: false,
          valid: /^[0-9:]+$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (h) {
        var e = h.unnamed;
        var f = Markup._getDatabaseDomainInfo(h);
        var c = f[0];
        var k = f[1];
        var o = [];
        var j = null;
        if (h.diff) {
          o.push("diff=" + h.diff)
        }
        if (h.diffnew) {
          o.push("diffnew=" + h.diffnew)
        }
        if (h.quality) {
          o.push("q=" + h.quality)
        }
        if (h.level) {
          o.push("level=" + h.level)
        }
        if (h.abilities) {
          o.push("abil=" + h.abilities)
        }
        if (h.tempname) {
          j = h.tempname
        }
        var n = parseInt(e);
        if (g_followers[n] && g_followers[n][k]) {
          var g = g_followers[n];
          var m = g.quality;
          if (h.quality) {
            m = h.quality
          }
          if (!h.hasOwnProperty("class")) {
            h["class"] = "q" + m
          } else {
            if (!/\bq\d\b/.test(h["class"])) {
              h["class"] += " q" + m
            }
          }
          var b = g[k];
          var l;
          if ((l = b.indexOf(" / ")) != -1) {
            if (/\.1$/.test(e)) {
              b = b.substr(0, l)
            } else {
              if (/\.2$/.test(e)) {
                b = b.substr(l + 3)
              }
            }
          }
          return '<a href="' + c + "/follower=" + e + '"' + (o.length ? ' rel="' + o.join("&") + '"' : "") + Markup._addGlobalAttributes(h) + ">" + Markup._safeHtml(b) + "</a>"
        }
        return '<a href="' + c + "/follower=" + e + '"' + (o.length ? ' rel="' + o.join("&") + '"' : "") + Markup._addGlobalAttributes(h) + ">" + (j ? j : ("(" + LANG.types[21][0] + " #" + e + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_followers[f] && g_followers[f][c]) {
          return Markup._safeHtml(g_followers[f][c])
        }
        return LANG.types[21][0] + " #" + f
      }
    },
    forumrules: {
      empty: true,
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        return '<b><span class="icontiny" style="background-image: url(' + g_staticUrl + "/images/icons" + MarkupIconPath + '/favicon.gif)"><a href="http://www.wowhead.com/forums&topic=2">forum rules</a></span></b>'
      }
    },
    galleryupload: {
      empty: false,
      allowedClass: MARKUP_CLASS_ADMIN,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        submittext: {
          req: false,
          valid: /.+/
        }
      },
      toHtml: function (b) {
        var c = "";
        c = '<form method="POST" action="/gallery-upload" enctype="multipart/form-data" onsubmit="return Markup.tags.galleryupload._validateForm(this);">';
        c += '<input type="hidden" name="gallery" value="' + b.unnamed + '">';
        c += '<input type="hidden" name="message" value="">';
        c += '<input type="hidden" name="from" value="' + encodeURIComponent(location.pathname + location.search) + '">';
        c += '<input type="file" name="incoming" accept=".jpg,.jpeg,.png,image/jpeg,image/png" required>';
        c += ' <button type="submit" class="btn btn-primary">' + (b.submittext || LANG.submit) + "</button>";
        c += '</form><div style="display: none">';
        return [c, "</div>"]
      },
      _validateForm: function (c) {
        var b = 3;
        var e = c.incoming;
        if (!e || e.value == "") {
          return false
        }
        if (e.files && e.files.length) {
          if (e.files.length > 1) {
            alert("Too many files");
            return false
          }
          if (e.files[0].size > b * 1048576) {
            alert(LANG.message_sizelimit.replace("%d", b).replace("&gt;", ">"));
            return false
          }
        }
        c.message.value = c.nextSibling.textContent;
        return true
      }
    },
    garrisonability: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var k = c.unnamed;
        var j = Markup._getDatabaseDomainInfo(c);
        var f = j[0];
        var g = j[1];
        var b = [];
        var e = null;
        if (c.diff) {
          b.push("diff=" + c.diff)
        }
        if (c.diffnew) {
          b.push("diffnew=" + c.diffnew)
        }
        if (c.tempname) {
          e = c.tempname
        }
        if (g_garrisonabilities[k] && g_garrisonabilities[k][g]) {
          var h = g_garrisonabilities[k];
          return '<a href="' + f + "/garrisonability=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + (!c.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + h.icon.toLowerCase() + '.gif" align="absmiddle"' : "") + Markup._addGlobalAttributes(c) + "> " + Markup._safeHtml(h[g]) + "</a>"
        }
        return '<a href="' + f + "/garrisonability=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + Markup._addGlobalAttributes(c) + ">" + (e ? e : ("(" + LANG.types[22][0] + " #" + k + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_garrisonabilities[f] && g_garrisonabilities[f][c]) {
          return Markup._safeHtml(g_garrisonabilities[f][c])
        }
        return LANG.types[22][0] + " #" + f
      }
    },
    guide: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var h = c.unnamed;
        var g = Markup._getDatabaseDomainInfo(c);
        var e = g[0];
        var f = "name";
        if (g_guides[h] && g_guides[h][f]) {
          var b = g_guides[h];
          return '<a href="' + e + "/guide=" + h + '"' + Markup._addGlobalAttributes(c) + "> " + Markup._safeHtml(b[f]) + "</a>"
        }
        return '<a href="' + e + "/guide=" + h + '"' + Markup._addGlobalAttributes(c) + ">(" + LANG.types[100][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = "name";
        if (g_guides[f] && g_guides[f][c]) {
          return Markup._safeHtml(g_guides[f][c])
        }
        return LANG.types[100][0] + " #" + f
      }
    },
    hr: {
      empty: true,
      trim: true,
      allowedModes: {
        article: 1,
        quickfacts: 1,
        comment: 1
      },
      toHtml: function (b) {
        return "<hr />"
      },
      fromHtml: function (b) {
        return b.replace(/<hr\b[\s\S]*?>/gi, "[hr]")
      }
    },
    h2: {
      block: true,
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {
        unnamed: {
          req: false,
          valid: /^first$/i
        },
        clear: {
          req: false,
          valid: /^(true|both|left|right)$/i
        },
        toc: {
          req: false,
          valid: /^false$/i
        }
      },
      toHtml: function (b) {
        if (!b.id) {
          b.id = g_urlize(b._textContents)
        }
        str = "<h2" + Markup._addGlobalAttributes(b);
        var c = ["heading-size-2"];
        if (b.first || b.unnamed) {
          c.push("first")
        }
        if (b.last) {
          c.push("last")
        }
        if (c.length > 0) {
          str += ' class="' + c.join(" ") + '"'
        }
        if (b.clear) {
          if (b.clear == "true" || b.clear == "both") {
            str += ' style="clear: both"'
          } else {
            str += ' style="clear: ' + b.clear + '"'
          }
        }
        return [str + ">", "</h2>"]
      },
      fromHtml: function (b) {
        return b.replace(/<h2\b[\s\S]*?>([\s\S]*?)<\/h2>/gi, "\n[major-heading]$1[/major-heading]")
      }
    },
    h3: {
      block: true,
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      attr: {
        unnamed: {
          req: false,
          valid: /^first$/i
        },
        toc: {
          req: false,
          valid: /^false$/i
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        if (!b.id) {
          b.id = g_urlize(b._textContents)
        }
        var e = "<h3" + Markup._addGlobalAttributes(b);
        var c = ["heading-size-3"];
        if (b.first || b.unnamed) {
          c.push("first")
        }
        if (b.last) {
          c.push("last")
        }
        if (c.length > 0) {
          e += ' class="' + c.join(" ") + '"'
        }
        return [e + ">", "</h3>"]
      },
      fromHtml: function (b) {
        return b.replace(/<h3\b[\s\S]*?>([\s\S]*?)<\/h3>/gi, "\n[minor-heading]$1[/minor-heading]")
      }
    },
    hsachievement: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var j = c.unnamed;
        var h = Markup._getDatabaseDomainInfo(c, "hearthhead.com");
        var e = h[0];
        var f = h[1];
        if (g_hearthstone_achievements && g_hearthstone_achievements[j] && g_hearthstone_achievements[j][f]) {
          var b = g_hearthstone_achievements[j];
          var g = "<a" + Markup._addGlobalAttributes(c) + ' href="' + e + "/achievement=" + j + "/" + g_urlize(b[f]) + '"><span class="tinyicontxt">';
          g += Markup._safeHtml(b[f]) + "</span></a>";
          return g
        }
        return '<a href="' + e + "/achievement=" + j + '"' + Markup._addGlobalAttributes(c) + ">(" + LANG.types[222][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = e[1];
        if (g_hearthstone_achievements && g_hearthstone_achievements[f] && g_hearthstone_achievements[f][c]) {
          return Markup._safeHtml(g_hearthstone_achievements[f][c])
        }
        return LANG.types[222][0] + " #" + f
      }
    },
    hsquest: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var j = b.unnamed;
        var h = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var e = h[0];
        var f = h[1];
        if (g_hearthstone_quests && g_hearthstone_quests[j] && g_hearthstone_quests[j][f]) {
          var c = g_hearthstone_quests[j];
          var g = "<a" + Markup._addGlobalAttributes(b) + ' href="' + e + "/quest=" + j + "/" + g_urlize(c[f]) + '"><span class="tinyicontxt">';
          g += Markup._safeHtml(c[f]) + "</span></a>";
          return g
        }
        return '<a href="' + e + "/quest=" + j + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[223][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = e[1];
        if (g_hearthstone_quests && g_hearthstone_quests[f] && g_hearthstone_quests[f][c]) {
          return Markup._safeHtml(g_hearthstone_quests[f][c])
        }
        return LANG.types[223][0] + " #" + f
      }
    },
    html: {
      empty: false,
      allowedClass: MARKUP_CLASS_ADMIN,
      allowedChildren: {
        "<text>": 1
      },
      rawText: true,
      taglessSkip: true,
      toHtml: function (b) {
        return [b._contents]
      }
    },
    i: {
      empty: false,
      allowInReplies: true,
      toHtml: function (b) {
        return ["<i" + Markup._addGlobalAttributes(b) + ">", "</i>"]
      },
      fromHtml: function (b) {
        return b.replace(/<(i|em)\b[\s\S]*?>([\s\S]*?)<\/\1>/gi, "[i]$2[/i]")
      }
    },
    icon: {
      empty: false,
      itrim: true,
      attr: {
        align: {
          req: false,
          valid: /^right$/i
        },
        "float": {
          req: false,
          valid: /^(left|right)$/i
        },
        name: {
          req: false,
          valid: /\S+/
        },
        size: {
          req: false,
          valid: /^(tiny|small|medium|large)$/
        },
        unnamed: {
          req: false,
          valid: /^class$/i
        },
        url: {
          req: false,
          valid: /\S+/
        },
        preset: {
          req: false,
          valid: /\S+/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      presets: {
        boss: g_staticUrl + "/images/icons" + MarkupIconPath + "/boss.gif",
        heroic: g_staticUrl + "/images/icons" + MarkupIconPath + "/heroic.gif"
      },
      validate: function (b) {
        if (!b.name && !b.url && !b.preset) {
          return false
        }
        if (b.preset && !Markup.tags.icon.presets[b.preset]) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var e = (b.size ? b.size : "tiny");
        if (!b.name) {
          b.name = ""
        }
        if (e == "tiny") {
          var h = "<span" + Markup._addGlobalAttributes(b) + ' class="';
          if (b.unnamed == undefined) {
            h += "icontiny";
            if (b.align) {
              h += "r"
            }
            var g = "";
            if (b.name) {
              g = g_staticUrl + "/images/wow/icons/tiny/" + b.name.toLowerCase() + ".gif"
            } else {
              if (b.preset) {
                g = Markup.tags.icon.presets[b.preset]
              } else {
                if (b.url && Markup._isUrlSafe(b.url)) {
                  g = b.url
                } else {
                  return ""
                }
              }
            }
            h += '" style="background-image: url(' + g + ')">'
          } else {
            h += b.name + '">'
          }
          return [h, "</span>"]
        } else {
          var h = "<div" + Markup._addGlobalAttributes(b) + ' onclick="Icon.showIconName(this)" class="icon' + e + (b["float"] ? '" style="float: ' + b["float"] + ';">' : '">');
          var f = {
            small: 0,
            medium: 1,
            large: 2
          };
          var c = null;
          if (b.url && Markup._isUrlSafe(b.url)) {
            c = b.url
          } else {
            if (b._textContents && Markup._isUrlSafe(b._textContents)) {
              c = b._textContents
            }
          }
          icon = Icon.create(b.name.toLowerCase(), f[e], null, c);
          h += icon.innerHTML + "</div>";
          return [h]
        }
      }
    },
    iconlist: {
      empty: false,
      block: true,
      ltrim: true,
      rtrim: true,
      attr: {
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      taglessSkip: true,
      allowedClass: MARKUP_CLASS_STAFF,
      allowedChildren: {
        b: 1,
        achievement: 1,
        currency: 1,
        faction: 1,
        holiday: 1,
        item: 1,
        itemset: 1,
        npc: 1,
        object: 1,
        pet: 1,
        quest: 1,
        spell: 1,
        title: 1,
        zone: 1
      },
      toHtml: function (j) {
        var f = Markup._getDatabaseDomainInfo(j)[2];
        var l = "",
            c;
        for (var g = 0; g < j._nodes.length; ++g) {
          var e = $WH.dO(j._nodes[g]);
          e.attr.domain = f;
          var h = Markup.tags[e.name].toHtml(e.attr),
              k = e.name,
              b = "",
              n = "";
          if (typeof h != "string") {
            h = h[0] + e.attr._contents + h[1]
          } else {
            if (typeof h == "string" && (c = h.match(/href="(.+?)".+?url\(\/images\/wow\/icons\/tiny\/(.+?)\.gif\)/))) {
              e.attr.icon = "false";
              h = Markup.tags[e.name].toHtml(e.attr);
              b = c[1];
              n = c[2]
            }
          }
          if (h) {
            l += "<tr><th>" + (n ? Markup.toHtml("[icon name=" + n + " size=small url=" + b + "]", {
              skipReset: true
            }) : "<ul><li>&nbsp;</li></ul>") + "</th><td>" + h + "</td></tr>"
          }
        }
        if (l) {
          l = '<div class="iconlist-col"><table class="iconlist">' + l + "</table></div>"
        }
        return [l]
      }
    },
    img: {
      empty: true,
      attr: {
        src: {
          req: false,
          valid: /\S+/
        },
        icon: {
          req: false,
          valid: /\S+/
        },
        id: {
          req: false,
          valid: /^[0-9]+$/
        },
        blog: {
          req: false,
          valid: /^[0-9]+$/
        },
        news: {
          req: false,
          valid: /^[0-9]+$/
        },
        size: {
          req: false,
          valid: /^(thumb|resized|normal|large|medium|small|tiny)$/i
        },
        width: {
          req: false,
          valid: /^[0-9]+$/
        },
        height: {
          req: false,
          valid: /^[0-9]+$/
        },
        "float": {
          req: false,
          valid: /^(left|right|center)$/i
        },
        border: {
          req: false,
          valid: /^[0-9]+$/
        },
        margin: {
          req: false,
          valid: /^[0-9]+$/
        }
      },
      blogSize: /^(thumb|normal)$/i,
      idSize: /^(thumb|resized|normal)$/i,
      iconSize: /^(large|medium|small|tiny)$/i,
      allowedClass: MARKUP_CLASS_STAFF,
      validate: function (b) {
        if (b.src) {
          return true
        } else {
          if (b.id) {
            return (b.size ? Markup.tags.img.idSize.test(b.size) : true)
          } else {
            if (b.icon) {
              return (b.size ? Markup.tags.img.iconSize.test(b.size) : true)
            } else {
              if (b.blog || b.news) {
                return (b.size ? Markup.tags.img.blogSize.test(b.size) : true)
              }
            }
          }
        }
        return false
      },
      toHtml: function (b) {
        var h = "<img" + Markup._addGlobalAttributes(b);
        var g = [];
        var f = "";
        if (b.src) {
          h += ' src="' + b.src + '"'
        } else {
          if (b.id) {
            h += ' src="' + g_staticUrl + "/uploads/screenshots/" + (b.size ? b.size : "normal") + "/" + b.id + '.jpg"'
          } else {
            if (b.icon) {
              h += ' src="' + g_staticUrl + "/images/wow/icons/" + (b.size ? b.size : "large") + "/" + b.icon + '.jpg"'
            } else {
              if (b.blog || b.news) {
                if (g_blogimages[b.blog || b.news]) {
                  var c = g_blogimages[b.blog || b.news];
                  if (b.size && b.size == "thumb") {
                    var e = g_staticUrl + "/uploads/blog/images/" + (b.blog || b.news) + (c.type == 3 ? ".png" : ".jpg");
                    h += ' src="' + g_staticUrl + "/uploads/blog/thumbs/" + (b.blog || b.news) + (c.type == 3 ? ".png" : ".jpg") + '" alt="' + Markup._safeHtml(c.alt) + '" width="' + c.thumbwidth + '" height="' + c.thumbheight + '"';
                    if (!g_screenshots[Markup.uid]) {
                      g_screenshots[Markup.uid] = []
                    }
                    h = '<a href="' + e + '" onclick="if(!g_isLeftClick(event)) return; ScreenshotViewer.show({screenshots: \'' + Markup.uid + "', pos: " + g_screenshots[Markup.uid].length + '}); return false;">' + h;
                    f = "</a>";
                    var j = {
                      url: e,
                      caption: c.alt,
                      width: c.width,
                      height: c.height,
                      noMarkup: true
                    };
                    g_screenshots[Markup.uid].push(j)
                  } else {
                    h += ' src="' + g_staticUrl + "/uploads/blog/images/" + (b.blog || b.news) + (c.type == 3 ? ".png" : ".jpg") + '" alt="' + Markup._safeHtml(c.alt) + '"';
                    if (!b.width && !b.height) {
                      b.width = c.width;
                      b.height = c.height
                    } else {
                      if (!b.height) {
                        b.height = Math.round(c.height * b.width / c.width)
                      } else {
                        if (!b.width) {
                          b.width = Math.round(c.width * b.height / c.height)
                        }
                      }
                    }
                  }
                } else {
                  return ("Image #" + (b.blog || b.news))
                }
              }
            }
          }
        }
        if (b.width) {
          h += ' width="' + b.width + '"'
        }
        if (b.height) {
          h += ' height="' + b.height + '"'
        }
        if (b["float"]) {
          if (b["float"] == "center") {
            h = '<div style="text-align: center">' + h + ' style="margin: 10px auto"';
            f = "</div>"
          } else {
            g.push("markup-float-" + b["float"]);
            if (b.margin) {
              h += ' style="';
              if (b["float"] == "left") {
                h += " margin: 0 " + b.margin + "px " + b.margin + 'px 0"'
              } else {
                h += " margin: 0 0 " + b.margin + "px " + b.margin + 'px"'
              }
            }
          }
        }
        if (b.border != 0) {
          g.push("border")
        }
        if (b.title) {
          h += ' alt="' + b.title + '"'
        } else {
          h += ' alt=""'
        }
        if (g.length) {
          h += ' class="' + g.join(" ") + '"'
        }
        h += " />" + f;
        return h
      },
      fromHtml: function (j) {
        var c;
        if (c = j.match(/<img\b[\s\S]*?src="[\s\S]+?"[\s\S]*?>/gi)) {
          for (var f = 0; f < c.length; ++f) {
            var b = c[f].match(/src="([\s\S]+?)"/i),
                g = c[f].match(/width[:="]+\s*([0-9]+)/i),
                h = c[f].match(/height[:="]+\s*([0-9]+)/i),
                e = c[f].match(/border[:="]+\s*([0-9]+)/i);
            j = j.replace(c[f], "[img src=" + b[1] + (g ? " width=" + g[1] : "") + (h ? " height=" + h[1] : "") + " border=" + (e ? e[1] : 0) + "]")
          }
        }
        return j
      }
    },
    ins: {
      empty: false,
      toHtml: function (b) {
        return ['<ins class="diffmod"' + Markup._addGlobalAttributes(b) + ">", "</ins>"]
      }
    },
    item: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        icon: {
          req: false,
          valid: /^false$/i
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        bonus: {
          req: false,
          valid: /^[0-9:]+$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (f) {
        var c = f.unnamed;
        var e = Markup._getDatabaseDomainInfo(f);
        var b = e[0];
        var j = e[1];
        var k = [];
        var g = null;
        if (f.tempname) {
          g = f.tempname
        }
        if (f.bonus) {
          k.push("bonus=" + f.bonus)
        }
        if (g_items[c] && g_items[c][j]) {
          var l = g_items[c];
          var m = l.icon || "inv_misc_questionmark";
          var h = "<a" + Markup._addGlobalAttributes(f) + ' href="' + b + "/item=" + c + '"' + (k.length ? ' rel="' + k.join("&") + '"' : "") + ' class="q' + l.quality + (!f.icon ? ' icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + m.toLowerCase() + '.gif"' : "") + ' align="absmiddle" />&nbsp;<span class="tinyicontxt">';
          h += Markup._safeHtml(l[j]) + "</span></a>";
          return h
        }
        return '<a href="' + b + "/item=" + c + '"' + (k.length ? ' rel="' + k.join("&") + '"' : "") + Markup._addGlobalAttributes(f) + ">" + (g ? g : ("(" + LANG.types[3][0] + " #" + c + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_items[f] && g_items[f][c]) {
          return Markup._safeHtml(g_items[f][c])
        }
        return LANG.types[3][0] + " #" + f
      }
    },
    itemset: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^-?[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var f = Markup._getDatabaseDomainInfo(b);
        var c = f[0];
        var e = f[1];
        if (g_itemsets[h] && g_itemsets[h][e]) {
          var g = g_itemsets[h];
          return '<a href="' + c + "/itemset=" + h + '"' + Markup._addGlobalAttributes(b) + ">" + Markup._safeHtml(g[e]) + "</a>"
        }
        return '<a href="' + c + "/itemset=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[4][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_itemsets[f] && g_itemsets[f][c]) {
          return Markup._safeHtml(g_itemsets[f][c])
        }
        return LANG.types[4][0] + " #" + f
      }
    },
    li: {
      empty: false,
      itrim: true,
      allowedParents: {
        ul: 1,
        ol: 1
      },
      helpText: function () {
        var c = "";
        c += "[ul]";
        for (var b = 0; b < 3; ++b) {
          c += "\n[li]" + LANG.markup_li + "[/li]"
        }
        c += "\n[/ul]\n\n";
        c += "[ol]";
        for (var b = 0; b < 3; ++b) {
          c += "\n[li]" + LANG.markup_li + "[/li]"
        }
        c += "\n[/ol]\n";
        return c.toLowerCase()
      },
      toHtml: function (b) {
        return ["<li" + Markup._addGlobalAttributes(b) + "><div>", "</div></li>"]
      },
      fromHtml: function (f, e) {
        e = e || 0;
        var b;
        if (b = Markup.matchOuterTags(f, "<li\\b[\\s\\S]*?>", "</li>", "g")) {
          for (var c = 0; c < b.length; ++c) {
            f = f.replace(b[c][1] + b[c][0] + b[c][2], "\n\t" + Array(e + 1).join("\t") + "[li]" + Markup.tags.li.fromHtml(b[c][0], e + 1) + "[/li]")
          }
        }
        return f
      }
    },
    lightbox: {
      empty: false,
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {
        unnamed: {
          req: true,
          valid: /^(map|model|screenshot)$/
        },
        zone: {
          req: false,
          valid: /^-?[0-9]+[a-z]?$/i
        },
        floor: {
          req: false,
          valid: /^[0-9]+$/
        },
        pins: {
          req: false,
          valid: /^[0-9]+$/
        }
      },
      validate: function (b) {
        switch (b.unnamed) {
        case "map":
          if (b.zone) {
            return true
          }
          break;
        case "model":
          break;
        case "screenshot":
          break
        }
        return false
      },
      toHtml: function (b) {
        var c = "";
        var e = "";
        switch (b.unnamed) {
        case "map":
          c = "/maps=" + b.zone;
          if (b.floor) {
            c += "." + b.floor
          }
          if (b.pins) {
            c += ":" + b.pins
          }
          var f = c.substr(6);
          e = "if(!g_isLeftClick(event)) return; MapViewer.show({ link: '" + f + "' }); return false;";
          break
        }
        if (c && e) {
          return ['<a href="' + c + '" onclick="' + e + '"' + Markup._addGlobalAttributes(b) + ">", "</a>"]
        }
        return ""
      }
    },
    "major-heading": {
      block: true,
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {
        unnamed: {
          req: false,
          valid: /^first$/i
        },
        clear: {
          req: false,
          valid: /^(true|both|left|right)$/i
        },
        toc: {
          req: false,
          valid: /^false$/i
        }
      },
      toHtml: function (b) {
        if (!b.id) {
          b.id = g_urlize(b._textContents)
        }
        str = "<h2" + Markup._addGlobalAttributes(b);
        var c = ["heading-size-2"];
        if (b.first || b.unnamed) {
          c.push("first")
        }
        if (b.last) {
          c.push("last")
        }
        if (c.length > 0) {
          str += ' class="' + c.join(" ") + '"'
        }
        if (b.clear) {
          if (b.clear == "true" || b.clear == "both") {
            str += ' style="clear: both"'
          } else {
            str += ' style="clear: ' + b.clear + '"'
          }
        }
        return [str + ">", "</h2>"]
      },
      fromHtml: function (b) {
        return b.replace(/<h2\b[\s\S]*?>([\s\S]*?)<\/h2>/gi, "\n[major-heading]$1[/major-heading]")
      }
    },
    "minor-heading": {
      block: true,
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      attr: {
        unnamed: {
          req: false,
          valid: /^first$/i
        },
        toc: {
          req: false,
          valid: /^false$/i
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        if (!b.id) {
          b.id = g_urlize(b._textContents)
        }
        var e = "<h3" + Markup._addGlobalAttributes(b);
        var c = ["heading-size-3"];
        if (b.first || b.unnamed) {
          c.push("first")
        }
        if (b.last) {
          c.push("last")
        }
        if (c.length > 0) {
          e += ' class="' + c.join(" ") + '"'
        }
        return [e + ">", "</h3>"]
      },
      fromHtml: function (b) {
        return b.replace(/<h3\b[\s\S]*?>([\s\S]*?)<\/h3>/gi, "\n[minor-heading]$1[/minor-heading]")
      }
    },
    map: {
      empty: false,
      attr: {
        zone: {
          req: true,
          valid: /^-?[0-9a-z\-_]+$/i
        },
        source: {
          req: false,
          valid: /\S+/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      allowedChildren: {
        pin: 1
      },
      toHtml: function (c) {
        var b = c._contents;
        c.id = "dsgdfngjkfdg" + (Markup.maps.length);
        var e = "<div" + Markup._addGlobalAttributes(c) + '></div><div style="clear: left"></div>';
        Markup.maps.push([c.id, c.zone, b ? b : null]);
        return [e]
      }
    },
    mechanic: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        icon: {
          req: false,
          valid: /^false$/i
        },
        domain: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var j = c.unnamed;
        var h = Markup._getDatabaseDomainInfo(c, "hearthhead.com");
        var e = h[0];
        var f = h[1];
        if (g_hearthstone_mechanics && g_hearthstone_mechanics[j] && g_hearthstone_mechanics[j][f]) {
          var b = g_hearthstone_mechanics[j];
          var g = "<a" + Markup._addGlobalAttributes(c) + ' href="' + e + "/mechanic=" + j + "/" + g_urlize(b[f]) + '" class="' + (!c.icon ? ' icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + b.icon.toLowerCase() + '.gif"' : "") + ' align="absmiddle" /> <span class="tinyicontxt">';
          g += Markup._safeHtml(b[f]) + "</span></a>";
          return g
        }
        return '<a href="' + e + "/mechanic=" + j + '"' + Markup._addGlobalAttributes(c) + ">(" + LANG.types[221][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = e[1];
        if (g_hearthstone_cards && g_hearthstone_mechanics[f] && g_hearthstone_mechanics[f][c]) {
          return Markup._safeHtml(g_hearthstone_mechanics[f][c])
        }
        return LANG.types[221][0] + " #" + f
      }
    },
    n5: {
      empty: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9\.]+$/
        }
      },
      toHtml: function (b) {
        return GetN5(b.unnamed)
      }
    },
    pin: {
      empty: false,
      attr: {
        url: {
          req: false,
          valid: /\S+/
        },
        type: {
          req: false,
          valid: /^[0-9]+$/
        },
        x: {
          req: true,
          valid: /^[0-9]{1,2}(\.[0-9])?$/
        },
        y: {
          req: true,
          valid: /^[0-9]{1,2}(\.[0-9])?$/
        },
        path: {
          req: false,
          valid: /^([0-9]{1,2}(\.[0-9])?[,:]?)+$/
        }
      },
      taglessSkip: true,
      allowedClass: MARKUP_CLASS_STAFF,
      allowedParents: {
        map: 1
      },
      toHtml: function (e) {
        if (e.url && !Markup._isUrlSafe(e.url)) {
          e.url = ""
        }
        var g = e._contents;
        if (e.url && e.url.indexOf("npc=") != -1) {
          g = '<b class="q">' + g + '</b><br /><span class="q2">Click to view this NPC</span>'
        }
        if (e.url && (e.url.indexOf("/") < 0) && (e.url.indexOf("=") >= 0)) {
          e.url = "/" + e.url
        }
        var f = null;
        if (e.path) {
          var c = e.path.split(":"),
              f = [];
          for (var h = 0, b = c.length; h < b; ++h) {
            var j = c[h].split(",");
            if (j.length == 2) {
              f.push([parseFloat(j[0] || 0), parseFloat(j[1] || 0)])
            }
          }
        }
        return [[parseFloat(e.x || 0), parseFloat(e.y || 0),
        {
          label: g,
          url: e.url,
          type: e.type,
          lines: f
        }]]
      }
    },
    markupdoc: {
      empty: true,
      attr: {
        tag: {
          req: false,
          valid: /[a-z0-9]+/i
        },
        help: {
          req: false,
          valid: /^(admin|staff|premium|user|pending)$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      validate: function (b) {
        if (b.tag && !Markup.tags[b.tag]) {
          return false
        }
        return true
      },
      toHtml: function (e) {
        var f = "",
            c = (e.help ? Markup["CLASS_" + e.help.toUpperCase()] : false);
        if (c) {
          f += LANG.markup_helpdoc + '<div class="pad3"></div><table class="comment comment-markupdoc"><tr><th>' + LANG.markup_help1 + "</th><th>" + LANG.markup_help2 + "</th></tr>"
        }
        if (e.tag) {
          f = Markup._generateTagDocs(e.tag, c)
        } else {
          for (var b in Markup.tags) {
            if (!c && f != "") {
              f += '<div class="pad3"></div>'
            }
            f += Markup._generateTagDocs(b, c)
          }
        }
        return f + (c ? "</table>" : "")
      }
    },
    menu: {
      empty: true,
      trim: true,
      ltrim: true,
      rtrim: true,
      attr: {
        tab: {
          req: true,
          valid: /^[0-9]+$/
        },
        path: {
          req: true,
          valid: /\S+/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var c = b.path.split(",");
        PageTemplate.set({
          activeTab: b.tab,
          breadcrumb: c
        })
      }
    },
    mission: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var k = c.unnamed;
        var j = Markup._getDatabaseDomainInfo(c);
        var f = j[0];
        var g = j[1];
        var b = [];
        var e = null;
        if (c.diff) {
          b.push("diff=" + c.diff)
        }
        if (c.diffnew) {
          b.push("diffnew=" + c.diffnew)
        }
        if (c.tempname) {
          e = c.tempname
        }
        if (g_missions[k] && g_missions[k][g]) {
          var h = g_missions[k];
          return '<a href="' + f + "/mission=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + Markup._addGlobalAttributes(c) + "> " + Markup._safeHtml(h[g]) + "</a>"
        }
        return '<a href="' + f + "/mission=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + Markup._addGlobalAttributes(c) + ">" + (e ? e : ("(" + LANG.types[23][0] + " #" + k + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_missions[f] && g_missions[f][c]) {
          return Markup._safeHtml(g_missions[f][c])
        }
        return LANG.types[23][0] + " #" + f
      }
    },
    minibox: {
      empty: false,
      rtrim: true,
      itrim: true,
      attr: {
        "float": {
          req: false,
          valid: /^(left|right)$/i
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var c = "<div" + Markup._addGlobalAttributes(b) + ' class="minibox';
        if (b["float"] == "left") {
          c += " minibox-left"
        }
        c += '">';
        return [c, "</div>"]
      }
    },
    model: {
      empty: false,
      attr: {
        item: {
          req: false,
          valid: /^[0-9]+$/
        },
        object: {
          req: false,
          valid: /^[0-9]+$/
        },
        npc: {
          req: false,
          valid: /^[0-9]+$/
        },
        itemset: {
          req: false,
          valid: /^[0-9,]+$/
        },
        slot: {
          req: false,
          valid: /^[0-9]+$/
        },
        humanoid: {
          req: false,
          valid: /^1$/
        },
        "float": {
          req: false,
          valid: /^(left|right)$/i
        },
        img: {
          req: false,
          valid: /\S+/
        },
        link: {
          req: false,
          valid: /\S+/
        },
        label: {
          req: false,
          valid: /[\S ]+/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      skipSlots: {
        4: 1,
        5: 1,
        6: 1,
        7: 1,
        8: 1,
        9: 1,
        10: 1,
        16: 1,
        19: 1,
        20: 1
      },
      toHtml: function (b) {
        var e = "";
        var c = ["border"];
        if (b["float"]) {
          c.push("markup-float-" + b["float"])
        }
        if (b.npc) {
          e = "<a" + Markup._addGlobalAttributes(b) + ' href="#modelviewer:1:' + b.npc + ":" + (b.humanoid ? "1" : "0") + '" onclick="ModelViewer.show({ type: 1, displayId: ' + b.npc + ", slot: " + b.slot + ", " + (b.humanoid ? "humanoid: 1, " : "") + "displayAd: 1, fromTag: 1" + (b.link ? ", link: '" + Markup._safeJsString(b.link) + "'" : "") + (b.label ? ", label: '" + Markup._safeJsString(b.label) + "'" : "") + ' });"><img alt="' + Markup._safeHtml(b._contents) + '" title="' + Markup._safeHtml(b._contents) + '" src="' + (b.img ? b.img : g_staticUrl + "/modelviewer/thumbs/npc/" + b.npc + '.png" width="150" height="150') + '" ';
          if (c) {
            e += 'class="' + c.join(" ") + '"'
          }
          e += "/></a>";
          return [e]
        } else {
          if (b.object) {
            e = "<a" + Markup._addGlobalAttributes(b) + ' href="#modelviewer:2:' + b.object + '" onclick="ModelViewer.show({ type: 2, displayId: ' + b.object + ", displayAd: 1, fromTag: 1" + (b.link ? ", link: '" + Markup._safeJsString(b.link) + "'" : "") + (b.label ? ", label: '" + Markup._safeJsString(b.label) + "'" : "") + ' });"><img alt="' + Markup._safeHtml(b._contents) + '" title="' + Markup._safeHtml(b._contents) + '" src="' + (b.img ? b.img : g_staticUrl + "/modelviewer/thumbs/obj/" + b.object + '.png" width="150" height="150') + '" ';
            if (c) {
              e += 'class="' + c.join(" ") + '"'
            }
            e += "/></a>";
            return [e]
          } else {
            if (b.item && b.slot) {
              e = "<a" + Markup._addGlobalAttributes(b) + ' href="#modelviewer:3:' + b.item + ":" + b.slot + '" onclick="ModelViewer.show({ type: 3, displayId: ' + b.item + ", slot: " + b.slot + ", displayAd: 1, fromTag: 1" + (b.link ? ", link: '" + Markup._safeJsString(b.link) + "'" : "") + (b.label ? ", label: '" + Markup._safeJsString(b.label) + "'" : "") + ' });"><img alt="' + Markup._safeHtml(b._contents) + '" title="' + Markup._safeHtml(b._contents) + '" src="' + (b.img ? b.img : g_staticUrl + "/modelviewer/thumbs/item/" + b.item + '.png" width="150" height="150') + '" ';
              if (c) {
                e += 'class="' + c.join(" ") + '"'
              }
              e += "/></a>";
              return [e]
            } else {
              if (b.itemset) {
                e = "<a" + Markup._addGlobalAttributes(b) + ' href="javascript:;" onclick="ModelViewer.show({ type: 4, equipList: [' + b.itemset + "], displayAd: 1, fromTag: 1" + (b.link ? ", link: '" + Markup._safeJsString(b.link) + "'" : "") + (b.label ? ", label: '" + Markup._safeJsString(b.label) + "'" : "") + ' });">'
              } else {
                return ["[model]", "[/model]"]
              }
            }
          }
        }
        return [e, "</a>"]
      }
    },
    money: {
      empty: true,
      attr: {
        unnamed: {
          req: false,
          valid: /^[0-9]+$/
        },
        side: {
          req: false,
          valid: /^(alliance|horde|both)$/i
        },
        items: {
          req: false,
          valid: /^[0-9,]+$/
        },
        currency: {
          req: false,
          valid: /^[0-9,]+$/
        },
        achievement: {
          req: false,
          valid: /\S+/
        },
        arena: {
          req: false,
          valid: /^[0-9]+$/
        },
        honor: {
          req: false,
          valid: /^[0-9]+$/
        },
        conquest: {
          req: false,
          valid: /^[0-9]+$/
        },
        justice: {
          req: false,
          valid: /^[0-9]+$/
        },
        valor: {
          req: false,
          valid: /^[0-9]+$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var e = [],
            c = [];
        if (b.items) {
          var g = b.items.split(",");
          if (g.length >= 2) {
            for (var f = 0; f < g.length - 1; f += 2) {
              e.push([g[f], g[f + 1]])
            }
          }
        }
        if (b.currency) {
          var g = b.currency.split(",");
          if (g.length >= 2) {
            for (var f = 0; f < g.length - 1; f += 2) {
              c.push([g[f], g[f + 1]])
            }
          }
        }
        if (b.arena && !b.conquest) {
          b.conquest = b.arena
        }
        if (b.honor) {
          c.push([392, b.honor])
        }
        if (b.conquest) {
          c.push([390, b.conquest])
        }
        if (b.justice) {
          c.push([395, b.justice])
        }
        if (b.valor) {
          c.push([396, b.valor])
        }
        return g_getMoneyHtml(b.unnamed, b.side, e, c, b.achievement)
      }
    },
    npc: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var e = g[0];
        var f = g[1];
        if (g_npcs[h] && g_npcs[h][f]) {
          var c = g_npcs[h];
          return '<a href="' + e + "/npc=" + h + '"' + Markup._addGlobalAttributes(b) + ">" + Markup._safeHtml(c[f]) + "</a>"
        }
        return '<a href="' + e + "/npc=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[1][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_npcs[f] && g_npcs[f][c]) {
          return Markup._safeHtml(g_npcs[f][c])
        }
        return LANG.types[1][0] + " #" + f
      }
    },
    petability: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var k = c.unnamed;
        var j = Markup._getDatabaseDomainInfo(c);
        var f = j[0];
        var g = j[1];
        var b = [];
        var e = null;
        if (c.diff) {
          b.push("diff=" + c.diff)
        }
        if (c.diffnew) {
          b.push("diffnew=" + c.diffnew)
        }
        if (c.tempname) {
          e = c.tempname
        }
        if (g_petabilities[k] && g_petabilities[k][g]) {
          var h = g_petabilities[k];
          return '<a href="' + f + "/petability=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + Markup._addGlobalAttributes(c) + (h.icon ? (' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + h.icon.toLowerCase() + '.gif" align="absmiddle" /') : "") + '> <span class="tinyicontxt">' + Markup._safeHtml(h[g]) + "</span></a>"
        }
        return '<a href="' + f + "/petability=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + Markup._addGlobalAttributes(c) + ">" + (e ? e : ("(" + LANG.types[200][0] + " #" + k + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_petabilities[f] && g_petabilities[f][c]) {
          return Markup._safeHtml(g_petabilities[f][c])
        }
        return LANG.types[200][0] + " #" + f
      }
    },
    object: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var c = g[0];
        var e = g[1];
        if (g_objects[h] && g_objects[h][e]) {
          var f = g_objects[h];
          return '<a href="' + c + "/object=" + h + '"' + Markup._addGlobalAttributes(b) + ">" + Markup._safeHtml(f[e]) + "</a>"
        }
        return '<a href="' + c + "/object=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[2][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_objects[f] && g_objects[f][c]) {
          return Markup._safeHtml(g_objects[f][c])
        }
        return LANG.types[2][0] + " #" + f
      }
    },
    ol: {
      block: true,
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      allowedChildren: {
        li: 1
      },
      toHtml: function (b) {
        var c = "<ol";
        var e = [];
        if (b.first) {
          e.push("first")
        }
        if (b.last) {
          e.push("last")
        }
        if (e.length > 0) {
          c += ' class="' + e.join(" ") + '"'
        }
        c += Markup._addGlobalAttributes(b) + ">";
        return [c, "</ol>"]
      },
      fromHtml: function (f, e) {
        e = e || 0;
        var b;
        if (b = Markup.matchOuterTags(f, "<ol\\b[\\s\\S]*?>", "</ol>", "g")) {
          for (var c = 0; c < b.length; ++c) {
            f = f.replace(b[c][1] + b[c][0] + b[c][2], "\n" + Array(e + 1).join("\t") + "[ol]" + Markup.tags.ol.fromHtml(b[c][0], e + 1) + "\n" + Array(e + 1).join("\t") + "[/ol]")
          }
        }
        return f
      }
    },
    p: {
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        return ['<p style="line-height: 1.4em; margin: 1em 0px 0px 0px;"' + Markup._addGlobalAttributes(b) + ">", "</p>"]
      },
      fromHtml: function (f) {
        var b;
        if (b = f.match(/<p\b[\s\S]*?>[\s\S]*?<\/p>/gi)) {
          for (var c = 0; c < b.length; ++c) {
            var g = b[c].match(/^<p\b[\s\S]*?text-align:\s*(center|left|right)/i);
            var e = b[c].match(/<p\b[\s\S]*?>([\s\S]*?)<\/p>/i);
            f = f.replace(b[c], "[pad][div" + (g ? " align=" + g[1] : "") + "]" + (e ? e[1] : "") + "[/div][pad]")
          }
        }
        return f
      }
    },
    pad: {
      empty: true,
      block: true,
      trim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var c = '<div class="pad';
        if (b.first) {
          c += " first"
        }
        if (b.last) {
          c += " last"
        }
        c += '"' + Markup._addGlobalAttributes(b) + "></div>";
        return c
      }
    },
    pet: {
      empty: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        icon: {
          req: false,
          valid: /^false$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var c = g[0];
        var e = g[1];
        if (g_pet_families && g_pet_families[h] && g_pets && g_pets[h]) {
          var f = "<span" + (!b.icon ? ' class="icontiny" style="background-image: url(' + g_staticUrl + "/images/wow/icons/tiny/" + g_pets[h]["icon"].toLowerCase() + ".gif)" : "") + '">';
          f += '<a href="' + c + "/pet=" + h + '"' + Markup._addGlobalAttributes(b) + ">" + Markup._safeHtml(g_pet_families[h]) + "</a></span>";
          return f
        }
        return '<a href="' + c + "/pet=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[9][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var c = b.unnamed;
        if (g_pet_families && g_pet_families[c]) {
          return Markup._safeHtml(g_pet_families[c])
        }
        return LANG.types[9][0] + " #" + c
      }
    },
    pre: {
      empty: false,
      block: true,
      rtrim: true,
      toHtml: function (b) {
        var c = '<pre class="code';
        if (b.first) {
          c += " first"
        }
        if (b.last) {
          c += " last"
        }
        c += '"' + Markup._addGlobalAttributes(b) + ">";
        return [c, "</pre>"]
      },
      fromHtml: function (b) {
        return b.replace(/<pre\b[\s\S]*?>([\s\S]*?)<\/pre>/gi, "[pre]$1[/pre]")
      }
    },
    quest: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        icon: {
          req: false,
          valid: /^false$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var j = b.unnamed;
        var h = Markup._getDatabaseDomainInfo(b);
        var e = h[0];
        var f = h[1];
        if (g_quests[j] && g_quests[j][f]) {
          var c = g_quests[j];
          var g = "";
          if (c.hasOwnProperty("_side")) {
            switch (c._side) {
            case 1:
              g = " icon-alliance";
              break;
            case 2:
              g = " icon-horde";
              break
            }
          }
          return '<a href="' + e + "/quest=" + j + '"' + (!b.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + (c.daily ? "quest_start_daily" : "quest_start") + '.gif"' : "") + Markup._addGlobalAttributes(b) + ' align="absmiddle" /> <span class="tinyicontxt' + g + '">' + Markup._safeHtml(c[f]) + "</span></a>"
        }
        return '<a href="' + e + "/quest=" + j + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[5][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_quests[f] && g_quests[f][c]) {
          return Markup._safeHtml(g_quests[f][c])
        }
        return LANG.types[5][0] + " #" + f
      }
    },
    quote: {
      block: true,
      empty: false,
      rtrim: true,
      ltrim: true,
      itrim: true,
      attr: {
        unnamed: {
          req: false,
          valid: /[\S ]+/
        },
        url: {
          req: false,
          valid: /\S+/
        },
        blizzard: {
          req: false,
          valid: /^true$/
        },
        pname: {
          req: false
        },
        wowhead: {
          req: false,
          valid: /^true$/
        },
        display: {
          req: false,
          valid: /^block$/
        },
        align: {
          req: false,
          valid: /^(left|right|center)$/i
        },
        "float": {
          req: false,
          valid: /^(left|right|none)$/i
        },
        clear: {
          req: false,
          valid: /^(left|right|both)$/i
        },
        collapse: {
          req: false,
          valid: /^true$/
        }
      },
      allowedModes: {
        article: 1,
        quickfacts: 1,
        comment: 1
      },
      validate: function (b) {
        if (b.blizzard || b.wowhead || b.collapse || b.url) {
          if (Markup.allow < Markup.CLASS_STAFF) {
            return false
          }
        }
        return true
      },
      toHtml: function (j) {
        var k = "<div" + Markup._addGlobalAttributes(j);
        var l = [];
        var e = ["quote"];
        if (j.display) {
          l.push("display: " + j.display)
        }
        if (j.align) {
          l.push("text-align: " + j.align)
        }
        if (j.clear) {
          l.push("clear:" + j.clear)
        }
        if (l.length) {
          k += ' style="' + l.join("; ") + '" '
        }
        if (j.first) {
          e.push("first")
        }
        if (j.last) {
          e.push("last")
        }
        if (j["float"]) {
          e.push("markup-float-" + j["float"])
        }
        k += ' class="' + e.join(" ");
        if (j.blizzard) {
          if (j.unnamed && j.blizzard) {
            var c = Markup._fixUrl(j.url);
            var g = "View Original";
            if (c.indexOf("bluetracker") >= 0) {
              g = "Blue Tracker"
            }
            if (typeof(j.pname) != "undefined") {
              g = j.pname
            }
            var f = j.unnamed.trim();
            if (f.length <= 0) {
              return ["", ""]
            }
            k = k.replace('class="quote', 'class="quote-blizz');
            k += (j.collapse ? " collapse" : "") + '"><div class="quote-header">';
            var h = c.match(/https?:\/\/(us|eu)\.battle\.net\/wow\/en\/blog\/([0-9]+)/i) || c.match(/https?:\/\/(us|eu)\.battle\.net\/wow\/en\/forum\/topic\/([0-9]+)/i);
            if (h) {
              k += 'Originally posted by <strong>Blizzard</strong> (<a href="' + c + '" target="_blank">Official Post</a>';
              var b = h[2];
              k += ' | <a href="http://www.wowhead.com/bluetracker?topic=' + b + '">Blue Tracker</a>)</div><div class="quote-body"><hr /><h2 class="heading-size-2">' + f + "</h2>"
            } else {
              k += (j.url && Markup._isUrlSafe(j.url) ? 'Originally posted by <strong>Blizzard</strong> (<a href="' + Markup._fixUrl(j.url) + '" target="_blank">' + g + '</a>)</div><div class="quote-body"><hr />' : '<h2 class="heading-size-2">' + f + "</h2>")
            }
            return [k, "</div></div>"]
          }
          return ["", ""]
        } else {
          if (j.wowhead) {
            k = k.replace('class="quote', 'class="quote-wh');
            k += (j.collapse ? " collapse" : "") + '">';
            k += '<div class="quote-body">';
            return [k, "</div></div>"]
          } else {
            k += '">';
            if (j.unnamed) {
              var f = j.unnamed.trim();
              if (f.length > 0) {
                k += "<small><b>";
                if (j.url && Markup._isUrlSafe(j.url)) {
                  k += '<a href="' + Markup._fixUrl(j.url) + '"' + (Markup._isUrlExternal(j.url) ? ' target="_blank"' : "") + ">" + f + "</a>"
                } else {
                  if (g_isUsernameValid(f)) {
                    k += '<a href="/user=' + f + '">' + f + "</a>"
                  } else {
                    k += f
                  }
                }
                k += "</b> " + LANG.markup_said + '</small><div class="pad"></div>'
              }
            }
            return [k, "</div>"]
          }
        }
      }
    },
    race: {
      empty: true,
      allowInReplies: true,
      valid: {
        1: true,
        2: true,
        3: true,
        4: true,
        5: true,
        6: true,
        7: true,
        8: true,
        9: true,
        10: true,
        11: true,
        22: true,
        24: true,
        25: true,
        26: true
      },
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        gender: {
          req: false,
          valid: /^(0|1)$/
        },
        icon: {
          req: false,
          valid: /^false$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        if (Markup.tags.race.valid[b.unnamed]) {
          return true
        }
        return false
      },
      toHtml: function (b) {
        var j = b.unnamed;
        var c = b.gender | 0;
        var h = Markup._getDatabaseDomainInfo(b);
        var e = h[0];
        var g = h[1];
        if (g_races[j] && g_races[j][g]) {
          var f = g_races[j];
          return '<a href="' + e + "/race=" + j + '"' + (!b.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + g_races.getIcon(j, c) + '.gif"' : "") + Markup._addGlobalAttributes(b) + ' align="absmiddle" /> <span class="tinyicontxt">' + Markup._safeHtml(f[g]) + "</span></a>"
        }
        return '<a href="' + e + "/race=" + j + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[14][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_races[f] && g_races[f][c]) {
          return Markup._safeHtml(g_races[f][c])
        }
        return LANG.types[14][0] + " #" + f
      }
    },
    random: {
      empty: false,
      itrim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (c) {
        var e = [];
        for (var b = 0; b < c._nodes.length; b++) {
          if (c._nodes[b].name == "randomoption") {
            e.push(c._nodes[b].attr._contents)
          }
        }
        if (e.length == 0) {
          return [c._contents]
        }
        return [e[Math.floor(Math.random() * e.length)]]
      }
    },
    randomoption: {
      empty: false,
      rtrim: true,
      ltrim: true,
      itrim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      allowedParents: {
        random: 1
      },
      toHtml: function (b) {
        return ["", ""]
      }
    },
    resource: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (e) {
        var k = e.unnamed;
        var j = Markup._getDatabaseDomainInfo(e);
        var g = j[0];
        var h = j[1];
        var c = [];
        var f = null;
        if (e.diff) {
          c.push("diff=" + e.diff)
        }
        if (e.diffnew) {
          c.push("diffnew=" + e.diffnew)
        }
        if (e.tempname) {
          f = e.tempname
        }
        if (g_resources[k] && g_resources[k][h]) {
          var b = g_resources[k];
          return '<a href="' + g + "/resource=" + k + '"' + (c.length ? ' rel="' + c.join("&") + '"' : "") + (!e.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + b.icon.toLowerCase() + '.gif" align="absmiddle"' : "") + Markup._addGlobalAttributes(e) + "> " + Markup._safeHtml(b[h]) + "</a>"
        }
        return '<a href="' + g + "/resource=" + k + '"' + (c.length ? ' rel="' + c.join("&") + '"' : "") + Markup._addGlobalAttributes(e) + ">" + (f ? f : ("(" + LANG.types[27][0] + " #" + k + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_resources[f] && g_resources[f][c]) {
          return Markup._safeHtml(g_resources[f][c])
        }
        return LANG.types[27][0] + " #" + f
      }
    },
    reveal: {
      empty: false,
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        if (!Markup.inBlog || Markup.inBlog > 1) {
          return ["", ""]
        }
        return ['<span id="reveal-' + Markup.reveals + '" style="display: none">', '</span> <a id="revealtoggle-' + Markup.reveals + '" class="revealtoggle" href="javascript:;" onclick="Markup.toggleReveal(' + Markup.reveals + ');">(read more)</a>'];
        Markup.reveals++
      }
    },
    s: {
      empty: false,
      allowInReplies: true,
      toHtml: function (b) {
        return ["<del" + Markup._addGlobalAttributes(b) + ">", "</del>"]
      },
      fromHtml: function (b) {
        b = b.replace(/<del\b[\s\S]*?>([\s\S]*?)<\/del>/gi, "[s]$1[/s]");
        return b.replace(/<s\b[\s\S]*?>([\s\S]*?)<\/s>/gi, "[s]$1[/s]")
      }
    },
    screenshot: {
      empty: false,
      attr: {
        id: {
          req: false,
          valid: /^[0-9]+$/
        },
        url: {
          req: false,
          valid: /\S+/
        },
        thumb: {
          req: false,
          valid: /\S+/
        },
        size: {
          req: false,
          valid: /^(thumb|resized|normal)$/i
        },
        width: {
          req: false,
          valid: /^[0-9]+$/
        },
        height: {
          req: false,
          valid: /^[0-9]+$/
        },
        "float": {
          req: false,
          valid: /^(left|right)$/i
        },
        border: {
          req: false,
          valid: /^[0-9]+$/
        }
      },
      taglessSkip: true,
      allowedClass: MARKUP_CLASS_STAFF,
      validate: function (b) {
        if (b.url && !b.thumb) {
          return false
        } else {
          if (!b.id && !b.url) {
            return false
          }
        }
        return true
      },
      toHtml: function (b) {
        var g = [];
        var f = "";
        var e = "";
        if (b.id) {
          f = g_staticUrl + "/uploads/screenshots/normal/" + b.id + ".jpg";
          var h = b.id;
          if (b.thumb && b.thumb.match(/^[0-9]+$/)) {
            h = b.thumb;
            b.thumb = null
          }
          e = g_staticUrl + "/uploads/screenshots/" + (b.size ? b.size : "thumb") + "/" + h + ".jpg"
        } else {
          if (b.url) {
            f = b.url
          }
        }
        if (b.thumb) {
          e = b.thumb
        }
        var c = b._contents.replace(/\n/g, "<br />");
        if (!g_screenshots[Markup.uid]) {
          g_screenshots[Markup.uid] = []
        }
        var j = '<a href="javascript:;" onclick="if(!g_isLeftClick(event)) return; ScreenshotViewer.show({screenshots: \'' + Markup.uid + "', pos: " + g_screenshots[Markup.uid].length + '}); return false;"' + Markup._addGlobalAttributes(b) + ">";
        j += '<img src="' + e + '" ';
        if (b.size && b.width) {
          j += ' width="' + b.width + '"'
        }
        if (b.size && b.height) {
          j += ' height="' + b.height + '"'
        }
        if (b.border != 0) {
          g.push("border")
        }
        if (b["float"]) {
          g.push("markup-float-" + b["float"])
        }
        if (g.length) {
          j += ' class="' + g.join(" ") + '"'
        }
        j += 'alt="" ';
        var k = {
          caption: c,
          width: (b.size ? null : b.width),
          height: (b.size ? null : b.height),
          noMarkup: true
        };
        if (b.id) {
          k.id = b.id
        } else {
          k.url = b.url
        }
        g_screenshots[Markup.uid].push(k);
        return [j + "/></a>"]
      }
    },
    script: {
      ltrim: true,
      rtrim: true,
      empty: false,
      attr: {
        src: {
          req: false,
          valid: /^\S+$/
        }
      },
      allowedClass: MARKUP_CLASS_ADMIN,
      allowedChildren: {
        "<text>": 1
      },
      rawText: true,
      taglessSkip: true,
      toHtml: function (b) {
        if (b.src) {
          $.getScript(b.src, function () {
            $.globalEval(b._contents)
          })
        } else {
          $.globalEval(b._contents)
        }
        return [""]
      }
    },
    season: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var j = c.unnamed;
        var h = Markup._getDatabaseDomainInfo(c, "hearthhead.com");
        var e = h[0];
        var f = h[1];
        if (g_hearthstone_seasons && g_hearthstone_seasons[j] && g_hearthstone_seasons[j][f]) {
          var b = g_hearthstone_seasons[j];
          var g = "<a" + Markup._addGlobalAttributes(c) + ' href="' + e + "/season=" + j + "/" + g_urlize(b[f]) + '"><span class="tinyicontxt">';
          g += Markup._safeHtml(b[f]) + "</span></a>";
          return g
        }
        return '<a href="' + e + "/season=" + j + '"' + Markup._addGlobalAttributes(c) + ">(" + LANG.types[226][0] + " #" + j + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b, "hearthhead.com");
        var c = e[1];
        if (g_hearthstone_seasons && g_hearthstone_seasons[f] && g_hearthstone_seasons[f][c]) {
          return Markup._safeHtml(g_hearthstone_seasons[f][c])
        }
        return LANG.types[226][0] + " #" + f
      }
    },
    section: {
      empty: false,
      ltrim: true,
      rtrim: true,
      trim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {},
      toHtml: function (b) {
        return ['<div class="secheader"><var></var>', "</div>"]
      }
    },
    ship: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9\.]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        quality: {
          req: false,
          valid: /^[2345]$/
        },
        abilities: {
          req: false,
          valid: /^[0-9:]+$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (h) {
        var e = h.unnamed;
        var g = Markup._getDatabaseDomainInfo(h);
        var c = g[0];
        var k = g[1];
        var o = [];
        var j = null;
        if (h.diff) {
          o.push("diff=" + h.diff)
        }
        if (h.diffnew) {
          o.push("diffnew=" + h.diffnew)
        }
        if (h.quality) {
          o.push("q=" + h.quality)
        }
        if (h.abilities) {
          o.push("abil=" + h.abilities)
        }
        if (h.tempname) {
          j = h.tempname
        }
        var n = parseInt(e);
        if (g_ships[n] && g_ships[n][k]) {
          var f = g_ships[n];
          var m = f.quality;
          if (h.quality) {
            m = h.quality
          }
          if (!h.hasOwnProperty("class")) {
            h["class"] = "q" + m
          } else {
            if (!/\bq\d\b/.test(h["class"])) {
              h["class"] += " q" + m
            }
          }
          var b = f[k];
          var l;
          if ((l = b.indexOf(" / ")) != -1) {
            if (/\.1$/.test(e)) {
              b = b.substr(0, l)
            } else {
              if (/\.2$/.test(e)) {
                b = b.substr(l + 3)
              }
            }
          }
          return '<a href="' + c + "/ship=" + e + '"' + (o.length ? ' rel="' + o.join("&") + '"' : "") + Markup._addGlobalAttributes(h) + ">" + Markup._safeHtml(b) + "</a>"
        }
        return '<a href="' + c + "/ship=" + e + '"' + (o.length ? ' rel="' + o.join("&") + '"' : "") + Markup._addGlobalAttributes(h) + ">" + (j ? j : ("(" + LANG.types[25][0] + " #" + e + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_ships[f] && g_ships[f][c]) {
          return Markup._safeHtml(g_ships[f][c])
        }
        return LANG.types[25][0] + " #" + f
      }
    },
    skill: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        icon: {
          req: false,
          valid: /^false$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var e = g[0];
        var f = g[1];
        if (g_skills[h] && g_skills[h][f]) {
          var c = g_skills[h];
          return '<a href="' + e + "/skill=" + h + '"' + (!b.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + g_skills.getIcon(h) + '.gif"' : "") + Markup._addGlobalAttributes(b) + ' align="absmiddle" /> <span class="tinyicontxt">' + Markup._safeHtml(c[f]) + "</span></a>"
        }
        return '<a href="' + e + "/skill=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[15][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_skills[f] && g_skills[f][c]) {
          return Markup._safeHtml(g_skills[f][c])
        }
        return LANG.types[15][0] + " #" + f
      }
    },
    small: {
      empty: false,
      toHtml: function (b) {
        return ["<small" + Markup._addGlobalAttributes(b) + ">", "</small>"]
      },
      fromHtml: function (b) {
        return b.replace(/<small\b[\s\S]*?>([\s\S]*?)<\/small>/gi, "[small]$1[/small]")
      }
    },
    sound: {
      empty: true,
      attr: {
        unnamed: {
          req: false,
          valid: /^[0-9]+$/
        },
        src: {
          req: false,
          valid: /\S+/
        },
        title: {
          req: false,
          valid: /\S+/
        },
        type: {
          req: false,
          valid: /\S+/
        },
        src2: {
          req: false,
          valid: /\S+/
        },
        type2: {
          req: false,
          valid: /\S+/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if (b.unnamed) {
          return true
        }
        if (!b.src) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var f, k, j, e, g, c;
        if (b.unnamed) {
          if (!(b.unnamed in g_sounds)) {
            return ""
          }
          if (!g_sounds[b.unnamed].hasOwnProperty("files")) {
            return ""
          }
          if (g_sounds[b.unnamed].files.length == 0) {
            return ""
          }
          if (!g_sounds[b.unnamed].files[0].hasOwnProperty("type")) {
            return ""
          }
          f = g_sounds[b.unnamed].files[0].type;
          k = g_sounds[b.unnamed].files[0].url;
          j = g_sounds[b.unnamed].name ? g_sounds[b.unnamed].name : g_sounds[b.unnamed].files[0].title;
          e = (b.domain ? "http://" + b.domain + ".wowhead.com" : g_getRelativeHostPrefix("wowhead.com")) + "/sound=" + b.unnamed + "/" + g_urlize(j)
        } else {
          if (Markup.allow < MARKUP_CLASS_STAFF) {
            return ""
          }
          k = b.src;
          j = b.title ? b.title : "(Unknown)";
          if (b.hasOwnProperty("type")) {
            f = b.type
          } else {
            switch (b.src.toLowerCase().substr(-4)) {
            case ".mp3":
              f = "audio/mpeg";
              break;
            case ".ogg":
              f = 'audio/ogg; codecs="vorbis"';
              break
            }
          }
          if (b.src2) {
            g = b.src2;
            if (b.hasOwnProperty("type2")) {
              c = b.type2
            } else {
              switch (b.src2.toLowerCase().substr(-4)) {
              case ".mp3":
                c = "audio/mpeg";
                break;
              case ".ogg":
                c = 'audio/ogg; codecs="vorbis"';
                break
              }
            }
          }
        }
        var h = '<audio preload="none" controls="true"' + Markup._addGlobalAttributes(b);
        if (b.unnamed) {
          h += ' rel="sound=' + b.unnamed + '"'
        }
        h += ">";
        if (!(/^(https?:)?\/\//).test(k)) {
          k = g_staticUrl + "/wowsounds" + k
        }
        h += '<source src="' + k + '"';
        if (f) {
          h += ' type="' + f.replace(/"/g, "&quot;") + '"'
        }
        h += ">";
        if (g) {
          h += '<source src="' + g + '"';
          if (c) {
            h += ' type="' + c.replace(/"/g, "&quot;") + '"'
          }
          h += ">"
        }
        h += "</audio>";
        if (e) {
          h = '<div class="audiomarkup">' + h + '<br><a href="' + e + '">' + j + "</a></div>"
        }
        return h
      },
      fromHtml: function (c) {
        var b = c.match(/<audio [^>]*\brel="sound=(\d+)/);
        if (b) {
          return "[sound=" + b[1] + "]"
        }
        return c.replace(/<audio\b[\s\S]*?><source\b[\s\S]*\bsrc="([^"]*?)"[\s\S]*?<\/audio>/gi, '[sound src="$1"]')
      }
    },
    span: {
      empty: false,
      attr: {
        unnamed: {
          req: false,
          valid: /^(hidden|invisible)$/
        },
        tooltip: {
          req: false,
          valid: /\S+/
        },
        tooltip2: {
          req: false,
          valid: /\S+/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var e = "<span" + Markup._addGlobalAttributes(b);
        var c = [];
        if (b.unnamed == "hidden") {
          c.push("display: none")
        } else {
          if (b.unnamed == "invisible") {
            c.push("visibility: hidden")
          }
        }
        if (c.length > 0) {
          e += ' style="' + c.join(";") + '"'
        }
        if (b.tooltip && Markup.tooltipTags[b.tooltip]) {
          e += " onmouseover=\"$WH.Tooltip.showAtCursor(event, Markup.tooltipTags['" + b.tooltip + "'], 0, 0, " + (Markup.tooltipBare[b.tooltip] ? "null" : "'q'") + ", " + (b.tooltip2 && Markup.tooltipTags[b.tooltip2] ? "Markup.tooltipTags['" + b.tooltip2 + "']" : "null") + ')" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()"'
        }
        e += ">";
        return [e, "</span>"]
      },
      fromHtml: function (b) {
        return b.replace(/<span\b([\s\S]*?)>([\s\S]*?)<\/span>/gi, function (g, k, j) {
          var f = /style="[\s\S]*?color:\s?#(\w{6});?/i;
          var h = k.match(f);
          if (h) {
            var c = {
              ffd100: "q",
              "9d9d9d": "q0",
              ffffff: "q1",
              "1eff00": "q2",
              "0070dd": "q3",
              a335ee: "q4",
              ff8000: "q5",
              e5cc80: "q6",
              "00ccff": "q8",
              "71d5ff": "q9",
              ff4040: "q10",
              ffff98: "q13",
              ff8040: "r1",
              ffff00: "r2",
              "40bf40": "r3",
              "808080": "r4",
              c69b6d: "c1",
              f48cba: "c2",
              aad372: "c3",
              fff468: "c4",
              c41e3b: "c6",
              "2359ff": "c7",
              "68ccef": "c8",
              "9382c9": "c9",
              "008467": "c10",
              ff7c0a: "c11"
            };
            var e = c[h[1]];
            if (e) {
              return "[color=" + e + "]" + j + "[/color]"
            }
          }
          return g
        })
      }
    },
    spell: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        icon: {
          req: false,
          valid: /^false$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        buff: {
          req: false,
          valid: /^true$/
        },
        mop: {
          req: false,
          valid: /^[0-9]+$/
        },
        mopname: {
          req: false,
          valid: /\S+/
        },
        mopicon: {
          req: false,
          valid: /\S+/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var k = c.unnamed;
        var j = Markup._getDatabaseDomainInfo(c);
        var g = j[0];
        var h = j[1];
        var b = [];
        var f = null;
        if (c.buff) {
          b.push("buff")
        }
        if (c.diff) {
          b.push("diff=" + c.diff)
        }
        if (c.diffnew) {
          b.push("diffnew=" + c.diffnew)
        }
        if (c.mop) {
          b.push("mop=" + c.mop)
        }
        if (c.tempname) {
          f = c.tempname
        }
        if (g_spells[k] && g_spells[k][h]) {
          var e = g_spells[k];
          return '<a href="' + g + "/spell=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + (!c.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + e.icon.toLowerCase() + '.gif"' : "") + Markup._addGlobalAttributes(c) + ' align="absmiddle" /> <span class="tinyicontxt">' + Markup._safeHtml(e[h]) + "</span></a>"
        }
        if (c.mop && c.mopname && c.mopicon && c.mopicon.indexOf(".jpg", c.mopicon.length - 4) !== -1) {
          return '<span class="tooltip-inside-icon" style="background:url(' + g_staticUrl + "images/wow/icons/mop-talents/18/" + Markup._safeHtml(c.mopicon) + ')"></span> <a href="' + g + "/spell=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + ' ><span class="tinyicontxt">' + Markup._safeHtml(c.mopname) + "</span></a>"
        }
        return '<a href="' + g + "/spell=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + ">" + (f ? f : ("(" + LANG.types[6][0] + " #" + k + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_spells[f] && g_spells[f][c]) {
          return Markup._safeHtml(g_spells[f][c])
        }
        return LANG.types[6][0] + " #" + f
      }
    },
    spoiler: {
      block: true,
      empty: false,
      rtrim: true,
      ltrim: true,
      itrim: true,
      toHtml: function (b) {
        return ['<div class="pad"></div><small><b>' + LANG.markup_spoil + "</b></small><div" + Markup._addGlobalAttributes(b) + ' class="spoiler">', "</div>"]
      }
    },
    statistic: {
      empty: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        icon: {
          req: false,
          valid: /^false$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var h = b.unnamed;
        var g = Markup._getDatabaseDomainInfo(b);
        var e = g[0];
        var f = g[1];
        if (g_achievements[h] && g_achievements[h][f]) {
          var c = g_achievements[h];
          return '<a href="' + e + "/achievement=" + h + '"' + (!b.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + c.icon.toLowerCase() + '.gif"' : "") + Markup._addGlobalAttributes(b) + ' align="absmiddle" /> <span class="tinyicontxt">' + Markup._safeHtml(c[f]) + "</span></a>"
        }
        return '<a href="' + e + "/achievement=" + h + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[10][0] + " #" + h + ")</a>"
      },
      toText: function (b) {
        var g = b.unnamed;
        var f = Markup._getDatabaseDomainInfo(b);
        var c = f[0];
        var e = f[1];
        if (g_achievements[g] && g_achievements[g][e]) {
          return Markup._safeHtml(g_achievements[g][e])
        }
        return LANG.types[10][0] + " #" + g
      }
    },
    style: {
      ltrim: true,
      rtrim: true,
      empty: false,
      allowedClass: MARKUP_CLASS_ADMIN,
      allowedChildren: {
        "<text>": 1
      },
      rawText: true,
      taglessSkip: true,
      toHtml: function (b) {
        g_addCss(b._contents);
        return [""]
      }
    },
    sub: {
      empty: false,
      toHtml: function (b) {
        return ["<sub" + Markup._addGlobalAttributes(b) + ">", "</sub>"]
      },
      fromHtml: function (b) {
        return b.replace(/<sub\b[\s\S]*?>([\s\S]*?)<\/sub>/gi, "[sub]$1[/sub]")
      }
    },
    sup: {
      empty: false,
      toHtml: function (b) {
        return ["<sup" + Markup._addGlobalAttributes(b) + ">", "</sup>"]
      },
      fromHtml: function (b) {
        return b.replace(/<sup\b[\s\S]*?>([\s\S]*?)<\/sup>/gi, "[sup]$1[/sup]")
      }
    },
    tabs: {
      block: true,
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      allowedChildren: {
        tab: 1
      },
      attr: {
        name: {
          req: true,
          valid: /\S+/
        },
        width: {
          req: false,
          valid: /^[0-9]+(px|em|\%)$/
        }
      },
      toHtml: function (c) {
        c.id = g_urlize(c.name);
        var b = Markup.preview;
        var h = '<div class="clear"></div><div id="dsf67g4d-' + c.id + (b ? "-preview" : "") + '"></div>';
        h += "<div";
        if (c.width) {
          h += ' style="width: ' + c.width + '"'
        }
        h += ">";
        h += '<div class="tabbed-contents">';
        var f = c._contents;
        for (var e = 0; e < f.length; ++e) {
          var g = f[e];
          h += '<div id="tab-' + c.id + "-" + g.id + '" style="display: none">';
          h += g.content;
          h += '<div class="clear"></div>';
          h += "</div>"
        }
        h += "</div>";
        h += "</div>";
        setTimeout(Markup.createTabs.bind(null, c, f, (b ? "preview" : "")), 100);
        return [h]
      }
    },
    tab: {
      block: true,
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      allowedParents: {
        tabs: 1
      },
      attr: {
        name: {
          req: true,
          valid: /[\S ]+/
        },
        icon: {
          req: false,
          valid: /\S+/
        }
      },
      toHtml: function (b) {
        b.id = g_urlize(b.name);
        b.name = $WH.str_replace(b.name, "_", " ");
        if (typeof(b["class"]) != "undefined") {
          b["class"] = $WH.str_replace(b["class"], "_", " ")
        }
        return [{
          content: b._contents,
          id: b.id,
          name: b.name,
          icon: b.icon,
          "class": b["class"]
        }]
      }
    },
    table: {
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      allowedChildren: {
        tr: 1
      },
      attr: {
        border: {
          req: false,
          valid: /^[0-9]+$/
        },
        cellspacing: {
          req: false,
          valid: /^[0-9]+$/
        },
        cellpadding: {
          req: false,
          valid: /^[0-9]+$/
        },
        width: {
          req: false,
          valid: /^[0-9]+(px|em|\%)$/
        }
      },
      toHtml: function (b) {
        var c = "<table" + Markup._addGlobalAttributes(b);
        if (b.border != undefined) {
          c += ' border="' + b.border + '"'
        }
        if (b.cellspacing != undefined) {
          c += ' cellspacing="' + b.cellspacing + '"'
        }
        if (b.cellpadding != undefined) {
          c += ' cellpadding="' + b.cellpadding + '"'
        }
        if (b.width != undefined) {
          c += ' style="width: ' + b.width + '"'
        }
        c += "><tbody>";
        return [c, "</tbody></table>"]
      },
      fromHtml: function (j, h) {
        h = h || 0;
        var b;
        if (b = Markup.matchOuterTags(j, "<table\\b[\\s\\S]*?>", "</table>", "g")) {
          for (var e = 0; e < b.length; ++e) {
            var c = b[e][1].match(/border[:="]+\s*([0-9]+)/i),
                f = b[e][1].match(/width[:="]+\s*([0-9]+)/i),
                g = b[e][1].match(/cellspacing="([\s\S]+?)"/i),
                k = b[e][1].match(/cellpadding="([\s\S]+?)"/i);
            j = j.replace(b[e][1] + b[e][0] + b[e][2], "\n" + Array(h + 1).join("\t") + "[table" + (c ? " border=" + c[1] : "") + (f ? " width=" + f[1] : "") + (g ? " cellspacing=" + g[1] : "") + (k ? " cellpadding=" + k[1] : "") + "]" + Markup.tags.table.fromHtml(b[e][0], h + 1) + "\n" + Array(h + 1).join("\t") + "[/table]")
          }
        }
        return j
      }
    },
    talent: {
      empty: true,
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {
        unnamed: {
          req: true,
          valid: /^#[a-zA-Z0-9_-]+$/
        },
        editable: {
          req: false,
          valid: /^true$/
        },
        glyphs: {
          req: false,
          valid: /^false$/
        },
        specs: {
          req: false,
          valid: /^true$/
        }
      },
      talentDivsOnPage: 0,
      talentObjects: {},
      toHtml: function (k) {
        this.talentDivsOnPage++;
        var l = "markup-talent-" + this.talentDivsOnPage;
        if (k.unnamed.indexOf("-") < 0) {
          k.glyphs = "false"
        }
        var m = this;
        var b = {
          parent: l,
          embedded: true,
          markup: true,
          hash: k.unnamed,
          editable: k.editable == "true"
        };
        var g = (function (f) {
          var n = function () {
            if ((!$WH.ge("markup-talent-" + f)) || (!$WH.isset("WoDTalentCalc"))) {
              window.setTimeout(n, 250);
              return
            }
            m.talentObjects[f] = new WoDTalentCalc(b)
          };
          return n
        })(this.talentDivsOnPage);
        if ((this.talentDivsOnPage == 1) && (!$WH.isset("WoDTalentCalc"))) {
          var e = $WH.ce("link");
          e.rel = "stylesheet";
          e.href = g_staticUrl + "/css/talent.css";
          $WH.ae(document.getElementsByTagName("head")[0], e);
          var j = function () {
            var f = $WH.ce("script");
            f.type = "text/javascript";
            f.src = g_staticUrl + "/js/talent-wod.js";
            $WH.aE(f, "load", g);
            $WH.ae(document.getElementsByTagName("head")[0], f)
          };
          if (!$WH.isset("g_glyphs")) {
            var h = $WH.ce("script");
            h.type = "text/javascript";
            h.src = "/data=glyphs";
            $WH.aE(h, "load", j);
            $WH.ae(document.getElementsByTagName("head")[0], h)
          } else {
            j()
          }
        } else {
          g()
        }
        var c = "talentcalc-markup-parent";
        if (k.glyphs == "false") {
          c += " talentcalc-markup-no-glyphs"
        }
        if (k.specs != "true") {
          c += " talentcalc-markup-no-specs"
        }
        return '<div id="' + l + '" class="' + c + '"></div>'
      }
    },
    tr: {
      empty: false,
      itrim: true,
      allowedChildren: {
        td: 1
      },
      allowedParents: {
        table: 1
      },
      toHtml: function (b) {
        return ["<tr" + Markup._addGlobalAttributes(b) + ">", "</tr>"]
      },
      fromHtml: function (f, e) {
        e = e || 0;
        var b;
        if (b = Markup.matchOuterTags(f, "<tr\\b[\\s\\S]*?>", "</tr>", "g")) {
          for (var c = 0; c < b.length; ++c) {
            f = f.replace(b[c][1] + b[c][0] + b[c][2], "\n\t" + Array(e + 1).join("\t") + "[tr]" + Markup.tags.tr.fromHtml(b[c][0], e + 1) + "\n" + Array(e + 1).join("\t") + "[/tr]")
          }
        }
        return f
      }
    },
    td: {
      empty: false,
      itrim: true,
      allowedParents: {
        tr: 1
      },
      attr: {
        unnamed: {
          req: false,
          valid: /^header$/
        },
        align: {
          req: false,
          valid: /^(right|left|center|justify)$/i
        },
        valign: {
          req: false,
          valid: /^(top|middle|bottom|baseline)$/i
        },
        colspan: {
          req: false,
          valid: /^[0-9]+$/
        },
        rowspan: {
          req: false,
          valid: /^[0-9]+$/
        },
        width: {
          req: false,
          valid: /^[0-9]+(px|em|\%)$/
        }
      },
      toHtml: function (b) {
        var c = "<" + (b.unnamed ? "th" : "td") + Markup._addGlobalAttributes(b);
        if (b.align != undefined) {
          c += ' align="' + b.align + '"'
        }
        if (b.valign != undefined) {
          c += ' valign="' + b.valign + '"'
        }
        if (b.colspan != undefined) {
          c += ' colspan="' + b.colspan + '"'
        }
        if (b.rowspan != undefined) {
          c += ' rowspan="' + b.rowspan + '"'
        }
        if (b.width != undefined) {
          c += ' style="width: ' + b.width + '"'
        }
        c += ">";
        return [c, "</" + (b.unnamed ? "th" : "td") + ">"]
      },
      fromHtml: function (n, k) {
        k = k || 0;
        var p = ["td", "th"],
            e;
        for (var g = 0; g < p.length; ++g) {
          if (e = Markup.matchOuterTags(n, "<" + p[g] + "\\b[\\s\\S]*?>", "</" + p[g] + ">", "g")) {
            for (var h = 0; h < e.length; ++h) {
              var b = e[h][1].match(/width[:="]+\s*([0-9]+)/i),
                  l = e[h][1].match(/align="([\s\S]+?)"/i),
                  o = e[h][1].match(/valign="([\s\S]+?)"/i),
                  c = e[h][1].match(/colspan="([\s\S]+?)"/i),
                  f = e[h][1].match(/rowspan="([\s\S]+?)"/i);
              n = n.replace(e[h][1] + e[h][0] + e[h][2], "\n\t\t" + Array(k + 1).join("\t") + "[td" + (p[g] == "th" ? "=header" : "") + (b ? " width=" + b[1] : "") + (l ? " align=" + l[1] : "") + (o ? " valign=" + o[1] : "") + (c ? " colspan=" + c[1] : "") + (f ? " rowspan=" + f[1] : "") + "]" + Markup.tags.td.fromHtml(e[h][0], k + 1) + "[/td]")
            }
          }
        }
        return n
      }
    },
    threat: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        diff: {
          req: false,
          valid: /^[0-9]+$/
        },
        diffnew: {
          req: false,
          valid: /^[12]$/
        },
        tempname: {
          req: false
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (c) {
        var k = c.unnamed;
        var j = Markup._getDatabaseDomainInfo(c);
        var g = j[0];
        var h = j[1];
        var b = [];
        var f = null;
        if (c.diff) {
          b.push("diff=" + c.diff)
        }
        if (c.diffnew) {
          b.push("diffnew=" + c.diffnew)
        }
        if (c.tempname) {
          f = c.tempname
        }
        if (g_threats[k] && g_threats[k][h]) {
          var e = g_threats[k];
          return '<a href="' + g + "/threat=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + (!c.icon ? ' class="icontiny"><img src="' + g_staticUrl + "/images/wow/icons/tiny/" + e.icon.toLowerCase() + '.gif" align="absmiddle"' : "") + Markup._addGlobalAttributes(c) + "> " + Markup._safeHtml(e[h]) + "</a>"
        }
        return '<a href="' + g + "/threat=" + k + '"' + (b.length ? ' rel="' + b.join("&") + '"' : "") + Markup._addGlobalAttributes(c) + ">" + (f ? f : ("(" + LANG.types[26][0] + " #" + k + ")")) + "</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_threats[f] && g_threats[f][c]) {
          return Markup._safeHtml(g_threats[f][c])
        }
        return LANG.types[26][0] + " #" + f
      }
    },
    time: {
      empty: true,
      count: 0,
      attr: {
        until: {
          req: false,
          valid: /^\d+$/
        },
        since: {
          req: false,
          valid: /^\d+$/
        },
        server: {
          req: false,
          valid: /^true$/
        }
      },
      validate: function (b) {
        if (!b.until && !b.since) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var e = Markup.tags.time.count++;
        var c = '<span title="' + (new Date((b.until ? b.until : b.since) * 1000)).toLocaleString() + '" id="markupTime' + e + '">' + Markup.tags.time.getTime(b) + "</span>";
        setInterval(Markup.tags.time.updateTime.bind(null, e, b), 5000);
        return c
      },
      getTime: function (b) {
        var e;
        if (b.server) {
          e = g_serverTime.getTime() / 1000
        } else {
          e = (new Date()).getTime() / 1000
        }
        var c = 0;
        if (b.until) {
          c = b.until - e
        } else {
          c = e - b.since
        }
        if (c > 0) {
          return g_formatTimeElapsed(c)
        } else {
          return "0 " + LANG.timeunitspl[6]
        }
      },
      updateTime: function (e, b) {
        var c = $WH.ge("markupTime" + e);
        if (!c) {
          return
        }
        c.firstChild.nodeValue = Markup.tags.time.getTime(b)
      }
    },
    toc: {
      block: true,
      post: true,
      trim: true,
      ltrim: true,
      rtrim: true,
      collect: {
        h2: 1,
        h3: 1,
        "major-heading": 1,
        "minor-heading": 1,
        changelog: 1
      },
      exclude: {
        tabs: {
          h2: 1,
          h3: 1,
          "major-heading": 1,
          "minor-heading": 1
        },
        minibox: {
          h2: 1,
          h3: 1,
          "major-heading": 1,
          "minor-heading": 1
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      attr: {
        h3: {
          req: false,
          valid: /^false$/
        },
        "minor-heading": {
          req: false,
          valid: /^false$/
        }
      },
      postHtml: function (j, b) {
        var l = "<h3";
        var f = ["heading-size-3"];
        if (j.first) {
          f.push("first")
        }
        if (j.last) {
          f.push("last")
        }
        if (f.length > 0) {
          l += ' class="' + f.join(" ") + '"'
        }
        l += Markup._addGlobalAttributes(j) + ">" + LANG.markup_toc + "</h3><ul>";
        var k = "";
        var h = 1;
        var m = (j.h3 != "false" && j["minor-heading"] != "false");
        var c = [];
        for (var e in b.h2) {
          c.push(b.h2[e])
        }
        for (var e in b["major-heading"]) {
          c.push(b["major-heading"][e])
        }
        for (var e in b.h3) {
          c.push(b.h3[e])
        }
        for (var e in b["minor-heading"]) {
          c.push(b["minor-heading"][e])
        }
        for (var e in b.changelog) {
          c.push(b.changelog[e])
        }
        c.sort(function (o, n) {
          return o.offset - n.offset
        });
        for (var g in c) {
          e = c[g];
          switch (e.name) {
          case "changelog":
            if (k == "h3") {
              l += "</ul>";
              h--
            }
            l += "<li><b><a href='#guide-changelog' onclick=\"Markup.toggleReveal('changelog');\">Changelog</a></b></li>";
            k = "h2";
            break;
          case "h2":
          case "major-heading":
            if (e.attr.toc != "false") {
              if (k == "h3") {
                l += "</ul>";
                h--
              }
              l += "<li><b><a href='#" + (e.attr.id ? g_urlize(e.attr.id) : g_urlize(e.attr._textContents)) + "'>" + e.attr._textContents + "</a></b></li>";
              k = "h2"
            }
            break;
          case "h3":
          case "minor-heading":
            if (m && e.attr.toc != "false" && (k != "" || b.h2.length == 0 || b["major-heading"].length == 0)) {
              if (k == "h2") {
                l += "<ul>";
                h++
              }
              l += "<li><b><a href='#" + (e.attr.id ? g_urlize(e.attr.id) : g_urlize(e.attr._textContents)) + "'>" + e.attr._textContents + "</a></b></li>";
              k = "h3"
            }
            break
          }
        }
        for (var g = 0; g < h; g++) {
          l += "</ul>"
        }
        return l
      }
    },
    toggler: {
      empty: false,
      attr: {
        id: {
          req: true,
          valid: /^[a-z0-9_-]+$/i
        },
        unnamed: {
          req: false,
          valid: /^hidden$/i
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var c = '<a href="javascript:;" class="disclosure-' + (b.unnamed ? "off" : "on") + '" onclick="return g_disclose($WH.ge(\'' + b.id + "'), this)\">";
        return [c, "</a>"]
      }
    },
    tooltip: {
      empty: false,
      attr: {
        unnamed: {
          req: false,
          valid: /\S+/
        },
        name: {
          req: false,
          valid: /\S+/
        },
        bare: {
          req: false,
          valid: /^true$/i
        },
        label: {
          req: false,
          valid: /[\S ]+/
        }
      },
      taglessSkip: true,
      allowedClass: MARKUP_CLASS_STAFF,
      validate: function (b) {
        if (!b.unnamed && !b.name) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        if (b.unnamed) {
          return ['<span class="tip" onmouseover="$WH.Tooltip.showAtCursor(event, LANG[\'' + b.unnamed + '\'], 0, 0, \'q\')" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()">', "</span>"]
        } else {
          Markup.tooltipTags[b.name] = (b.label ? '<table><tr><td class="q0" style="width: 300px"><small>' + b.label + "</small></td></tr></table>" : "") + b._contents;
          if (b.bare) {
            Markup.tooltipBare[b.name] = true
          }
          return [""]
        }
      }
    },
    u: {
      empty: false,
      allowInReplies: true,
      toHtml: function (b) {
        return ["<ins" + Markup._addGlobalAttributes(b) + ">", "</ins>"]
      },
      fromHtml: function (b) {
        return b.replace(/<(ins|u)\b[\s\S]*?>([\s\S]*?)<\/\1>/gi, "[u]$2[/u]")
      }
    },
    ul: {
      block: true,
      empty: false,
      ltrim: true,
      rtrim: true,
      itrim: true,
      allowedChildren: {
        li: 1
      },
      toHtml: function (b) {
        var c = "<ul";
        var e = [];
        if (b.first) {
          e.push("first")
        }
        if (b.last) {
          e.push("last")
        }
        if (e.length > 0) {
          c += ' class="' + e.join(" ") + '"'
        }
        c += Markup._addGlobalAttributes(b) + ">";
        return [c, "</ul>"]
      },
      fromHtml: function (f, e) {
        e = e || 0;
        var b;
        if (b = Markup.matchOuterTags(f, "<ul\\b[\\s\\S]*?>", "</ul>", "g")) {
          for (var c = 0; c < b.length; ++c) {
            f = f.replace(b[c][1] + b[c][0] + b[c][2], "\n" + Array(e + 1).join("\t") + "[ul]" + Markup.tags.ul.fromHtml(b[c][0], e + 1) + "\n" + Array(e + 1).join("\t") + "[/ul]")
          }
        }
        return f
      }
    },
    url: {
      allowedClass: MARKUP_CLASS_USER,
      allowInReplies: true,
      empty: false,
      helpText: "[url=http://www.google.com]" + LANG.markup_url + "[/url]",
      attr: {
        unnamed: {
          req: false,
          valid: /\S+/
        },
        rel: {
          req: false,
          valid: /(item|quest|spell|achievement|npc|object|petability)=([0-9]+)/
        },
        onclick: {
          req: false,
          valid: /[\S ]+/
        },
        tooltip: {
          req: false,
          valid: /\S+/
        },
        tooltip2: {
          req: false,
          valid: /\S+/
        }
      },
      validate: function (b) {
        if (b.onclick && Markup.allow < Markup.CLASS_ADMIN) {
          return false
        }
        if (b.tooltip && Markup.allow < Markup.CLASS_STAFF) {
          return false
        }
        var c = "";
        if (b.unnamed && /^(mailto:|irc:)/i.test(b.unnamed.trim()) && Markup.allow < Markup.CLASS_STAFF) {
          return false
        }
        if (b.unnamed && /^(javascript:)/i.test(b.unnamed.trim())) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var e;
        if (b.unnamed) {
          e = b.unnamed;
          e = e.replace(/&amp;/, "&");
          if (!e.match(/^([^:\\.\/]+):/i) && e.charAt(0) != "/" && e.charAt(0) != "#") {
            e = "/" + e
          }
          if (Markup._isUrlSafe(e, true)) {
            var c = "<a" + Markup._addGlobalAttributes(b) + ' href="' + Markup._fixUrl(e) + '"';
            if (Markup._isUrlExternal(e)) {
              c += ' target="_blank"'
            }
            if (b.rel) {
              c += ' rel="' + b.rel + '"'
            }
            if (b.onclick) {
              c += ' onclick="' + b.onclick + '"'
            }
            if (b.tooltip && Markup.tooltipTags[b.tooltip]) {
              c += " onmouseover=\"$WH.Tooltip.showAtCursor(event, Markup.tooltipTags['" + b.tooltip + "'], 0, 0, " + (Markup.tooltipBare[b.tooltip] ? "null" : "'q'") + ", " + (b.tooltip2 && Markup.tooltipTags[b.tooltip2] ? "Markup.tooltipTags['" + b.tooltip2 + "']" : "null") + ')" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()"'
            }
            c += ">";
            return [c, "</a>"]
          } else {
            return ["", ""]
          }
        } else {
          e = b._textContents;
          e = e.replace(/&amp;/, "&");
          if (Markup._isUrlSafe(e)) {
            var c = "<a" + Markup._addGlobalAttributes(b) + ' href="' + Markup._fixUrl(e) + '"';
            if (Markup._isUrlExternal(e)) {
              c += ' target="_blank"'
            }
            if (b.rel) {
              c += ' rel="' + b.rel + '"'
            }
            if (b.onclick) {
              c += ' onclick="' + b.onclick + '"'
            }
            c += ">";
            return [c + e + "</a>"]
          } else {
            return ["", ""]
          }
        }
      },
      fromHtml: function (b) {
        return b.replace(/<a\b[^>]*?href=\"(.+?)\"[\s\S]*?>([\s\S]*?)<\/a>/gi, "[url=$1]$2[/url]")
      }
    },
    video: {
      empty: true,
      attr: {
        id: {
          req: true,
          valid: /^[0-9]+$/
        },
        unnamed: {
          req: false,
          valid: /^embed$/i
        },
        "float": {
          req: false,
          valid: /^(left|right)$/i
        },
        border: {
          req: false,
          valid: /^[0-9]+$/
        }
      },
      ltrim: true,
      rtrim: true,
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        if (g_videos[b.id]) {
          var e = "",
              f = g_videos[b.id];
          var c = [];
          if (b.unnamed) {
            if (f.videoType == 1) {
              e += Markup.toHtml("[youtube=" + f.videoId + "]", {
                skipReset: true
              })
            }
          } else {
            if (!g_videos[Markup.uid]) {
              g_videos[Markup.uid] = []
            }
            e += '<div style="position: relative; display: -moz-inline-stack; display: inline-block; zoom: 1; *display: inline"><a href="' + $WH.sprintf(vi_siteurls[f.videoType], f.videoId) + '" onclick="if(!g_isLeftClick(event)) return; VideoViewer.show({videos: \'' + Markup.uid + "', pos: " + g_videos[Markup.uid].length + '}); return false;"' + Markup._addGlobalAttributes(b) + ">";
            e += '<img src="' + $WH.sprintf(vi_thumbnails[f.videoType], f.videoId) + '" ';
            if (b.border != 0) {
              c.push("border")
            }
            if (b["float"]) {
              c.push("markup-float-" + b["float"])
            }
            if (c) {
              e += 'class="' + c.join(" ") + '" '
            }
            if (f.hasCaption) {
              e += 'alt="' + Markup.removeTags(f.caption, {
                mode: Markup.MODE_SIGNATURE,
                skipReset: true
              }) + '" '
            }
            e += '/><img src="' + g_staticUrl + "/images/icons" + MarkupIconPath + '/play-sm.png" style="opacity: 0.6; filter:alpha(opacity=60); position: absolute; width: 48px; height: 48px; top: 23px; left: 38px" />';
            e += "</a></div>";
            g_videos[Markup.uid].push($WH.dO(f))
          }
          return e
        }
        return "<b>Video #" + b.id + "</b>"
      }
    },
    visitedpage: {
      empty: false,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        $.post("/visited-page", {
          id: b.unnamed
        }, function () {
          AchievementCheck()
        });
        return ""
      }
    },
    wowheadresponse: {
      block: true,
      empty: false,
      rtrim: true,
      ltrim: true,
      itrim: true,
      attr: {
        unnamed: {
          req: true,
          valid: /[\S ]+/
        },
        roles: {
          req: true,
          valid: /[0-9]+/
        }
      },
      allowedModes: {
        article: 1,
        quickfacts: 1,
        comment: 1
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var g = "<div" + Markup._addGlobalAttributes(b);
        var e = [];
        g += ' class="quote ';
        if (b.first) {
          g += "firstmargin "
        }
        if (b.last) {
          g == "last "
        }
        var f = b.unnamed.trim();
        if (f.length <= 0) {
          return ["", ""]
        }
        var c = "";
        if (b.roles & U_GROUP_ADMIN) {
          c = "comment-blue"
        } else {
          c = "comment-green"
        }
        if (g_customColors[f]) {
          c = "comment-" + g_customColors[f]
        }
        g += c + '"><small class="icon-wowhead"><b class="' + c + '"><a href="/user=' + f + '">' + f + "</a></b> " + LANG.markup_said + '</small><div class="pad"></div>';
        return [g, "</div>"]
      }
    },
    youtube: {
      empty: true,
      attr: {
        unnamed: {
          req: true,
          valid: /\S+/
        },
        width: {
          req: false,
          valid: /^[0-9]+$/
        },
        height: {
          req: false,
          valid: /^[0-9]+$/
        },
        autoplay: {
          req: false,
          valid: /^true$/
        }
      },
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        var g = b.width ? b.width : 640;
        var j = b.height ? b.height : 390;
        if (window.outerWidth && window.outerWidth - 20 < g) {
          g = window.outerWidth - 20;
          j = Math.floor(g * 0.6015625)
        }
        var f = {
          height: j,
          width: g,
          videoId: b.unnamed,
          playerVars: {
            autoplay: (b.autoplay ? 1 : 0)
          }
        };
        if (Markup.youtube.players.length == 0) {
          var h;
          if ($WH.isset("onYouTubeIframeAPIReady") && (typeof window.onYouTubeIframeAPIReady == "function")) {
            h = window.onYouTubeIframeAPIReady
          } else {
            h = function () {}
          }
          window.onYouTubeIframeAPIReady = function () {
            Markup.youtube.APIReady();
            h()
          };
          if (!$WH.isset("YT")) {
            window.YT = {};
            $WH.g_ajaxIshRequest("https://www.youtube.com/iframe_api", true)
          }
        }
        var c = Markup.youtube.players.length;
        var k = {
          id: c,
          containerId: "zam-yt-markup-container-" + c,
          yt: f,
          loaded: false
        };
        Markup.youtube.players.push(k);
        if (Markup.youtube.APIIsReady || ($WH.isset("YT") && YT.hasOwnProperty("Player"))) {
          if (typeof Markup.youtube.readyTimeout == "undefined") {
            Markup.youtube.readyTimeout = window.setTimeout(Markup.youtube.APIReady, 10)
          }
        }
        var e = '<div class="zam-yt-markup-container" id="zam-yt-markup-container-' + c + '" style="width: ' + g + "px; height: " + j + 'px;"></div>';
        return e
      },
      fromHtml: function (j) {
        var c;
        if (c = j.match(/<iframe\b[\s\S]*?src="[\s\S]*?youtube\.com\/embed\/[\s\S]*?"[\s\S]*?><\/iframe>/gi)) {
          for (var f = 0; f < c.length; ++f) {
            var b = c[f].match(/src="[\s\S]*?youtube\.com\/embed\/([\s\S]*?)"/i),
                g = c[f].match(/width[:="]+\s*([0-9]+)/i),
                h = c[f].match(/height[:="]+\s*([0-9]+)/i),
                e = c[f].match(/border[:="]+\s*([0-9]+)/i);
            j = j.replace(c[f], "[youtube=" + b[1] + (g ? " width=" + g[1] : "") + (h ? " height=" + h[1] : "") + "]")
          }
        }
        return j
      }
    },
    center: {
      empty: false,
      allowInReplies: false,
      allowedClass: MARKUP_CLASS_STAFF,
      toHtml: function (b) {
        return ["<center>", "</center>"]
      },
      fromHtml: function (b) {
        return b.replace(/<center>([\s\S]+?)<\/center>/gi, "[pad][div align=center]$1[/div][pad]")
      }
    },
    title: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var g = b.unnamed;
        var f = Markup._getDatabaseDomainInfo(b);
        var c = f[0];
        var e = f[1];
        if (g_titles[g] && g_titles[g][e]) {
          return '<a href="' + c + "/title=" + g + '"' + Markup._addGlobalAttributes(b) + ">" + Markup._safeHtml(g_titles[g][e]) + "</a>"
        }
        return '<a href="' + c + "/title=" + g + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[11][0] + " #" + g + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_titles[f] && g_titles[f][c]) {
          return Markup._safeHtml(g_titles[f][c])
        }
        return LANG.types[11][0] + " #" + f
      }
    },
    "transmog-set": {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var g = b.unnamed;
        var f = Markup._getDatabaseDomainInfo(b);
        var c = f[0];
        var e = f[1];
        if (g_transmogsets[g] && g_transmogsets[g][e]) {
          return '<a href="' + c + "/transmog-set=" + g + '"' + Markup._addGlobalAttributes(b) + ' class="q' + g_transmogsets[g]["quality"] + '">' + Markup._safeHtml(g_transmogsets[g][e]) + "</a>"
        }
        return '<a href="' + c + "/transmog-set=" + g + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[101][0] + " #" + g + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_transmogsets[f] && g_transmogsets[f][c]) {
          return Markup._safeHtml(g_transmogsets[f][c])
        }
        return LANG.types[101][0] + " #" + f
      }
    },
    zone: {
      empty: true,
      allowInReplies: true,
      attr: {
        unnamed: {
          req: true,
          valid: /^[0-9]+$/
        },
        domain: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        },
        site: {
          req: false,
          valid: /^(beta|wod|mop|ptr|www|de|es|fr|ru|pt)$/
        }
      },
      validate: function (b) {
        if ((b.domain || b.site) && Markup.dbpage) {
          return false
        }
        return true
      },
      toHtml: function (b) {
        var g = b.unnamed;
        var f = Markup._getDatabaseDomainInfo(b);
        var c = f[0];
        var e = f[1];
        if (g_gatheredzones[g] && g_gatheredzones[g][e]) {
          return '<a href="' + c + "/zone=" + g + '"' + Markup._addGlobalAttributes(b) + ">" + Markup._safeHtml(g_gatheredzones[g][e]) + "</a>"
        }
        return '<a href="' + c + "/zone=" + g + '"' + Markup._addGlobalAttributes(b) + ">(" + LANG.types[7][0] + " #" + g + ")</a>"
      },
      toText: function (b) {
        var f = b.unnamed;
        var e = Markup._getDatabaseDomainInfo(b);
        var c = e[1];
        if (g_gatheredzones[f] && g_gatheredzones[f][c]) {
          return Markup._safeHtml(g_gatheredzones[f][c])
        }
        return LANG.types[7][0] + " #" + f
      }
    }
  },
  _addGlobalAttributes: function (b) {
    var c = "";
    if (Markup.allow < Markup.CLASS_STAFF) {
      return c
    }
    if (b.id) {
      c += ' id="' + b.id + '"'
    }
    if (b.title) {
      c += ' title="' + Markup._safeQuotes(b.title) + '"'
    }
    if (b["class"]) {
      c += ' class="' + b["class"] + '"'
    }
    if (b["data-highlight"]) {
      c += ' data-highlight="' + b["data-highlight"] + '"'
    }
    return c
  },
  _generateTagDocs: function (f, c) {
    var b = Markup.tags[f];
    if (!b) {
      return ""
    }
    if (c) {
      if ((b.allowedClass && b.allowedClass > c) || (!b.helpText && (b.empty || b.allowedParents || b.allowedChildren || !LANG["markup_" + f]))) {
        return ""
      }
      if (b.helpText && typeof b.helpText == "function") {
        var j = b.helpText()
      } else {
        if (b.helpText && typeof b.helpText == "string") {
          var j = b.helpText
        } else {
          var j = "[" + f + "]" + LANG["markup_" + f].toLowerCase() + "[/" + f + "]"
        }
      }
      return "<tr><td><pre>" + j + "</pre></td><td>" + Markup.toHtml(j, {
        skipReset: true
      }) + "</td></tr>"
    }
    var j = '<div><h3 class="heading-size-3 first">Tag: [' + Markup._safeHtml(f) + "]</h3>";
    j += '<table class="grid">';
    if (b.attr) {
      j += '<tr><td align="right" width="200">Attributes:</td><td>';
      for (var e in b.attr) {
        j += '<div style="margin: 5px; display: inline-block"><table><tr><th style="background-color: #242424; font-weight: bolder" colspan="2">';
        if (e == "unnamed") {
          j += "Self ([" + f + "=???])"
        } else {
          j += e
        }
        j += "</th></tr>";
        j += '<tr><td align="right">Required:</td><td>' + (b.attr[e].req ? "Yes" : "No") + "</td></tr>";
        j += '<tr><td align="right">Valid:</td><td>' + (b.attr[e].valid ? Markup._safeHtml(b.attr[e].valid.toString()) : "--") + "</td></tr></table></div>"
      }
      j += "</td></tr>"
    }
    j += '<tr><td align="right" width="200">Has closing tag:</td><td>' + (b.empty ? "No" : "Yes") + "</td></tr>";
    j += '<tr><td align="right">Required group:</td><td>';
    if (b.allowedClass == MARKUP_CLASS_ADMIN) {
      j += "Administrator"
    } else {
      if (b.allowedClass == MARKUP_CLASS_STAFF) {
        j += "Staff"
      } else {
        if (b.allowedClass == MARKUP_CLASS_PREMIUM) {
          j += "Patron"
        } else {
          if (b.allowedClass && b.allowedClass != MARKUP_CLASS_PENDING) {
            j += "Not pending"
          } else {
            j += "None"
          }
        }
      }
    }
    j += "</td></tr>";
    if (b.allowedChildren) {
      j += '<tr><td align="right">Allowed children:</td><td>';
      for (var g in b.allowedChildren) {
        j += Markup._safeHtml(g) + "<br />"
      }
      j += "</td></tr>"
    }
    if (b.allowedParents) {
      j += '<tr><td align="right">Allowed parents:</td><td>';
      for (var g in b.allowedParents) {
        j += Markup._safeHtml(g) + "<br />"
      }
      j += "</td></tr>"
    }
    if (b.presets) {
      j += '<tr><td align="right">Preset values:</td><td><table>';
      for (var h in b.presets) {
        j += '<tr><td align="right">' + h + "</td><td>" + Markup._safeHtml(b.presets[h]) + "</td></tr>"
      }
      j += "</table></td></tr>"
    }
    if (b.trim) {
      j += '<tr><td colspan="2">Trim whitespace</td></tr>'
    }
    if (b.ltrim) {
      j += '<tr><td colspan="2">Trim preceding whitespace</td></tr>'
    }
    if (b.rtrim) {
      j += '<tr><td colspan="2">Trim following whitespace</td></tr>'
    }
    if (b.itrim) {
      j += '<tr><td colspan="2">Trim whitespace around interior content</td></tr>'
    }
    if (b.block) {
      j += '<tr><td colspan="2">Automatically remove top padding if not the first item</td></tr>'
    }
    j += "</table></div>";
    return j
  },
  _init: function () {
    if (!this.inited) {
      var c = [],
          e = [],
          g = [];
      for (var b in Markup.tags) {
        if (Markup.tags[b].block) {
          this.firstTags[b] = true
        }
        if (Markup.tags[b].exclude) {
          for (var f in Markup.tags[b].exclude) {
            if (!this.excludeTags[f]) {
              this.excludeTags[f] = {}
            }
            this.excludeTags[f][b] = Markup.tags[b].exclude[f]
          }
        }
        if (Markup.tags[b].post) {
          this.postTags.push(b)
        }
        if (Markup.tags[b].trim) {
          g.push(b)
        }
        if (Markup.tags[b].ltrim) {
          c.push(b)
        }
        if (Markup.tags[b].rtrim) {
          e.push(b)
        }
      }
      if (c.length > 0) {
        this.ltrimRegex = new RegExp("\\s*\\[(" + c.join("|") + ")([^a-z0-9]+.*)?]", "ig")
      }
      if (e.length > 0) {
        this.rtrimRegex = new RegExp("\\[/(" + e.join("|") + ")\\]\\s*", "ig")
      }
      if (g.length > 0) {
        this.trimRegex = new RegExp("\\s*\\[(" + g.join("|") + ")([^\\[]*)?\\]\\s*", "ig")
      }
      this.inited = true;
      $(function () {
        $("body").delegate("[data-highlight]", "mouseenter", function () {
          var h = $(this).attr("data-highlight").split(":");
          if (h.length != 2) {
            return
          }
          var j = $("#" + h[0]).get(0),
              m = parseInt(h[1]),
              l = $(j).val();
          if (!j || !m || !l) {
            return
          }
          var k = $(j).val(l.substr(0, m))[0].scrollHeight;
          $(j).val(l).animate({
            scrollTop: k
          }, 250);
          j.selectionStart = m;
          j.selectionEnd = m
        })
      })
    }
  },
  _safeJsString: function (b) {
    return b.replace(/'/g, "'")
  },
  _safeQuotes: function (b) {
    return b.replace('"', '"').replace("'", "'")
  },
  _safeHtml: function (b) {
    var c = ["nbsp", "ndash"];
    if (typeof b == "undefined") {
      return ""
    }
    b = b.replace(/&/g, "&amp;");
    if (c.length > 0) {
      b = b.replace(new RegExp("&amp;(" + c.join("|") + ");", "g"), "&$1;")
    }
    return b.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;")
  },
  _preText: function (b) {
    b = Markup._safeHtml(b);
    b = b.replace(/\n/g, "<br />");
    return b
  },
  _getDatabaseDomainInfo: function (c, h) {
    var f = "";
    var g = Markup.nameCol;
    if (typeof h == "undefined") {
      h = "wowhead.com"
    }
    var b = false;
    if (c.domain) {
      b = c.domain
    } else {
      if (c.site) {
        b = c.site
      } else {
        if (Markup.defaultSource) {
          b = MarkupSourceMap[Markup.defaultSource]
        }
      }
    }
    if (b) {
      if (b == "beta") {
        b = "wod"
      }
      f = "http://" + b + "." + h;
      var e = b == "live" ? "www" : b;
      g = "name_" + Markup.domainToLocale[e]
    } else {
      f = g_getRelativeHostPrefix(h)
    }
    return [f, g, b]
  },
  _isUrlSafe: function (f, b) {
    if (!f) {
      return true
    }
    if (f == "javascript:;") {
      return true
    }
    var c = f.match(/^([^:\\./]+):/i);
    if (c && c[1]) {
      var e = c[1];
      if (e == "http" || e == "https") {
        return true
      }
      if (b && (e == "mailto" || e == "irc")) {
        return true
      }
      if (e != "mailto" && f.indexOf("://") == -1) {
        return true
      }
      return false
    }
    return true
  },
  _fixUrl: function (b) {
    if (!b) {
      return ""
    }
    var c = b.charAt(0);
    if (c == "/" || c == "?") {
      b = b.replace(/^[\/\?]+/, "");
      b = "/" + b
    }
    return b
  },
  _isUrlExternal: function (c) {
    if (!c) {
      return false
    }
    var b = $WH.ce("a");
    b.href = c;
    return !(!b.hostname || /(^|\.)(?:wowhead|hearthhead)\.com$/.test(b.hostname))
  },
  _nodeSearch: function (c, b, e) {
    if (!e) {
      e = 0
    }
    if (e >= 3) {
      return
    }
    if (c.name == b) {
      return true
    } else {
      if (c.parent) {
        return Markup._nodeSearch(c.parent, b, e + 1)
      }
    }
  },
  _parse: function (q, g) {
    Markup.nameCol = "name_" + Locale.getName();
    if (g && g.locale) {
      Markup.nameCol = "name_" + Markup.domainToLocale[g.locale]
    } else {
      if ($WH.isset("g_beta") && g_beta) {
        Markup.nameCol = "name_beta"
      } else {
        if ($WH.isset("g_ptr") && g_ptr) {
          Markup.nameCol = "name_ptr"
        } else {
          if ($WH.isset("g_old") && g_old) {
            Markup.nameCol = "name_old"
          }
        }
      }
    }
    if (!q) {
      q = ""
    }
    q = q.replace(/\r/g, "");
    if (!g) {
      g = {}
    }
    if (!g.skipReset) {
      Markup.uid = g.uid || "abc";
      Markup.root = g.root;
      Markup.preview = g.preview || false;
      Markup.dbpage = g.dbpage || false;
      Markup.defaultSource = false;
      if (Markup.uid != "abc") {
        g_screenshots[Markup.uid] = []
      }
    }
    if (g.roles && (g.roles & (U_GROUP_ADMIN | U_GROUP_EDITOR | U_GROUP_MOD | U_GROUP_BUREAU | U_GROUP_DEV | U_GROUP_BLOGGER)) && g.mode != Markup.MODE_SIGNATURE) {
      g.mode = Markup.MODE_ARTICLE
    }
    Markup.mode = g.mode || Markup.MODE_ARTICLE;
    Markup.allow = g.allow || Markup.CLASS_STAFF;
    Markup.inBlog = g.inBlog ? g.inBlog : 0;
    if (g.stopAtBreak) {
      var w = q.indexOf("[break]");
      if (w != -1) {
        q = q.substring(0, w)
      }
    } else {
      q = q.replace("[break]", "")
    }
    var n = new MarkupTree();
    q = q.trim();
    if (this.postTags.length) {
      for (var u in this.postTags) {
        var F = this.postTags[u];
        if (q.indexOf("[" + F) != -1) {
          if (!(Markup.tags[F].allowedModes && Markup.tags[F].allowedModes[MarkupModeMap[g.mode]] == undefined)) {
            for (var k in Markup.tags[F].collect) {
              this.collectTags[k] = true
            }
          }
        }
      }
    }
    q = q.replace(/\n(\s*)\n/g, "\n\n");
    var v = q.length;
    var z = 0,
        l = 0,
        h = -1,
        m = -1,
        b = true,
        r = false;
    var c = function (J) {
      var G, I, H;
      if (J.charAt(0) == '"' || J.charAt(0) == "'") {
        G = J.charAt(0);
        var s = J.indexOf(G, 1);
        if (s > -1) {
          H = J.substring(1, s);
          J = J.substring(s + 1).trim();
          return {
            value: Markup._safeHtml(H),
            str: J
          }
        }
      }
      I = J.indexOf(" ");
      if (I > -1) {
        H = J.substring(0, I);
        J = J.substring(I + 1).trim()
      } else {
        H = J;
        J = ""
      }
      return {
        value: H,
        str: J
      }
    };
    var t = /^\s*[a-z0-9]+\s*=/;
    while (l < v) {
      h = q.indexOf("[", l);
      if (h > -1) {
        l = h + 1;
        if (h > 0 && q.charAt(h - 1) == "\\") {
          b = false;
          h = -1
        } else {
          m = q.indexOf("]", l)
        }
      } else {
        l = v
      }
      var e, o = {};
      if (g.highlight && $(g.highlight)) {
        o["data-highlight"] = g.highlight + ":" + h
      }
      if (m > -1) {
        var B = q.substring(h + 1, m);
        if (B.charAt(0) == "/") {
          r = true;
          e = B.substr(1).trim().toLowerCase()
        }
        if (!r) {
          var A = B.indexOf(" "),
              y = B.indexOf("=");
          var C;
          if ((y < A || A == -1) && y > -1) {
            e = B.substring(0, y).toLowerCase();
            B = B.substring(y + 1).trim();
            var E = c(B);
            B = E.str;
            if (Markup.tags[e] == undefined || Markup.tags[e].attr == undefined || Markup.tags[e].attr.unnamed == undefined) {
              b = false
            } else {
              o.unnamed = E.value
            }
          } else {
            if (A > -1) {
              e = B.substring(0, A).toLowerCase();
              B = B.substring(A + 1).trim();
              if (B.indexOf("=") == -1) {
                if (Markup.tags[e] == undefined || Markup.tags[e].attr == undefined || Markup.tags[e].attr.unnamed == undefined) {
                  b = false
                } else {
                  o.unnamed = B
                }
                B = ""
              }
            } else {
              e = B.toLowerCase();
              B = ""
            }
          }
          if (Markup.tags[e] == undefined) {
            b = false
          } else {
            if (b) {
              var F = Markup.tags[e];
              while (B != "") {
                var p = "";
                if (!t.test(B)) {
                  p = "unnamed"
                } else {
                  y = B.indexOf("=");
                  if (y == -1) {
                    b = false;
                    break
                  }
                  p = B.substring(0, y).trim().toLowerCase();
                  B = B.substring(y + 1).trim()
                }
                var E = c(B);
                B = E.str;
                if (F.attr == undefined || F.attr[p] == undefined) {
                  if (Markup.attributes[p] == undefined || (Markup.attributes[p].valid != undefined && !Markup.attributes[p].valid.test(E.value))) {
                    b = false;
                    break
                  }
                }
                o[p] = E.value
              }
              if (b && F.attr) {
                for (var D in F.attr) {
                  if (F.attr[D].req && o[D] == undefined) {
                    b = false;
                    break
                  } else {
                    if (o[D] == undefined) {
                      continue
                    }
                  }
                  if (F.attr[D].valid != undefined && !F.attr[D].valid.test(o[D])) {
                    b = false;
                    break
                  }
                }
                if (b && F.validate != undefined) {
                  b = F.validate(o)
                }
              }
            }
          }
        } else {
          if (Markup.tags[e] == undefined) {
            b = false
          }
        }
      } else {
        b = false
      }
      if (b) {
        if (z != h) {
          var j = q.substring(z, h).replace(/\\\[/g, "[");
          var f = {
            _rawText: j
          };
          n.openTag("<text>", f)
        }
        if (r) {
          b = n.closeTag(e)
        } else {
          b = n.openTag(e, o)
        }
        if (b) {
          z = l = m + 1
        } else {
          z = h
        }
      }
      b = true;
      r = false;
      h = m = -1
    }
    if (z < v) {
      var j = q.substr(z).replace(/\\\[/g, "[");
      var f = {
        _rawText: j
      };
      n.openTag("<text>", f)
    }
    return n
  },
  createMaps: function () {
    for (var c = 0; c < Markup.maps.length; ++c) {
      var b = Markup.maps[c];
      new Mapper({
        parent: b[0],
        zone: b[1],
        coords: b[2],
        unique: c
      })
    }
    Markup.maps = []
  },
  toHtml: function (f, e) {
    if (!e) {
      e = {}
    }
    if (!e.allow) {
      if (e.roles) {
        e.allow = Markup.rolesToClass(e.roles)
      } else {
        e.allow = Markup.CLASS_STAFF
      }
    }
    var b = Markup._parse(f, e);
    var c = b.toHtml();
    if (e.prepend) {
      c = e.prepend + c
    }
    if (e.append) {
      c += e.append
    }
    setTimeout(Markup.createMaps, 250);
    return c
  },
  fromHtml: function (e, c) {
    e = e.replace(/\n+/g, "");
    e = e.replace(/\s+/g, " ");
    e = e.replace(/> </g, "><");
    e = e.replace(/&amp;/gi, "&");
    e = e.replace(/(&#160;|$nbsp;)/gi, " ");
    for (var b in Markup.tags) {
      if (Markup.tags[b].fromHtml) {
        e = Markup.tags[b].fromHtml(e, c)
      }
    }
    e = e.replace(/<style\b[\s\S]*?>[\s\S]*?<\/style>/g, "");
    e = e.replace(/<\/?[a-z][a-z0-9]*\b[\s\S]*?>/g, " ");
    e = e.replace(/<!--(.*?)-->/g, "");
    e = e.replace(/\n[\n]+/g, "\n\n");
    e = e.replace(/[ ]+/g, " ");
    e = e.replace(/\t/g, "  ");
    return $WH.trim(e)
  },
  removeTags: function (e, c) {
    var b = Markup._parse(e, c);
    return b.tagless()
  },
  matchOuterTags: function (p, h, u, c) {
    var k = c.indexOf("g") > -1,
        o = c.replace(/g/g, ""),
        r = new RegExp(h + "|" + u, "g" + o),
        j = new RegExp(h, o),
        q = [],
        v, w, e, b;
    do {
      v = 0;
      while (e = r.exec(p)) {
        if (j.test(e[0])) {
          if (!v++) {
            w = r.lastIndex;
            b = e
          }
        } else {
          if (v) {
            if (!--v) {
              q.push([p.slice(w, e.index), b[0], e[0]]);
              if (!k) {
                return q
              }
            }
          }
        }
      }
    } while (v && (r.lastIndex = w));
    return (q.length ? q : false)
  },
  getImageUploadIds: function (e, c) {
    var b = Markup._parse(e, c);
    return b.imageUploadIds()
  },
  printHtml: function (e, f, c) {
    f = $WH.ge(f);
    var b = Markup.toHtml(e, c);
    f.innerHTML = b;
    Markup.createMaps();
    if ($(f).find("div.full-tweet").length && (typeof twttr == "object") && twttr.hasOwnProperty("widgets")) {
      twttr.widgets.load(f)
    }
  },
  toggleReveal: function (e) {
    var b = $("#reveal-" + e);
    if (b.length == 0) {
      return
    }
    var c = $("#revealtoggle-" + e);
    if (b.is(":visible") && c.is(":visible")) {
      b.hide();
      c.text("(read more)")
    } else {
      b.show();
      if (c.hasClass("changelog")) {
        c.hide()
      } else {
        c.text("(hide)")
      }
    }
  },
  mapperPreview: function (f) {
    try {
      window.mapper = Markup.maps[f];
      var c = window.open("/edit=mapper-preview", "mapperpreview", "toolbar=no,location=no,directories=no,status=yes,menubar=no,scrollbars=no,resizable=no,width=800,height=540");
      c.focus()
    } catch (b) {}
  },
  createTabs: function (b, f, h) {
    var c = new Tabs({
      parent: $WH.ge("dsf67g4d-" + b.id + (h ? "-preview" : "")),
      forum: 1,
      noScroll: (h ? true : false)
    });
    for (var e = 0; e < f.length; ++e) {
      var g = f[e];
      c.add(g.name, {
        id: b.id + "-" + g.id,
        icon: g.icon,
        "class": g["class"]
      })
    }
    c.flush()
  },
  CreateTweet: function (j) {
    var p = $WH.isset("BlueTweets");
    var b = p ? BlueTweets.now : new Date();
    if (!j.id) {
      return document.createTextNode("")
    }
    var D = $WH.ce("div");
    D.className = "full-tweet";
    if (j.wh_significant == "1") {
      D.className += " significant"
    }
    if (j.repliedTo) {
      var r = this.CreateTweet(j.repliedTo);
      r.className += " replied";
      $WH.ae(D, r)
    }
    var n = $WH.ce("div");
    $WH.ae(D, n);
    n.className = "tweet";
    var C = $WH.ce("a");
    $WH.ae(n, C);
    C.className = "avatar";
    C.style.backgroundImage = "url(" + j.author.avatar + ")";
    C.href = "https://twitter.com/" + j.author.username;
    var e = $WH.ce("div");
    $WH.ae(n, e);
    e.className = "main";
    var z = $WH.ce("div");
    $WH.ae(e, z);
    z.className = "top";
    var C = $WH.ce("a");
    $WH.ae(z, C);
    C.href = "https://twitter.com/" + j.author.username;
    if (p) {
      BlueTweets.AuthorTooltip(C, j.author.id)
    }
    var o = $WH.ce("span");
    $WH.ae(C, o);
    o.className = "author-name";
    $WH.st(o, j.author.name);
    var o = $WH.ce("span");
    $WH.ae(C, o);
    o.className = "author-username";
    $WH.st(o, "@" + j.author.username);
    var C = $WH.ce("a");
    $WH.ae(z, C);
    C.className = "timestamp";
    C.href = "https://twitter.com/" + j.author.username + "/status/" + j.id;
    if (isNaN(Date.parse(j.timestamp))) {
      j.timestamp = j.timestamp.replace(/^([A-Za-z]+ [A-Za-z]+ \d\d)( \d\d:\d\d:\d\d [-+]\d{4})( (?:19|20)\d\d)$/, "$1$3$2")
    }
    var A = (b.getTime() - Date.parse(j.timestamp)) / 1000;
    if (A < 60) {
      $WH.st(C, "" + A + "s")
    } else {
      if (A < 60 * 60) {
        $WH.st(C, "" + Math.floor(A / 60) + "m")
      } else {
        if (A < 60 * 60 * 24) {
          $WH.st(C, "" + Math.floor(A / 60 / 60) + "h")
        } else {
          if (A < 60 * 60 * 24 * 3) {
            $WH.st(C, "" + Math.floor(A / 60 / 60 / 24) + "d")
          } else {
            A = (new Date(j.timestamp)).toString().split(" ");
            $WH.st(C, "" + A[1] + " " + A[2])
          }
        }
      }
    }
    var z = $WH.ce("div");
    $WH.ae(e, z);
    z.className = "status";
    var m = j.text;
    var w, f, h, g;
    if (j.hasOwnProperty("entities") && (j.entities !== null)) {
      if (j.entities.hasOwnProperty("media") && $WH.is_array(j.entities.media)) {
        for (g in j.entities.media) {
          h = j.entities.media[g];
          m = m.replace(j.text.substr(h.indices[0], h.indices[1] - h.indices[0]), '<a href="' + h.url + '" class="entity-media">' + h.display_url + "</a>");
          if (h.type == "photo") {
            var c = "",
                q = 0;
            for (var k in h.sizes) {
              if ((h.sizes[k].w <= 375) && (h.sizes[k].h <= 1200) && (h.sizes[k].w > q)) {
                c = k;
                q = h.sizes[k].w
              }
            }
            if (c != "") {
              var E = $WH.ce("img");
              $WH.ae(e, E);
              E.className = "photo";
              E.width = h.sizes[c].w;
              E.height = h.sizes[c].h;
              E.src = h.media_url + ":" + c
            }
          }
        }
      }
      if (j.entities.hasOwnProperty("urls") && $WH.is_array(j.entities.urls)) {
        w = [];
        for (g in j.entities.urls) {
          h = j.entities.urls[g];
          f = j.text.substr(h.indices[0], h.indices[1] - h.indices[0]);
          if ($WH.in_array(w, f) >= 0) {
            continue
          }
          w.push(f);
          m = m.replace(f, '<a href="' + h.url + '" class="entity-url">' + h.display_url + "</a>", "g")
        }
      }
      if (j.entities.hasOwnProperty("user_mentions") && $WH.is_array(j.entities.user_mentions)) {
        w = [];
        for (g in j.entities.user_mentions) {
          h = j.entities.user_mentions[g];
          f = j.text.substr(h.indices[0], h.indices[1] - h.indices[0]).toLowerCase();
          if ($WH.in_array(w, f) >= 0) {
            continue
          }
          w.push(f);
          m = m.replace(f, '<a href="https://twitter.com/' + h.screen_name + '" class="entity-mention">@' + h.screen_name + "</a>", "gi")
        }
      }
      if (j.entities.hasOwnProperty("hashtags") && $WH.is_array(j.entities.hashtags)) {
        w = [];
        for (g in j.entities.hashtags) {
          h = j.entities.hashtags[g];
          f = j.text.substr(h.indices[0], h.indices[1] - h.indices[0]).toLowerCase();
          if ($WH.in_array(w, f) >= 0) {
            continue
          }
          w.push(f);
          m = m.replace(f, '<a href="https://twitter.com/search?q=#' + h.text + '" class="entity-hashtag">#' + h.text + "</a>", "gi")
        }
      }
    }
    z.innerHTML = m;
    var B = $WH.ce("div");
    $WH.ae(e, B);
    B.className = "bottom";
    if (p && g_user && (g_user.roles & U_GROUP_MODERATOR)) {
      var C = $WH.ce("a");
      $WH.ae(B, C);
      C.href = "javascript:;";
      C.className = "markup-link";
      C.setAttribute("data-tweet", j.id);
      $WH.aE(C, "click", BlueTweets.ShowLinks);
      $WH.st(C, "Links");
      var v = $WH.ce("label");
      v.className = "significance";
      $WH.ae(B, v);
      var y = $WH.ce("input");
      $WH.ae(v, y);
      y.type = "checkbox";
      y.setAttribute("data-tweet", j.id);
      y.checked = (j.wh_significant == "1");
      $WH.aE(y, "click", BlueTweets.SetSignificant);
      var o = $WH.ce("span");
      $WH.ae(v, o);
      $WH.st(o, "Significant")
    }
    var C = $WH.ce("a");
    $WH.ae(B, C);
    C.className = "widget reply";
    C.href = "https://twitter.com/intent/tweet?in_reply_to=" + j.id;
    C.target = "whtwitter";
    $WH.st(C, "Reply");
    C.insertBefore($WH.ce("span"), C.firstChild);
    var C = $WH.ce("a");
    $WH.ae(B, C);
    C.className = "widget retweet";
    C.href = "https://twitter.com/intent/retweet?tweet_id=" + j.id;
    C.target = "whtwitter";
    $WH.st(C, "Retweet");
    C.insertBefore($WH.ce("span"), C.firstChild);
    var C = $WH.ce("a");
    $WH.ae(B, C);
    C.className = "widget favorite";
    C.href = "https://twitter.com/intent/favorite?tweet_id=" + j.id;
    C.target = "whtwitter";
    $WH.st(C, "Favorite");
    C.insertBefore($WH.ce("span"), C.firstChild);
    return D
  }
};
var MarkupUtil = {
  ltrimText: function (b) {
    b._rawText = b._rawText.ltrim();
    return b
  },
  rtrimText: function (b) {
    b._rawText = b._rawText.rtrim();
    return b
  },
  checkSiblingTrim: function (b, c) {
    if (c.name == "<text>" && (Markup.tags[b.name].rtrim || Markup.tags[b.name].trim)) {
      c.attr = MarkupUtil.ltrimText(c.attr)
    } else {
      if (b.name == "<text>" && (Markup.tags[c.name].ltrim || Markup.tags[c.name].trim)) {
        b.attr = MarkupUtil.rtrimText(b.attr)
      }
    }
    return [b, c]
  }
};
var MarkupTree = function () {
  this.nodes = [];
  this.currentNode = null
};
MarkupTree.prototype = {
  openTag: function (c, e) {
    if (c != "<text>" && Markup.tags[c] && !Markup.tags[c].allowedClass) {
      Markup.tags[c].allowedClass = MARKUP_CLASS_PENDING
    }
    if (!Markup.tags[c]) {
      return false
    } else {
      if (Markup.tags[c].allowedModes && Markup.tags[c].allowedModes[MarkupModeMap[Markup.mode]] == undefined) {
        return false
      } else {
        if (Markup.tags[c].allowedClass && Markup.tags[c].allowedClass > Markup.allow) {
          return false
        }
      }
    }
    if (Markup.mode == MARKUP_MODE_REPLY && !Markup.tags[c].allowInReplies) {
      return false
    }
    var f = {
      name: c,
      attr: e,
      parent: null,
      nodes: []
    };
    if (this.currentNode) {
      f.parent = this.currentNode
    }
    if (Markup.tags[c].allowedParents) {
      if (f.parent != null) {
        if (Markup.tags[c].allowedParents[f.parent.name] === undefined) {
          return false
        }
      } else {
        if (Markup.root == undefined || Markup.tags[c].allowedParents[Markup.root] == undefined) {
          return false
        }
      }
    }
    if (f.parent && Markup.tags[f.parent.name].allowedChildren && Markup.tags[f.parent.name].allowedChildren[c] == undefined) {
      return false
    }
    if (this.currentNode) {
      if (this.currentNode.nodes.length == 0 && f.name == "<text>" && Markup.tags[this.currentNode.name].itrim) {
        f.attr = MarkupUtil.ltrimText(f.attr)
      } else {
        if (this.currentNode.nodes.length > 0) {
          var b = this.currentNode.nodes.length - 1;
          var g = MarkupUtil.checkSiblingTrim(this.currentNode.nodes[b], f);
          this.currentNode.nodes[b] = g[0];
          f = g[1]
        }
      }
      if (f.name == "<text>") {
        f.attr._text = Markup._preText(f.attr._rawText);
        if (f.attr._text.length > 0) {
          this.currentNode.nodes.push(f)
        }
      } else {
        this.currentNode.nodes.push(f)
      }
    } else {
      if (this.nodes.length > 0) {
        var b = this.nodes.length - 1;
        var g = MarkupUtil.checkSiblingTrim(this.nodes[b], f);
        this.nodes[b] = g[0];
        f = g[1]
      }
      if (f.name == "<text>") {
        f.attr._text = Markup._preText(f.attr._rawText);
        if (f.attr._text.length > 0) {
          this.nodes.push(f)
        }
      } else {
        this.nodes.push(f)
      }
    }
    if (!Markup.tags[c].empty && !Markup.tags[c].post) {
      this.currentNode = f
    }
    return true
  },
  closeTag: function (e) {
    if (Markup.tags[e].empty || Markup.tags[e].post) {
      return false
    }
    if (!this.currentNode) {
      return false
    } else {
      if (this.currentNode.name == e) {
        if (this.currentNode.nodes.length > 0) {
          var c = this.currentNode.nodes.length - 1;
          if (Markup.tags[this.currentNode.name].itrim && this.currentNode.nodes[c].name == "<text>") {
            var g = this.currentNode.nodes[c];
            g.attr = MarkupUtil.rtrimText(g.attr);
            g.attr._text = Markup._preText(g.attr._rawText);
            this.currentNode.nodes[c] = g
          }
        }
        this.currentNode = this.currentNode.parent
      } else {
        var f = function (j, h) {
          for (var k = h.length - 1; k >= 0; --k) {
            if (h[k].name == j) {
              return k
            }
          }
          return -1
        };
        var b;
        if (this.currentNode.parent) {
          b = f(e, this.currentNode.parent.nodes)
        } else {
          b = f(e, this.nodes)
        }
        if (b == -1) {
          return false
        }
      }
    }
    return true
  },
  toHtml: function () {
    var f = [];
    var e = {};
    for (var l in Markup.collectTags) {
      e[l] = []
    }
    this.tagless(true);
    var k = 0;
    var b = function (m, p, u) {
      var w = "";
      for (var o = 0; o < m.length; ++o) {
        var n = m[o];
        if (p == 0 && o == 0 && Markup.firstTags[n.name]) {
          n.attr.first = true
        } else {
          if (p > 0 && o == 0 && Markup.firstTags[n.parent.name]) {
            n.attr.first = true
          }
        }
        if (o == m.length - 1 && Markup.firstTags[n.name]) {
          n.attr.last = true
        }
        if (Markup.excludeTags[n.name]) {
          u[n.name] = (u[n.name] ? u[n.name] + 1 : 1)
        }
        for (var v in u) {
          for (var y in Markup.excludeTags[v]) {
            if (Markup.excludeTags[v][y][n.name]) {
              n.attr[y] = false
            }
          }
        }
        if (Markup.collectTags[n.name]) {
          n.offset = k++;
          e[n.name].push(n)
        }
        if (Markup.tags[n.name].post) {
          var s = "<!--" + Math.random() + "-->";
          w += s;
          f.push([n, s])
        } else {
          if (Markup.tags[n.name].empty) {
            var r;
            if (n.parent && Markup.tags[n.parent.name].rawText) {
              r = Markup.tags[n.name].toHtml(n.attr, {
                needsRaw: true
              })
            } else {
              r = Markup.tags[n.name].toHtml(n.attr)
            }
            if (typeof r == "string") {
              w += r
            } else {
              if (r !== undefined) {
                if (w == "") {
                  w = []
                }
                w.push(r)
              }
            }
          } else {
            var q = arguments.callee(n.nodes, p + 1, u);
            n.attr._contents = q;
            n.attr._nodes = n.nodes;
            var z = Markup.tags[n.name].toHtml(n.attr);
            if (z.length == 2) {
              w += z[0] + q + z[1]
            } else {
              if (z.length == 1) {
                if (typeof z[0] == "string") {
                  w += z[0]
                } else {
                  if (w == "") {
                    w = []
                  }
                  w.push(z[0])
                }
              }
            }
          }
        }
        if (u[n.name]) {
          u[n.name]--;
          if (u[n.name] == 0) {
            delete u[n.name]
          }
        }
      }
      return w
    };
    str = b(this.nodes, 0, []);
    for (var h = 0; h < f.length; ++h) {
      var g = f[h][0];
      var c = f[h][1];
      var j = Markup.tags[g.name].postHtml(g.attr, e);
      if (typeof j == "string") {
        str = str.replace(c, j)
      }
    }
    return str
  },
  tagless: function (e) {
    var b = function (g) {
      var k = "";
      for (var h = 0; h < g.length; ++h) {
        var j = g[h];
        var f = arguments.callee(j.nodes);
        if (e) {
          j.attr._textContents = f
        } else {
          j.attr._contents = f
        }
        if (j.name == "<text>") {
          k += Markup.tags[j.name].toHtml(j.attr, {
            noLink: true,
            noNbsp: true
          })
        } else {
          if (Markup.tags[j.name].toText) {
            k += Markup.tags[j.name].toText(j.attr)
          }
        }
        if (!Markup.tags[j.name].taglessSkip) {
          k += f
        }
      }
      return k
    };
    if (e) {
      b(this.nodes)
    } else {
      var c = b(this.nodes);
      c = c.replace(/&amp;/g, "&").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"');
      return c
    }
  },
  imageUploadIds: function () {
    var c = [];
    var b = function (e) {
      for (var f = 0; f < e.length; ++f) {
        var g = e[f];
        if (g.name == "img" && g.attr.upload) {
          c.push(g.attr.upload)
        }
        arguments.callee(g.nodes)
      }
    };
    b(this.nodes);
    return c
  }
};
Markup.tags.modelviewer = Markup.tags.model;
Markup.reveals = 0;
Markup._init();
$(document).ready(function () {
  $(".quote-header").each(function (c) {
    var f = $(this);
    var e = f.siblings();
    if (e.hasClass("quote-body")) {
      var b = $("<a/>", {
        href: "javascript:;",
        "class": "toggle"
      });
      b.click(function (j) {
        var g = $(j);
        var h = g.parent();
        h.toggleClass("collapse");
        if (h.hasClass("collapse")) {
          $(this).html("Expand")
        } else {
          $(this).html("Collapse")
        }
      }.bind(b, this));
      if ($(this).parent().hasClass("collapse")) {
        b.html("Expand")
      } else {
        b.html("Collapse")
      }
      f.append(b)
    }
  });
  $(".quote-wh").each(function (c) {
    var e = $(this);
    var b = $("<a/>", {
      href: "javascript:;",
      "class": "toggle"
    });
    b.click(function (g) {
      var f = $(g);
      f.toggleClass("collapse");
      if (f.hasClass("collapse")) {
        $(this).html("Expand")
      } else {
        $(this).html("Collapse")
      }
    }.bind(b, this));
    if ($(this).hasClass("collapse")) {
      b.html("Expand")
    } else {
      b.html("Collapse")
    }
    e.append(b)
  })
});
var MENU_IDX_ID = 0;
var MENU_IDX_NAME = 1;
var MENU_IDX_URL = 2;
var MENU_IDX_SUB = 3;
var MENU_IDX_OPT = 4;
var Menu = new
function () {
  var aw = this;
  var W = null;
  var T = [];
  var Y = null;
  var aI = null;
  var at = null;
  var A = null;
  var B = null;
  aw.getMenu = function () {
    if ($WH.g_isHearthhead()) {
      return mn_path_hearthhead
    }
    return mn_path
  };
  aw.addTouch = function (aR, aS, aQ) {
    if (!aQ) {
      aQ = $.noop
    }
    var aP = $(aR);
    aP.data("menu", aS);
    aP.click(al)
  };

  function al(aP, aR) {
    var aQ = $(this);
    if (aQ.hasClass("active") || aQ.hasClass("touch-menu-active")) {
      aF.call(this)
    } else {
      ab.call(this, aP, aR)
    }
    if (aP) {
      aP.preventDefault();
      aP.stopPropagation()
    }
  }
  function u(aR, aQ, aP, aS) {
    C(aR, aQ, aP, aS);
    if (aQ) {
      aQ.preventDefault();
      aQ.stopPropagation()
    }
  }
  aw.add = function (aR, aS, aQ) {
    if (!aQ) {
      aQ = $.noop
    }
    var aP = $(aR);
    if (aQ.onShow) {
      aS.onShow = aQ.onShow
    }
    if (aQ.onHide) {
      aS.onHide = aQ.onHide
    }
    aP.data("menu", aS);
    if (Platform.isTouch()) {
      aP.click(al);
      return
    }
    if (aQ.showAtCursor) {
      if (aQ.leftAndRightClick) {
        aR.oncontextmenu = $WH.rf;
        aP.click(function (aT) {
          if (aT.which != 2) {
            P.call(this, aT);
            return false
          }
        }).mouseup(function (aT) {
          R.call(this, P, aT)
        })
      } else {
        if (aQ.rightClick) {
          aR.oncontextmenu = $WH.rf;
          aP.mouseup(function (aT) {
            R.call(this, P, aT)
          })
        } else {
          aP.click(P)
        }
      }
    } else {
      if (aQ.showAtElement) {
        if (aQ.leftAndRightClick) {
          aR.oncontextmenu = $WH.rf;
          aP.click(function (aT) {
            if (aT.which != 2) {
              ap.call(this, aT);
              return false
            }
          }).mouseup(function (aT) {
            R.call(this, ap, aT)
          }).mouseleave(e)
        } else {
          if (aQ.rightClick) {
            aR.oncontextmenu = $WH.rf;
            aP.mouseup(function (aT) {
              R.call(this, ap, aT)
            }).mouseleave(e)
          } else {
            aP.click(function (aT) {
              if (aT.which != 2) {
                if ($(this).hasClass("open")) {
                  return
                } else {
                  ap.call(this, aT);
                  return false
                }
              }
            }).mouseleave(e)
          }
        }
      } else {
        aP.mouseover(ap).mouseout(e)
      }
    }
  };
  aw.remove = function (aP) {
    $(aP).data("menu", null).unbind("click", P).unbind("mouseover", ap).unbind("mouseout", e)
  };
  aw.show = function (aR, aQ) {
    if (Platform.isTouch()) {
      al.call(aQ, null, aR);
      return
    }
    var aP = $(aQ);
    B = aP.get(0);
    A = aR;
    m(aR, aP)
  };
  aw.showAtCursor = function (aQ, aP) {
    if (Platform.isTouch()) {
      u(aQ, aP);
      return
    }
    A = aQ;
    av(aQ, aP.pageX, aP.pageY)
  };
  aw.showAtXY = function (aQ, aP, aR) {
    if (Platform.isTouch()) {
      u(aQ, null, aP, aR);
      return
    }
    A = aQ;
    av(aQ, aP, aR)
  };
  aw.hide = function (aP) {
    if (Platform.isTouch()) {
      af();
      return
    }
    e(null, aP);
    ao()
  };
  aw.addButtons = function (aP, aS, aR) {
    var aT = $(aP);
    if (!aT.length) {
      return
    }
    var aQ = $('<span class="menu-buttons"></span>');
    $.each(aS, function (aU, aW) {
      if (aG(aW)) {
        return
      }
      var aX = $("<a></a>");
      var aV = $("<span></span>", {
        text: aW[MENU_IDX_NAME]
      }).appendTo(aX);
      aw.linkifyItem(aW, aX);
      aX.data("menuItem", aW);
      if (G(aW)) {
        aV.addClass("hassubmenu");
        if (Platform.isTouch()) {
          aw.addTouch(aX.get(0), aW[MENU_IDX_SUB])
        } else {
          if (aR && aR.menusOnClick) {
            aw.add(aX, aW[MENU_IDX_SUB], {
              showAtElement: true
            })
          } else {
            aw.add(aX, aW[MENU_IDX_SUB])
          }
        }
      }
      aQ.append(aX)
    });
    aT.append(aQ)
  };
  aw.linkifyItem = function (aP, aS) {
    var aR = aw.getItemOpt(aP);
    if (!aP[MENU_IDX_URL]) {
      aS.attr("href", "javascript:;");
      aS.addClass("unlinked");
      return false
    }
    if (typeof aP[MENU_IDX_URL] == "function") {
      aS.attr("href", "javascript:;");
      aS.click(ah);
      aS.click(aP[MENU_IDX_URL]);
      if (aR.rel) {
        aS.attr("rel", aR.rel)
      }
    } else {
      var aQ = aw.getItemUrl(aP);
      aS.attr("href", aQ);
      if (aR.newWindow || g_isExternalUrl(aQ)) {
        aS.attr("target", "_blank")
      }
      if (aR.rel) {
        aS.attr("rel", aR.rel)
      }
    }
    if (typeof aP[MENU_IDX_OPT] == "object" && aP[MENU_IDX_OPT].className) {
      aS.addClass(aP[MENU_IDX_OPT].className)
    }
    return true
  };
  aw.updateItem = function (aW) {
    var aT = aW.$a;
    if (!aT) {
      return
    }
    var aQ = aw.getItemOpt(aW);
    aT.removeClass("checked tinyicon icon");
    aT.css("background-image", "");
    if (aW.checked) {
      aT.addClass("checked fonticon");
      aT.prepend('<i class="fa fa-check fa-size-s fa-color-white fonticon-icon"/>')
    } else {
      var aU = false;
      var aV = function (a0) {
        switch (typeof a0) {
        case "string":
          return a0;
          break;
        case "function":
          var a1 = a0(aW);
          if (typeof a1 == "string") {
            return a1
          }
          break
        }
        return false
      };
      if (!aU && aQ.fontIcon) {
        var aY = aV(aQ.fontIcon);
        if (aY) {
          aU = true;
          aT.addClass("fonticon");
          aT.prepend('<i class="fa fa-' + aY + ' fonticon-icon"/>')
        }
      }
      if (!aU && aQ.tinyIcon) {
        var aR = aV(aQ.tinyIcon);
        if (aR) {
          aU = true;
          aT.addClass("tinyicon");
          aT.css("background-image", "url(" + ay(aR) + ")")
        }
      }
      if (!aU && aQ.icon) {
        var aX = aV(aQ.icon);
        if (aX) {
          aU = true;
          aT.addClass("icon");
          aT.css("background-image", "url(" + aX + ")")
        }
      }
      if (!aU && aQ.socketColor) {
        var aZ = aV(aQ.socketColor);
        if (aZ && g_file_gems[aZ]) {
          aU = true;
          aT.addClass("socket-" + g_file_gems[aZ])
        }
      }
      if (!aU && aQ.armory) {
        var aS = aV(aQ.armory);
        if (aS) {
          aU = true;
          aT.addClass("armoryicon");
          aT.css("background-image", "url(" + aS + ")")
        }
      }
    }
    if (aQ.np) {
      aT.attr("rel", "np")
    }
    var aP = (aQ["class"] || aQ.className);
    if (aP) {
      aT.addClass(aP)
    }
  };
  aw.prepareForZul = function (aQ, aP) {
    return au(aQ, aP)
  };
  aw.hasMenu = function (aQ) {
    var aP = $(aQ);
    return aP.data("menu") != null
  };
  aw.modifyUrl = function (aP, aS, aR) {
    var aQ = {
      params: aS,
      opt: aR
    };
    z(aP, function (aT) {
      aT.modifyUrl = aQ
    });
    PageTemplate.updateBreadcrumb()
  };
  aw.fixUrls = function (aR, aP, aQ) {
    aQ = aQ || {};
    aQ.hash = (aQ.hash ? "#" + aQ.hash : "");
    c(aR, aP, aQ, 0)
  };
  aw.sort = function (aP) {
    if (M(aP)) {
      ad(aP)
    } else {
      y(aP)
    }
  };
  aw.sortSubmenus = function (aQ, aP) {
    $.each(aP, function (aR, aT) {
      var aS = aw.findItem(aQ, aT);
      if (aS && aS[MENU_IDX_SUB]) {
        aw.sort(aS[MENU_IDX_SUB])
      }
    })
  };
  aw.implode = function (aS, aP) {
    if (!aP) {
      aP = $.noop
    }
    var aR = [];
    var aQ;
    if (aP.createHeadinglessGroup) {
      aQ = [];
      aR.push([0, "", null, aQ])
    }
    $.each(aS, function (aT, aU) {
      if (aG(aU)) {
        aQ = [];
        aR.push([0, aU[MENU_IDX_NAME], null, aQ])
      } else {
        if (aQ) {
          aQ.push(aU)
        } else {
          aR.push(aU)
        }
      }
    });
    return aR
  };
  aw.findItem = function (aQ, aP) {
    return aw.getFullPath(aQ, aP).pop()
  };
  aw.getFullPath = function (aT, aS) {
    var aR = [];
    for (var aQ = 0; aQ < aS.length; ++aQ) {
      var aU = w(aT, aS[aQ]);
      if (aU != -1) {
        var aP = aT[aU];
        aP.parentMenu = aT;
        aT = aP[MENU_IDX_SUB];
        aR.push(aP)
      }
    }
    return aR
  };
  aw.getItemUrl = function (aP) {
    var aQ = aP[MENU_IDX_URL];
    if (!aQ) {
      return null
    }
    var aR = aw.getItemOpt(aP);
    aQ = aQ.replace(/^:hearthhead.com/, g_getRelativeHostPrefix("hearthhead.com"));
    aQ = aQ.replace(/^:wowhead.com/, g_getRelativeHostPrefix("wowhead.com"));
    if (aP.modifyUrl) {
      aQ = g_modifyUrl(aQ, aP.modifyUrl.params, aP.modifyUrl.opt)
    }
    return aQ
  };
  aw.getItemOpt = function (aP) {
    if (!aP[MENU_IDX_OPT]) {
      aP[MENU_IDX_OPT] = {}
    }
    return aP[MENU_IDX_OPT]
  };
  aw.removeItemById = function (aP, aR) {
    var aQ = w(aP, aR);
    if (aQ != -1) {
      aP.splice(aQ, 1)
    }
  };
  aw.map = function (aR, aQ, aX) {
    aQ.className += " menu-map";
    for (var aU = 0, aY; aY = aR[aU]; aU++) {
      if (aY[MENU_IDX_OPT] && aY[MENU_IDX_OPT].menuMapHide) {
        continue
      }
      $WH.ae(aQ, g_getMajorHeading(typeof aY[MENU_IDX_URL] == "string" ? '<a href="' + aw.getItemUrl(aY) + '">' + aY[MENU_IDX_NAME] + "</a>" : aY[MENU_IDX_NAME], 2));
      if (typeof aY[MENU_IDX_SUB] == "object") {
        var aZ = $WH.ce("div", {
          className: "menu-map-section"
        });
        var aP = null;
        var a0 = $WH.ce("div", {
          className: "menu-map-submenu-group"
        });
        for (var aT = 0, aV; aV = aY[MENU_IDX_SUB][aT]; aT++) {
          if (aV[MENU_IDX_OPT] && aV[MENU_IDX_OPT].menuMapHide) {
            continue
          }
          if (aV[MENU_IDX_ID] == null) {
            $WH.ae(aZ, a0);
            a0 = $WH.ce("div", {
              className: "menu-map-submenu-group"
            });
            aP = aV[MENU_IDX_NAME];
            $WH.ae(aZ, g_getMajorHeading(typeof aV[MENU_IDX_URL] == "string" ? '<a href="' + aw.getItemUrl(aV) + '">' + aV[MENU_IDX_NAME] + "</a>" : aV[MENU_IDX_NAME], 3));
            continue
          }
          if (aX && aX.noEmptySubmenus && !aV[MENU_IDX_SUB]) {
            continue
          }
          var aS = g_getMajorHeading(typeof aV[MENU_IDX_URL] == "string" ? '<a href="' + aw.getItemUrl(aV) + '">' + aV[MENU_IDX_NAME] + "</a>" : aV[MENU_IDX_NAME], 4);
          var aW = $WH.ce("div", {
            className: "menu-map-submenu"
          }, aS);
          if (aV[MENU_IDX_NAME] == aP) {
            aW.setAttribute("data-duplicate-heading", "true")
          }
          if (typeof aV[MENU_IDX_SUB] == "object") {
            aw.addButtons(aW, aV[MENU_IDX_SUB], {
              menusOnClick: true
            })
          }
          $WH.ae(a0, aW)
        }
        $WH.ae(aZ, a0);
        $WH.ae(aQ, aZ)
      }
    }
  };
  var aj = 25;
  var o = 333;
  var aO = 4;
  var l = 6;
  var O = 6;
  var K = 3;
  var ac = 26;
  var H = false;
  var U;
  var Z;
  var g = {};
  var Q = {};
  var an = {};
  var t = {};
  var V = 0;

  function ae() {
    if (H) {
      return
    }
    H = true;
    var aP = $('<div class="menu"><a href="#"><span>ohai</span></a></div>').css({
      left: "-1000px",
      top: "-1000px"
    }).appendTo(document.body);
    var aQ = aP.children("a").outerHeight();
    aP.remove();
    if (aQ > 15) {
      ac = aQ
    }
  }
  function m(aQ, aP) {
    if (Z) {
      Z.removeClass("open")
    }
    Z = aP;
    Z.addClass("open");
    b(aQ)
  }
  function ah() {
    if (Platform.isTouch()) {
      af();
      return
    }
    if (Z) {
      Z.removeClass("open");
      Z = null
    }
    aq(0)
  }
  function av(aQ, aP, aR) {
    clearTimeout(U);
    b(aQ, aP, aR)
  }
  function b(aQ, aP, aR) {
    v(0);
    ag(aQ, 0, aP, aR);
    aq(1)
  }
  function ag(aR, aT, aX, aW) {
    ae();
    if (typeof aR == "function") {
      aR = aR()
    }
    ar(aR);
    var aU = ak(aT);
    var aQ = D(aR);
    var aP = h(aQ, aT);
    aU.append(aP);
    var aS = !aD(aT);
    g[aT] = aU;
    var aV = aB(aU, aT, aX, aW);
    aU.css({
      left: aV.x + "px",
      top: aV.y + "px"
    });
    var aY = $WH.g_createRect(aV.x, aV.y, aU.width(), aU.height());
    WAS.intersect(aY, true);
    aN(aU, aS)
  }
  function ak(aQ) {
    if (an[aQ]) {
      var aP = an[aQ];
      aP.children().detach();
      aP.css({
        left: 0,
        top: 0
      });
      return aP
    }
    var aP = $('<div class="menu"></div>').mouseover(q).mouseleave(az).delegate("a", "mouseenter", {
      depth: aQ
    }, aE).delegate("a", "click", s);
    if ($WH.isset("g_thottbot") && g_thottbot) {
      aP.hide()
    }
    aP.appendTo(document.body);
    an[aQ] = aP;
    return aP
  }
  function D(aS) {
    var aQ = p(aS);
    if (t[aQ]) {
      return t[aQ]
    }
    var aT;
    var aP = [];
    $.each(aS, function (aU, aV) {
      if (!aC(aV)) {
        return
      }
      var aW = f(aV);
      if (aG(aV)) {
        aT = aW;
        return
      }
      if (aT) {
        aP.push(aT);
        aT = null
      }
      aP.push(aW)
    });
    var aR = $(aP);
    t[aS] = aR;
    return aR
  }
  function f(aQ) {
    X(aQ);
    var aT = $("<a></a>");
    aQ.$a = aT;
    aT.data("menuItem", aQ);
    aw.linkifyItem(aQ, aT);
    aw.updateItem(aQ);
    if (aG(aQ)) {
      aT.addClass("separator");
      aT.text(aQ[MENU_IDX_NAME]);
      return aT
    }
    var aP;
    var aS = aQ[MENU_IDX_NAME],
        aR, aU, aV;
    if ((typeof aS == "object" && aS != null) && ("tagName" in aS) && (aS.tagName.toLowerCase() == "span")) {
      while (aR = aS.getElementsByTagName("span")[0]) {
        aU = document.createElement("div");
        aU.className = aR.className;
        $.extend(aU.style, aR.style);
        aU.style.display = "inline";
        while (aV = aR.firstChild) {
          aV.parentNode.removeChild(aV);
          aU.appendChild(aV)
        }
        aR.parentNode.insertBefore(aU, aR);
        aR.parentNode.removeChild(aR)
      }
      aP = $(aS).clone()
    } else {
      aP = $("<span></span>");
      aP.text(aQ[MENU_IDX_NAME])
    }
    aP.appendTo(aT);
    if (G(aQ)) {
      aP.addClass("hassubmenu")
    }
    return aT
  }
  function h(aP, a0) {
    var aV = Z;
    var aX = $(window);
    var a4 = aP.length;
    var aT = aX.height() - (K * 2) - O;
    var aZ = Math.floor(Math.max(0, aT) / ac);
    if (aZ >= a4) {
      var a2 = $('<div class="menu-outer"></div>');
      var aQ = $('<div class="menu-inner"></div>');
      aP.each(function () {
        aQ.append(this)
      });
      a2.append(aQ);
      return a2
    }
    var aS = Math.min(aO, Math.ceil(a4 / aZ));
    var a3 = Math.ceil(a4 / aS);
    var aU = 0;
    var a5 = a4;
    var aW = $("<div></div>");
    while (a5 > 0) {
      var a2 = $('<div class="menu-outer"></div>');
      var aQ = $('<div class="menu-inner"></div>');
      var a1 = Math.min(a5, a3);
      var aR = aU;
      var aY = aR + a1;
      aP.slice(aR, aY).each(function () {
        aQ.append(this)
      });
      a2.append(aQ);
      aW.append(a2);
      aU += a1;
      a5 -= a1
    }
    return aW
  }
  function aB(aQ, aR, aP, aS) {
    if (aR == 0) {
      return aM(aQ, aR, aP, aS)
    }
    return S(aQ, aR)
  }
  function aM(aY, aU, a0, aZ) {
    var aX = g_getViewport();
    var aQ = aY.width();
    var aV = aY.height();
    var aS = aQ + l;
    var aP = aV + O;
    var aW = (a0 != null && aZ != null);
    if (aW) {
      if (aZ + aP > aX.b) {
        aZ = Math.max(aX.t, aX.b - aP)
      }
    } else {
      var aR = Z;
      var aT = aR.offset();
      a0 = aT.left;
      aZ = aT.top + aR.outerHeight();
      if (aZ + aP > aX.b && aT.top >= aP) {
        aZ = aT.top - aP
      }
    }
    if (a0 + aS > aX.r) {
      a0 = Math.max(aX.l, aX.r - aS)
    }
    return {
      x: a0,
      y: aZ
    }
  }
  function S(aX, aU) {
    var aW = g_getViewport();
    var aQ = aX.width();
    var aV = aX.height();
    var aS = aQ + l;
    var aP = aV + O;
    var aR = Q[aU - 1];
    var aT = aR.offset();
    var aZ = false;
    var a0 = aT.left + aR.outerWidth() - 5;
    var aY = aT.top - 1;
    if (a0 + aS > aW.r) {
      aZ = true
    }
    if (aZ) {
      a0 = Math.max(aW.l, aT.left - aQ)
    }
    if (aY + aP > aW.b) {
      aY = Math.max(aW.t, aW.b - aP)
    }
    return {
      x: a0,
      y: aY
    }
  }
  function aN(aQ, aP) {
    if (aP) {
      aQ.css({
        opacity: "0"
      }).show().animate({
        opacity: "1"
      }, "fast", null, aJ)
    } else {
      aQ.show()
    }
  }
  function aJ(aP) {
    $(this).css("opacity", "")
  }
  function aq(aP) {
    while (g[aP]) {
      g[aP].stop().hide();
      g[aP] = null;
      ++aP
    }
    if (!g[0]) {
      WAS.restoreHidden();
      ao()
    }
  }
  function v(aP) {
    while (Q[aP]) {
      Q[aP].removeClass("open");
      Q[aP] = null;
      ++aP
    }
  }
  function aD(aP) {
    return g[aP || 0] != null
  }
  function j(aP) {
    return aP[MENU_IDX_ID]
  }
  function aG(aP) {
    return aP[MENU_IDX_ID] == null
  }
  function M(aP) {
    return $WH.in_array(aP, true, aG) != -1
  }
  function G(aP) {
    return aP[MENU_IDX_SUB] != null
  }
  function w(aP, aQ) {
    return $WH.in_array(aP, aQ, j)
  }
  function aA(aP) {
    var aQ = aw.getItemOpt(aP);
    if (aQ && aQ.requiredAccess && !User.hasPermissions(aQ.requiredAccess)) {
      return false
    }
    return true
  }
  function aC(aP) {
    if (!(aP instanceof Array)) {
      return false
    }
    if (!aA(aP)) {
      return false
    }
    if (aP[MENU_IDX_OPT] && aP[MENU_IDX_OPT].hide) {
      return false
    }
    if (G(aP)) {
      if (!aa(aP[MENU_IDX_SUB])) {
        return false
      }
    }
    return true
  }
  function aa(aP) {
    return $WH.in_array(aP, true, I) != -1
  }
  function I(aP) {
    return !aG(aP) && aA(aP)
  }
  function p(aP) {
    if (aP.uniqueId == null) {
      aP.uniqueId = V++
    }
    return aP.uniqueId
  }
  function L(aQ, aP) {
    $.each(aQ, function (aR, aS) {
      z(aS, aP)
    })
  }
  function z(aP, aQ) {
    aQ(aP);
    if (G(aP)) {
      L(aP[MENU_IDX_SUB], aQ)
    }
  }
  function c(aS, aP, aQ, aR) {
    $.each(aS, function (aU, aV) {
      if (aV === undefined) {
        return
      }
      if (aG(aV)) {
        return
      }
      if (aQ.uniqueUrls && aQ.uniqueUrls[aV[MENU_IDX_ID]]) {
        aV[MENU_IDX_URL] = aQ.uniqueUrls[aV[MENU_IDX_ID]]
      } else {
        if (aV[MENU_IDX_URL] == null) {
          aV[MENU_IDX_URL] = aP + aV[MENU_IDX_ID] + aQ.hash
        }
      }
      if (G(aV)) {
        var aT = true;
        var aW = aP;
        if (aQ.useSimpleIds) {
          aT = false
        } else {
          if (aQ.useSimpleIdsAfter != null && aR >= aQ.useSimpleIdsAfter) {
            aT = false
          } else {
            if (aQ.useLastUrl) {
              aT = false;
              aW = aV[MENU_IDX_URL] + ((aV[MENU_IDX_URL].indexOf("=") >= 0) ? "." : "=")
            }
          }
        }
        if (aT) {
          aW += aV[MENU_IDX_ID] + "."
        }
        c(aV[MENU_IDX_SUB], aW, aQ, aR + 1)
      }
    })
  }
  function y(aP) {
    aP.sort(function (aR, aQ) {
      return $WH.strcmp(aR[MENU_IDX_NAME], aQ[MENU_IDX_NAME])
    })
  }
  function ad(aQ) {
    var aP = aw.implode(aQ, {
      createHeadinglessGroup: true
    });
    $.each(aP, function (aR, aS) {
      y(aS[MENU_IDX_SUB])
    });
    n(aQ, aP)
  }
  function n(aQ, aP) {
    aQ.splice(0, aQ.length);
    $.each(aP, function (aR, aS) {
      if (aS[MENU_IDX_NAME]) {
        aQ.push([, aS[MENU_IDX_NAME]])
      }
      $.each(aS[MENU_IDX_SUB], function (aT, aU) {
        aQ.push(aU)
      })
    })
  }
  function X(aP) {
    var aQ = aw.getItemOpt(aP);
    if (aQ.checkedUrl && location.href.match(aQ.checkedUrl)) {
      aP.checked = true
    }
    if (typeof aQ.checkedFunc == "function") {
      aP.checked = aQ.checkedFunc(aP)
    }
  }
  function ar(aP) {
    if (aP.onBeforeShow) {
      aP.onBeforeShow(aP)
    }
    $.each(aP, function (aQ, aR) {
      var aS = aw.getItemOpt(aR);
      if (aS.onBeforeShow) {
        aS.onBeforeShow(aR)
      }
    })
  }
  function ap(aQ) {
    clearTimeout(U);
    var aP = $(this);
    var aR = aP.data("menu");
    B = this;
    A = aR;
    if (!aD()) {
      U = setTimeout((function (aT, aS) {
        m.call(null, aT, aS);
        F(this, aT, aQ)
      }).bind(this, aR, aP), aj);
      return
    }
    m(aR, aP);
    F(this, aR, aQ)
  }
  function e(aQ, aP) {
    clearTimeout(U);
    if (aD()) {
      if (aP) {
        ah()
      } else {
        U = setTimeout(ah, o)
      }
    }
  }
  function P(aQ) {
    clearTimeout(U);
    var aP = $(this);
    var aR = aP.data("menu");
    B = this;
    A = aR;
    aw.showAtCursor(aP.data("menu"), aQ);
    F(this, aR, aQ)
  }
  function R(aP, aQ) {
    aQ = $WH.$E(aQ);
    if (aQ._button == 3 || aQ.shiftKey || aQ.ctrlKey) {
      aP.call(this, aQ)
    }
  }
  function ab(aR, aT) {
    var aQ = $(this),
        aS = aQ.parent(),
        aP = aQ.data("menuItem");
    if (!aT) {
      aT = aQ.data("menu")
    }
    A = aT;
    B = this;
    if (at) {
      at.removeClass("touch-menu-active");
      at = null
    }
    if (aS[0].tagName == "DT") {
      af();
      aQ.addClass("active");
      W = null;
      T = [aP[MENU_IDX_ID]];
      J(aT)
    } else {
      at = aQ;
      at.addClass("touch-menu-active");
      W = aT;
      T = aP ? [aP[MENU_IDX_ID]] : [null];
      J(aT, {
        atElement: aQ
      })
    }
    F(this, aT, aR)
  }
  function C(aR, aQ, aP, aS) {
    A = aR;
    B = null;
    if (at) {
      at.removeClass("touch-menu-active");
      at = null
    }
    W = aR;
    J(aR, {
      atPosition: aQ ? [aQ.pageX, aQ.pageY + 5] : [aP, aS]
    });
    F(null, aR, aQ, aP, aS)
  }
  function J(aT, a0) {
    if (!a0) {
      a0 = {}
    }
    var aS;
    if (a0.atElement || a0.atPosition) {
      var aR = false;
      if (!Y) {
        Y = $("<div/>", {
          "class": "floating-touch-menu-container",
          css: {
            display: "none"
          }
        });
        Y.appendTo("body")
      } else {
        var a2 = Y.offset();
        aR = a2.top
      }
      Y.empty();
      aS = $("<div/>", {
        "class": "floating-touch-menu"
      });
      aI = $("<div/>", {
        "class": "floating-touch-menu-arrow"
      });
      aS.append(aI).appendTo(Y);
      var a3 = $("<a/>", {
        "class": "floating-touch-menu-closer"
      });
      a3.click(af);
      Y.append(a3);
      var aQ = a0.atElement ? a0.atElement.offset() : {
        left: a0.atPosition[0],
        top: a0.atPosition[1]
      };
      var a1 = aQ.top;
      if (a0.atElement) {
        a1 += a0.atElement.outerHeight()
      }
      var aP = parseInt(a1 + 7);
      var aX = aP != aR;
      Y.css({
        display: "block",
        top: (aX ? aP - 10 : aP) + "px"
      });
      var aV = aQ.left;
      if (a0.atElement) {
        aV += (a0.atElement.outerWidth() / 2)
      }
      aI.css({
        display: "block",
        left: parseInt(aV - 10) + "px"
      });
      if (aX) {
        Y.css({
          opacity: "0"
        });
        setTimeout(function () {
          Y.animate({
            opacity: "1",
            top: "+=10px"
          })
        }, 0)
      }
    } else {
      Y = null;
      aI = null;
      aS = $("#topbar");
      if (!aS.length) {
        aS = $("<div/>", {
          "class": "topbar",
          id: "topbar"
        });
        aS.insertAfter("#toptabs")
      }
      aS.empty()
    }
    var aU = false;
    if ((!a0.atElement && !a0.atPosition) || (a0.atElement && a0.atElement.data("menuItem"))) {
      aU = true
    }
    if (aU) {
      if (Y) {
        Y.addClass("has-breadcrumb")
      }
      var aW = $WH.ce("ul");
      aW.className = "touch-menu-breadcrumb";
      am(aW, T)
    } else {
      if (Y) {
        Y.removeClass("has-breadcrumb")
      }
    }
    if (Y) {
      if (a0.atElement && a0.atElement.parents("div.breadcrumb")) {
        Y.addClass("from-breadcrumb")
      } else {
        Y.removeClass("from-breadcrumb")
      }
    }
    var aY = $WH.ce("div");
    aY.className = "touch-menu-items";
    aY.style.left = "0%";
    ax(aT, {
      target: aY
    });
    var aZ = $WH.ce("div");
    aZ.className = "touch-menu-items-wrapper";
    $WH.ae(aZ, aY);
    if (aU) {
      aS.append(aW)
    }
    aS.append(aZ).attr("class", "touch-menu")
  }
  function ax(aV, aS) {
    if (aS.animate) {
      var aU = $(".touch-menu-items");
      $(aS.animate).parent().addClass("chosen");
      aU.addClass("chosen");
      setTimeout(function () {
        var aW = $WH.ce("div");
        aW.className = "touch-menu-items";
        var aY = (T.length - 2) * -10 + 2;
        aW.style.left = aY + "%";
        k(aW, aV);
        var a0 = $(aW);
        var aX = aU.last();
        aX.after(a0);
        var a1 = aX.height();
        aU.each(function () {
          var a2 = $(this);
          if (a2.data("height")) {
            a2.css({
              height: "1px"
            }).animate({
              left: "-=12%"
            })
          } else {
            a2.data("height", a2.height()).css("height", a2.height() + "px").animate({
              left: "-=12%",
              height: "1px"
            })
          }
        });
        var aZ = a0.height();
        a0.css("height", a1 + "px").animate({
          left: "-=12%",
          height: aZ + "px"
        })
      }, 100)
    } else {
      if (aS.reverse) {
        var aT = $(".touch-menu-items");
        var aP = $(aT.get(aS.targetPathIndex));
        var aR = aS.reverse * 12;
        var aQ = aT.last();
        aP.css({
          height: aQ.height() + "px"
        }).animate({
          left: "+=" + aR + "%",
          height: aP.data("height") + "px"
        }, {
          complete: function () {
            $(this).css("height", "")
          }
        });
        aQ.css({
          height: "1px"
        });
        aT.not(aP).animate({
          left: "+=" + aR + "%"
        }, {
          complete: function () {
            aP.removeClass("chosen");
            $(".chosen", aP).removeClass("chosen");
            aP.nextAll().stop().remove()
          }
        })
      } else {
        if (aS.target) {
          $(aS.target).empty();
          k(aS.target, aV)
        }
      }
    }
  }
  function am(aQ, a0, aY, aV) {
    var aR = Menu.getMenu();
    var aP, aT, aU, aS;
    if (aY) {
      for (aU in T) {
        aP = T[aU];
        for (aS in aR) {
          aT = aR[aS];
          if (aT[MENU_IDX_ID] == aP) {
            aR = aT[MENU_IDX_SUB];
            break
          }
        }
      }
      T = T.concat(a0)
    }
    var aX, aZ, aW;
    for (aU in a0) {
      aP = a0[aU];
      aX = null;
      for (aS in aR) {
        aT = aR[aS];
        if (aT[MENU_IDX_ID] == aP) {
          aX = aT;
          break
        }
      }
      if (!aX) {
        break
      }
      aZ = $WH.ce("li");
      aW = $WH.ce("a");
      aW.href = "javascript:;";
      aw.linkifyItem(aX, $(aW));
      aW.innerHTML = aX[MENU_IDX_NAME];
      aW.onclick = ai;
      $WH.ae(aZ, aW);
      $WH.ae(aQ, aZ)
    }
  }
  function ai() {
    var aT = $(this).parent();
    if (aT.is(":last-child")) {
      return true
    }
    var aR = aT.index();
    var aS = Menu.getMenu();
    for (var aQ = 0; aQ <= aR; aQ++) {
      for (var aP in aS) {
        if (aS[aP][MENU_IDX_ID] == T[aQ]) {
          aS = aS[aP][MENU_IDX_SUB];
          break
        }
      }
    }
    aT.nextAll().remove();
    ax(aS, {
      reverse: T.length - aR - 1,
      targetPathIndex: aR
    });
    T = T.slice(0, aR + 1);
    return false
  }
  function k(aT, aS) {
    var aR = null,
        aP;
    for (var aQ in aS) {
      aP = aS[aQ];
      if (!aC(aP)) {
        continue
      }
      if (aG(aP)) {
        aH(aT, aP);
        aR = N(aT);
        continue
      }
      if (!aR) {
        aR = N(aT)
      }
      $WH.ae(aR, E(aP))
    }
  }
  function N(aQ) {
    var aP = $WH.ce("ul");
    $WH.ae(aQ, aP);
    return aP
  }
  function aH(aT, aQ) {
    var aR = $WH.ce("a");
    var aP = $(aR);
    aQ.$a = aP;
    aP.data("menuItem", aQ);
    aw.linkifyItem(aQ, aP);
    aw.updateItem(aQ);
    aP.text(aQ[MENU_IDX_NAME]);
    var aS = g_getMajorHeading(aP.get(0), 2);
    $WH.ae(aT, aS)
  }
  function E(aU) {
    f(aU);
    X(aU);
    var aQ = $("<a></a>");
    aU.$a = aQ;
    aQ.data("menuItem", aU);
    var aR = aw.linkifyItem(aU, aQ);
    aw.updateItem(aU);
    var aT;
    var aY = aL(aU),
        aX, aS, aP;
    if ((typeof aY == "object") && ("tagName" in aY) && (aY.tagName.toLowerCase() == "span")) {
      while (aX = aY.getElementsByTagName("span")[0]) {
        aS = document.createElement("div");
        aS.className = aX.className;
        $.extend(aS.style, aX.style);
        aS.style.display = "inline";
        while (aP = aX.firstChild) {
          aP.parentNode.removeChild(aP);
          aS.appendChild(aP)
        }
        aX.parentNode.insertBefore(aS, aX);
        aX.parentNode.removeChild(aX)
      }
      aT = $(aY)
    } else {
      aT = $("<span></span>");
      aT.text(aL(aU))
    }
    aT.appendTo(aQ);
    var aW = $WH.ce("li");
    aQ.appendTo(aW);
    if (G(aU)) {
      if (aR) {
        aQ.addClass("has-sub");
        aT.addClass("has-sub");
        var aV = $WH.ce("a");
        aV.className = "view-sub";
        aV.href = "javascript:;";
        aV.onclick = r;
        $(aV).data("menuItem", aU);
        $WH.ae(aW, aV)
      } else {
        aQ.addClass("only-sub").data("menuItem", aU).click(r);
        aT.addClass("only-sub")
      }
    }
    return aW
  }
  function aL(aP) {
    return aP[MENU_IDX_OPT].shortname || aP[MENU_IDX_NAME]
  }
  function r() {
    var aP = $(this).data("menuItem");
    var aQ = $(".touch-menu-breadcrumb");
    if (aQ.length) {
      am(aQ.get(0), [aP[MENU_IDX_ID]], true)
    } else {
      T.push(null)
    }
    ax(aP[MENU_IDX_SUB], {
      animate: this
    })
  }
  function aF() {
    af()
  }
  function af() {
    $("#toptabs dt > a.active").removeClass("active");
    $("#topbar").removeClass("touch-menu").empty();
    if (Y) {
      Y.empty().css({
        display: "none"
      })
    }
    W = null;
    T = [];
    aI = null;
    if (at) {
      at.removeClass("touch-menu-active")
    }
    at = null;
    ao()
  }
  function q(aP) {
    clearTimeout(U)
  }
  function az(aP) {
    clearTimeout(U);
    U = setTimeout(ah, o)
  }
  function aE(aQ) {
    clearTimeout(U);
    var aR = $(this);
    var aS = aQ.data.depth;
    v(aS);
    var aP = aR.data("menuItem");
    var aT = aS;
    if (aP && G(aP)) {
      aR.addClass("open");
      Q[aS] = aR;
      ag(aP[MENU_IDX_SUB], aS + 1);
      ++aT
    }
    aq(aT + 1)
  }
  function s(aR) {
    var aS = $(this);
    var aP = aS.data("menuItem");
    if (!aP) {
      return
    }
    var aQ = aw.getItemOpt(aP);
    if (aQ.onClick) {
      aQ.onClick()
    }
  }
  function ao() {
    if (A && A.onHide) {
      A.onHide.call(B, A)
    }
    A = null;
    B = null
  }
  function F(aP, aR, aQ) {
    if (aR.onShow) {
      aR.onShow.call(aP, aR, aQ)
    }
  }
  function ay(aP) {
    return aP.indexOf("/") != -1 ? aP : g_staticUrl + "/images/wow/icons/tiny/" + aP.toLowerCase() + ".gif"
  }
  function au(aU, aT) {
    if (!(aU instanceof Array)) {
      return null
    }
    var aR = [];
    var aV;
    for (var aQ = 0, aP; aP = aU[aQ]; aQ++) {
      var aS = aK(aP, aT);
      if (!aS) {
        continue
      }
      if (aP[MENU_IDX_ID] == null) {
        aV = aS;
        continue
      }
      if (aV) {
        aR.push(aV);
        aV = null
      }
      aR.push(aS)
    }
    return aR
  }
  function aK(aP, aT) {
    var aR = aP[MENU_IDX_OPT] || {};
    if (aR.zulHide) {
      return null
    }
    if (aP[MENU_IDX_OPT] && aP[MENU_IDX_OPT].requiredAccess && !User.hasPermissions(aP[MENU_IDX_OPT].requiredAccess)) {
      return null
    }
    var aS = {
      type: "link"
    };
    var aQ = "";
    if (aP[MENU_IDX_ID] == null) {
      aS.heading = true
    }
    aS.text = aP[MENU_IDX_NAME];
    if (typeof aS.text != "string") {
      aS.text = ""
    }
    aS.name = g_urlize(aS.text);
    if (aR.zulNoHref) {} else {
      if (typeof aR.zulHref == "function") {
        aS.href = aR.zulHref
      } else {
        switch (typeof aP[MENU_IDX_URL]) {
        case "string":
          aS.href = Menu.getItemUrl(aP);
          break;
        case "function":
          aS.click = aP[MENU_IDX_URL];
          break
        }
      }
    }
    if (aP[MENU_IDX_OPT]) {
      if (aR.zulGetMobileMenu) {
        if (!aS.menu) {
          aS.menu = {}
        }
        aS.menu.mobile = aR.zulGetMobileMenu
      }
      if (aR.fontIcon) {
        aS.fontIcon = aR.fontIcon
      }
      if (aR.icon) {
        aS.imageIcon = {
          universal: aR.icon,
          enlargeForMobile: true
        }
      }
      if (aR.tinyIcon) {
        aS.imageIcon = {
          universal: ay(aR.tinyIcon),
          enlargeForMobile: true
        }
      }
      if (aP.checked) {
        aS.checked = true
      } else {
        if (aR.checkedUrl && location.href.match(aR.checkedUrl)) {
          aS.checked = true
        } else {
          if (typeof aR.checkedFunc == "function") {
            aS.checked = aR.checkedFunc(aP)
          } else {
            if (aR.checked) {
              aS.checked = true
            }
          }
        }
      }
    }
    if (aP[MENU_IDX_SUB]) {
      if (!aS.menu) {
        aS.menu = {}
      }
      aS.menu.mobile = au(aP[MENU_IDX_SUB])
    }
    if (aQ) {
      aS.className = aQ
    }
    if (aT) {
      aS.condition = aT
    } else {
      if (aR.zulCondition) {
        aS.condition = aR.zulCondition
      }
    }
    return aS
  }
  $(window).keyup((function (aP, aQ) {
    if (aQ.keyCode == 27) {
      aP()
    }
  }).bind(null, ah))
};
Menu.fixUrls(mn_achievements, ":wowhead.com/achievements=");
Menu.fixUrls(mn_bluetracker_wow, ":wowhead.com/bluetracker=");
Menu.fixUrls(mn_bluetracker_hearthstone, ":hearthhead.com/bluetracker=");
Menu.fixUrls(mn_classes, ":wowhead.com/class=");
Menu.fixUrls(mn_currencies, ":wowhead.com/currencies=");
Menu.fixUrls(mn_factions, ":wowhead.com/factions=");
Menu.fixUrls(mn_wowhead_forums, ":wowhead.com/forums?board=", {
  useSimpleIds: true,
  uniqueUrls: {
    32: ":hearthhead.com/forums"
  }
});
Menu.fixUrls(mn_hearthhead_forums, ":wowhead.com/forums?board=", {
  useSimpleIds: true,
  uniqueUrls: {
    32: ":hearthhead.com/forums"
  }
});
Menu.fixUrls(mn_items, ":wowhead.com/items=");
Menu.fixUrls(mn_itemSets, ":wowhead.com/itemsets?filter=cl=", {
  hash: "0-2+1"
});
Menu.fixUrls(mn_npcs, ":wowhead.com/npcs=");
Menu.fixUrls(mn_objects, ":wowhead.com/objects=");
Menu.fixUrls(mn_petCalc, ":wowhead.com/petcalc=");
Menu.fixUrls(mn_pets, ":wowhead.com/pets=");
Menu.fixUrls(mn_quests, ":wowhead.com/quests=");
Menu.fixUrls(mn_races, ":wowhead.com/race=");
Menu.fixUrls(mn_spells, ":wowhead.com/spells=");
Menu.fixUrls(mn_titles, ":wowhead.com/titles=");
Menu.fixUrls(mn_zones, ":wowhead.com/zones=");
if ($WH.isset("mn_garrisons")) {
  Menu.fixUrls(mn_garrisons, null, {
    useLastUrl: true
  })
}
Menu.findItem(mn_lists, [101])[2] = li_createList.bind(null, 1, null, null, null, null);
Menu.findItem(mn_lists, [102])[2] = li_createList.bind(null, 2);
$(document).ready(function () {
  if (Locale.getId() == LOCALE_ENUS) {
    return
  }
  Menu.sort(mn_classes);
  Menu.sort(mn_database);
  Menu.sortSubmenus(mn_wowhead_forums, [
    [-2]
  ]);
  Menu.sortSubmenus(mn_hearthhead_forums, [
    [-2]
  ]);
  Menu.sortSubmenus(mn_items, [
    [4, 1],
    [4, 2],
    [4, 3],
    [4, 4],
    [1],
    [0],
    [16],
    [7],
    [6],
    [9]
  ]);
  Menu.sort(mn_itemSets);
  Menu.sort(mn_npcs);
  Menu.sort(mn_objects);
  Menu.sort(mn_talentCalc);
  Menu.sort(mn_petCalc);
  Menu.sort(mn_pets);
  Menu.sort(mn_races);
  Menu.sort(mn_skills);
  Menu.sortSubmenus(mn_spells, [
    [7],
    [-2],
    [-3],
    [11],
    [9]
  ])
});

function MessageBox(b, e) {
  b.find(".message-box").remove();
  var c = $("<div></div>");
  c.hide();
  c.addClass("message-box");
  c.html('<p class="message">' + e + '</p><p class="close">(Click on this box to close it)</p>');
  c.click(function () {
    $(this).fadeOut()
  });
  b.append(c[0]);
  c.fadeIn()
}




var ModelViewer = new
function () {
  this.validSlots = [1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26];
  this.slotMap = {
    1: 1,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    10: 10,
    13: 21,
    14: 14,
    15: 22,
    16: 16,
    17: 21,
    19: 19,
    20: 20,
    21: 21,
    22: 22,
    23: 22,
    25: 21,
    26: 21
  };
  var j, H, K = [],
      E, b, m, t, l, I, u, y, z, k, c, v, C, B, s, g = false,
      w = [{
      id: 10,
      name: g_chr_races[10],
      model: "bloodelf"
    },
    {
      id: 11,
      name: g_chr_races[11],
      model: "draenei"
    },
    {
      id: 3,
      name: g_chr_races[3],
      model: "dwarf"
    },
    {
      id: 7,
      name: g_chr_races[7],
      model: "gnome"
    },
    {
      id: 9,
      name: g_chr_races[9],
      model: "goblin"
    },
    {
      id: 1,
      name: g_chr_races[1],
      model: "human"
    },
    {
      id: 4,
      name: g_chr_races[4],
      model: "nightelf"
    },
    {
      id: 24,
      name: g_chr_races[24],
      model: "pandaren"
    },
    {
      id: 2,
      name: g_chr_races[2],
      model: "orc"
    },
    {
      id: 6,
      name: g_chr_races[6],
      model: "tauren"
    },
    {
      id: 8,
      name: g_chr_races[8],
      model: "troll"
    },
    {
      id: 5,
      name: g_chr_races[5],
      model: "scourge"
    },
    {
      id: 22,
      name: g_chr_races[22],
      model: "worgen"
    }],
      n = [{
      id: 0,
      name: LANG.male,
      model: "male"
    },
    {
      id: 1,
      name: LANG.female,
      model: "female"
    }];
  var q = [{
    name: LANG.pd_hd,
    val: "true"
  },
  {
    name: LANG.pd_sd,
    val: "false"
  }];

  function F() {}
  function e() {
    var L, M;
    if (y.is(":visible")) {
      L = (y[0].selectedIndex >= 0 ? y.val() : "")
    } else {
      L = (z[0].selectedIndex >= 0 ? z.val() : "")
    }
    M = (k[0].selectedIndex >= 0 ? k.val() : 0);
    return {
      r: L,
      s: M
    }
  }
  function h(L, M) {
    return (!isNaN(L) && L > 0 && $WH.in_array(w, L, function (N) {
      return N.id
    }) != -1 && !isNaN(M) && M >= 0 && M <= 1)
  }
  function D() {
    var M = 600;
    if (B.displayAd && g_user.ads) {
      M = 725
    }
    if (window.innerWidth && window.innerWidth - 20 < M) {
      M = window.innerWidth - 20
    }
    I.css("width", M + "px");
    if (t) {
      t.destroy()
    }
    var T = {
      type: ZamModelViewer.WOW,
      contentPath: "http://wow.zamimg.com/modelviewer/",
      container: I,
      aspect: M / I.height(),
      background: "background.png",
      models: {
        type: H,
        id: j
      }
    };
    var N = ZamModelViewer.Wow.Types;
    if ((H == N.NPC || H == N.HUMANOIDNPC || H == N.CHARACTER) && K.length) {
      var Q = [];
      K = [].concat.apply([], K);
      for (var O = 0; O < K.length; O += 2) {
        Q.push([K[O], K[O + 1]])
      }
      T.items = Q
    }
    if (E) {
      T.link = E
    }
    if (b) {
      T.label = b
    }
    if (c) {
      T.hd = (c.val() == "true")
    }
    this.viewer = t = new ZamModelViewer(T);
    var S = e(),
        P = S.r,
        R = S.s;
    if (!m.noPound) {
      var L = "#modelviewer";
      var S = $("#dsgndslgn464d");
      if (S.length == 0) {
        switch (m.type) {
        case 1:
          L += ":1:" + m.displayId + ":" + (m.humanoid | 0);
          break;
        case 2:
          L += ":2:" + m.displayId;
          break;
        case 3:
          L += ":3:" + m.displayId + ":" + (m.slot | 0);
          break;
        case 4:
          L += ":4:" + K.join(";");
          break;
        case 101:
          L += ":101:" + K.join(";");
          break
        }
      }
      if (P && R) {
        L += ":" + P + "+" + R
      } else {
        L += ":"
      }
      if (m.extraPound != null) {
        L += ":" + m.extraPound
      }
      g = false;
      location.replace($WH.rtrim(L, ":"))
    }
  }
  function f() {
    var P = e(),
        M = P.r,
        N = P.s;
    if (!M) {
      if (!k.is(":visible")) {
        return
      }
      k.hide();
      j = K[1];
      switch (m.slot) {
      case 1:
        H = 2;
        break;
      case 3:
        H = 4;
        break;
      default:
        H = 1
      }
    } else {
      if (!k.is(":visible")) {
        k.show()
      }
      var P = function (Q) {
        return Q.id
      };
      var O = $WH.in_array(w, M, P);
      var L = $WH.in_array(n, N, P);
      if (O != -1 && L != -1) {
        j = w[O].model + n[L].model;
        H = 16
      }
      g_setWowheadCookie("temp_default_3dmodel", M + "," + N)
    }
    G();
    F();
    D()
  }
  function r() {
    var L = $("select", u);
    if (L.val() && t && t.method("isLoaded")) {
      t.method("setAnimation", L.val())
    }
  }
  function p() {
    if (g) {
      return
    }
    var N = $("select", u);
    N.empty();
    if (!t || !t.method("isLoaded")) {
      N.append($("<option/>", {
        text: LANG.tooltip_loading,
        val: 0
      }));
      return
    }
    var L = {};
    var P = t.method("getNumAnimations");
    for (var O = 0; O < P; ++O) {
      var M = t.method("getAnimation", O);
      if (M && M != "EmoteUseStanding") {
        L[M] = 1
      }
    }
    var Q = [];
    for (var M in L) {
      Q.push(M)
    }
    Q.sort();
    for (var O = 0; O < Q.length; ++O) {
      N.append($("<option/>", {
        text: Q[O],
        val: Q[O]
      }))
    }
    g = true
  }
  function G() {
    var M = [];
    switch (B.type) {
    case 4:
    case 101:
      if (B.itemData) {
        for (var L in B.itemData) {
          M.push({
            itemId: B.itemData[L][0],
            itemBonus: B.itemData[L][1],
            slot: B.itemData[L][2]
          })
        }
      }
      break
    }
    if (M.length > 0) {
      var N = e();
      M.push(N);
      $WH.localStorage.set("lastViewedModel", JSON.stringify(M))
    }
  }
  function A(R, M) {
    var T = -1,
        V = -1,
        N, Q;
    if (M.race != null && M.sex != null) {
      T = M.race;
      V = M.sex;
      l.hide();
      R = 0
    } else {
      l.show()
    }
    if (T == -1 && V == -1) {
      if (location.hash) {
        var S = location.hash.match(/modelviewer:.*?([0-9]+)\+([0-9]+)/);
        if (S != null) {
          if (h(S[1], S[2])) {
            T = S[1];
            V = S[2];
            k.show()
          }
        }
      }
    }
    if (R) {
      N = y;
      Q = 1;
      y.show();
      y[0].selectedIndex = -1;
      z.hide();
      if (V == -1) {
        k.hide()
      }
    } else {
      if (T == -1 && V == -1) {
        var Y = 1,
            P = 0;
        if (g_user && g_user.cookies.default_3dmodel) {
          var L = g_user.cookies.default_3dmodel.split(",");
          if (L.length == 2) {
            Y = L[0];
            P = L[1] - 1
          }
        } else {
          var U = g_getWowheadCookie("temp_default_3dmodel");
          if (U) {
            var L = U.split(",");
            if (L.length == 2) {
              Y = L[0];
              P = L[1]
            }
          }
        }
        if (h(Y, P)) {
          T = Y;
          V = P
        } else {
          T = 1;
          V = 0
        }
      }
      N = z;
      Q = 0;
      y.hide();
      z.show();
      k.show()
    }
    if (V != -1) {
      k[0].selectedIndex = V
    }
    if (T != -1 && V != -1) {
      var X = function (Z) {
        return Z.id
      };
      var W = $WH.in_array(w, T, X);
      var O = $WH.in_array(n, V, X);
      if (W != -1 && O != -1) {
        j = w[W].model + n[O].model;
        H = 16;
        W += Q;
        N[0].selectedIndex = W;
        k[0].selectedIndex = O
      }
    }
  }
  function o() {
    if (!m.noPound) {
      if (!m.fromTag && v && v.indexOf("modelviewer") == -1) {
        $WH.g_setHash(v)
      } else {
        $WH.g_clearHash()
      }
    }
    if (t) {
      t.destroy()
    }
    if (m.onHide) {
      m.onHide()
    }
  }
  function J_test(U, Q, L) {
    var an, am;
    B = L;
    if (!L.displayAd || !g_user.ads) {
      Lightbox.setSize(620, 452)
    } else {
      Lightbox.setSize(749, 546)
    }
    if (Q) {
      U = $(U);
      U.addClass("has-lightbox-caption modelviewer");
      var T = $("<div/>", {
        "class": "modelviewer-screen"
      });
      var aa = $("<div/>", {
        "class": "lightbox-content modelviewer-modelbg"
      });
      aa.append(T);
      U.append(aa);
      I = T;
      u = $("<div/>", {
        "class": "modelviewer-animation"
      });
      var X = $("<var/>", {
        text: LANG.animation
      });
      u.append(X);
      var al = $("<select/>", {
        change: r,
        mouseenter: p
      });
      al.append($("<option/>", {
        text: Platform.isTouch() ? LANG.dialog_taptoload : LANG.dialog_mouseovertoload
      }));
      u.append(al);
      U.append(u);
      var an = $("<a/>", {
        "class": "dialog-question fa fa-question",
        href: "/help=modelviewer",
        target: "_blank",
        text: LANG.help
      }),
          am = $("<a/>", {
          "class": "dialog-x fa fa-times",
          href: "javascript:;",
          click: Lightbox.hide,
          text: LANG.close
        });
      U.append(am);
      U.append(an);
      if (L.itemData) {
        var M = $("<div/>", {
          "class": "modelviewer-slots"
        }).appendTo(T);
        var W = $("<div/>", {
          "class": "modelviewer-slots-left"
        }).appendTo(M);
        var V = $("<div/>", {
          "class": "modelviewer-slots-right"
        }).appendTo(M);
        var P = $("<div/>", {
          "class": "modelviewer-slots-bottom"
        }).appendTo(M);
        var Z = $("<a/>", {
          "class": "btn btn-site btn-small modelviewer-slots-link fa fa-male",
          href: g_getRelativeHostPrefix("wowhead.com") + "/dressing-room",
          html: " " + LANG.mv_dressingroom
        }).appendTo(M);
        var Y = {};
        for (var ae = 0, N; N = g_character_slots_data[ae]; ++ae) {
          Y[N.id] = Icon.create("inventoryslot_" + N.name, 1, null, "javascript:;");
          Y[N.id].className += " modelviewer-slots-noicon";
          if (N.noModel) {
            Y[N.id].style.visibility = "hidden"
          }
          $(Y[N.id]).appendTo(ae < 8 ? W : (ae < 16 ? V : P))
        }
        for (var ac = 0, ah; ah = L.itemData[ac]; ac++) {
          if (Y[ah[2]]) {
            Icon.setTexture(Y[ah[2]], 1, g_items.getIcon(ah[0], ah[1]).toLowerCase());
            Icon.getLink(Y[ah[2]]).href = "/item=" + ah[0] + (ah[1] && ah[1] != -1 ? "&bonus=" + ah[1] : "");
            Y[ah[2]].className = Y[ah[2]].className.replace(/ *modelviewer-slots-noicon/, "")
          }
        }
      }
      l = $("<div/>", {
        "class": "modelviewer-model"
      });
      var aj = function (ao, ad) {
        return $WH.strcmp(ao.name, ad.name)
      };
      w.sort(aj);
      y = $("<select/>", {
        change: f
      });
      z = $("<select/>", {
        change: f
      });
      k = $("<select/>", {
        change: f
      });
      c = $("<select/>", {
        change: f
      });
      y.append($("<option/>"));
      for (var ag = 0, ai = w.length; ag < ai; ++ag) {
        var ab = $("<option/>", {
          val: w[ag].id,
          text: w[ag].name
        });
        y.append(ab)
      }
      for (var ag = 0, ai = w.length; ag < ai; ++ag) {
        var ab = $("<option/>", {
          val: w[ag].id,
          text: w[ag].name
        });
        z.append(ab)
      }
      for (var ag = 0, ai = n.length; ag < ai; ++ag) {
        var ab = $("<option/>", {
          val: n[ag].id,
          text: n[ag].name
        });
        k.append(ab)
      }
      k.css("display", "inline");
      k.hide();
      for (var ag = 0, ai = q.length; ag < ai; ++ag) {
        var ab = $("<option/>", {
          val: q[ag].val,
          text: q[ag].name
        });
        c.append(ab)
      }
      l.append(y);
      l.append(z);
      l.append(k);
      l.append(c);
      U.append(l);
      var af = $("<div/>", {
        "class": "modelviewer-instructions"
      });
      af.append(LANG.mv_controls);
      U.append(af);
      d = $("<div/>", {
        id: "modelviewer-msg",
        "class": "sub",
        css: {
          display: "none",
          "margin-top": "-6px",
          color: "#ccc",
          "font-size": "13px"
        }
      });
      U.append(d);
      if (L.displayAd && false) {
        d.css("padding-bottom", "4px");
        d = $("<div/>", {
          id: "modelviewer-ad",
          css: {
            "padding-bottom": "10px"
          }
        });
        U.append(d)
      }
      if ($WH.isset("g_user") && g_user.id) {
        $.ajax({
          url: "/website-achievement-explored",
          data: {
            trigger: "modelviewer"
          },
          success: function () {
            AchievementCheck()
          },
          type: "POST"
        })
      }
    }
    switch (L.type) {
    case 1:
      l.hide();
      if (L.humanoid) {
        H = 32
      } else {
        H = 8
      }
      if (L.equipList) {
        K = L.equipList
      }
      j = L.displayId;
      break;
    case 2:
      l.hide();
      H = 64;
      j = L.displayId;
      break;
    case 3:
    case 4:
    case 101:
      if (L.type == 3) {
        K = [L.slot, L.displayId]
      } else {
        K = L.equipList
      }
      if (K.length > 2 || $WH.in_array([4, 5, 6, 7, 8, 9, 10, 16, 19, 20], K[0]) != -1 || (L.type == 101 && K.length > 1)) {
        A(0, L)
      } else {
        switch (K[0]) {
        case 1:
          H = 2;
          break;
        case 3:
          H = 4;
          break;
        default:
          H = 1
        }
        j = K[1];
        A(1, L)
      }
      break
    }
    var ak = $("#modelviewer-ad");
    ak.empty();
    F();
    setTimeout(D, 1);
    if (L.displayAd && ak.length > 0) {
      var S = $WH.ce("div");
      $WH.ae(ak[0], S);
      WAS.create("leaderboard", S)
    }
    var O = $("#modelviewer-msg");
    if (L.message && O.length > 0) {
      O.html(L.message);
      O.show()
    } else {
      O.hide()
    }
    if (L.link) {
      E = L.link
    }
    if (L.label) {
      b = L.label
    }
    var R = "";
    if (L.fromTag) {
      R += "Custom ";
      switch (L.type) {
      case 1:
        R += "NPC " + L.displayId + (L.humanoid ? " humanoid" : "");
        break;
      case 2:
        R += "Object " + L.displayId;
        break;
      case 3:
        R += "Item " + L.displayId + " Slot " + (L.slot | 0);
        break;
      case 4:
        R += "Item set " + K.join(".");
        break;
      case 101:
        R += "Transmog set " + K.join(".");
        break
      }
    } else {
      switch (L.type) {
      case 1:
        R += "NPC " + (L.typeId ? L.typeId : " DisplayID " + L.displayId);
        break;
      case 2:
        R += "Object " + L.typeId;
        break;
      case 3:
        R += "Item " + L.typeId;
        break;
      case 4:
        R += "Item set " + K.join(".");
        break;
      case 101:
        R += "Transmog set " + K.join(".");
        break
      }
    }
    g_trackEvent("Model Viewer", "Show", g_urlize(R));
    v = location.hash;
    G()
  }
  this.checkPound = function () {
    if (location.hash && location.hash.indexOf("#modelviewer") == 0) {
      var P = location.hash.split(":");
      if (P.length >= 3) {
        P.shift();
        var N = parseInt(P.shift());
        var M = {
          type: N,
          displayAd: 1
        };
        switch (N) {
        case 1:
          M.displayId = parseInt(P.shift());
          var L = parseInt(P.shift());
          if (L == 1) {
            M.humanoid = 1
          }
          break;
        case 2:
          M.displayId = parseInt(P.shift());
          break;
        case 3:
          M.displayId = parseInt(P.shift());
          M.slot = parseInt(P.shift());
          break;
        case 4:
          var O = P.shift();
          M.equipList = O.split(";");
          break
        }
        if (M.displayId || M.equipList) {
          ModelViewer.show(M)
        }
        if (s != null) {
          if (P.length > 0 && P[P.length - 1]) {
            s(P[P.length - 1])
          }
        }
      } else {
        if (s != null && P.length == 2 && P[1]) {
          s(P[1])
        } else {
          var Q = $("#dsgndslgn464d");
          if (Q.length > 0) {
            Q.click()
          }
        }
      }
    }
  };
  this.addExtraPound = function (L) {
    s = L
  };
  this.show = function (L) {
    m = L;
    Lightbox.show("modelviewer", {
      onShow: J,
      onHide: o
    }, L)
  };
  $(document).ready(this.checkPound)
};






var PageTemplate = new
function () {
  var l = this;
  var D = "";
  if ($WH.isset("g_thottbot") && g_thottbot) {
    D = "/tb"
  }
  var M = null;
  l.init = function () {
    n();
    u();
    o();
    y();
    $(document).ready(Q);
    m = true
  };
  l.initUserMenus = function () {
    O();
    v();
    K();
    $("#zul-bar-user .hassubmenu").append('<span class="fa fa-chevron-down"></span>')
  };
  l.get = function (S) {
    return r[S]
  };
  l.set = function (T) {
    if (!T) {
      return
    }
    var S = {};
    $.extend(S, r);
    $.extend(r, T);
    r.activeTab = parseInt(r.activeTab);
    if (m) {
      if (r.activeTab != S.activeTab) {
        s()
      }
      if (r.breadcrumb != S.breadcrumb) {
        P()
      }
    }
  };
  l.getBreadcrumb = function () {
    return j
  };
  l.updateBreadcrumb = function () {
    P()
  };
  l.expandBreadcrumb = function () {
    return E()
  };
  l.locateBreadcrumb = function () {
    var V = Menu.getFullPath(Menu.getMenu(), r.breadcrumb);
    if (!V.length) {
      return
    }
    if ((!g_pageInfo) || (!g_pageInfo.hasOwnProperty("typeId"))) {
      return
    }
    var W = new RegExp("\\b" + g_types[g_pageInfo.type] + "=" + g_pageInfo.typeId + "\\b");
    var U = $WH.cO(r.breadcrumb);
    U.pop();
    var T = false;
    var S = function (Y) {
      U.push(Y[0]);
      if (Y[3] && Y[3].length) {
        for (var X = 0; X < Y[3].length && !T; X++) {
          S(Y[3][X])
        }
      } else {
        T |= (Y.length > 2) && W.test(Y[2])
      }
      if (!T) {
        U.pop()
      }
    };
    S(V.pop());
    if (T) {
      r.breadcrumb = U;
      P()
    }
  };
  l.getUserMenu = function () {
    return b()
  };
  l.getListsSubmenu = function () {
    return I()
  };
  l.updateShareButtons = function () {
    $(".header-share-button a, .ra1-pw-popup a").attr("rel", "np")
  };
  l.applyCanonicalUrl = function () {
    if (!("replaceState" in window.history)) {
      return
    }
    var U = "";
    var T = document.getElementsByTagName("head")[0].getElementsByTagName("link");
    for (var S = 0; S < T.length; S++) {
      if (T[S].rel == "canonical") {
        U = T[S].href
      }
    }
    if (!U) {
      return
    }
    U = U.replace(/https?:\/\/[^\/]+/, "");
    if (location.href.indexOf(U) >= 0) {
      return
    }
    var V = "";
    if (U.indexOf("#") < 0) {
      V = window.location.hash;
      if (V == "#") {
        V = ""
      }
      if (V != "" && (V.substr(0, 1) != "#")) {
        V = "#" + V
      }
    }
    window.history.replaceState({}, "", U + V)
  };
  l.setMinimumPageWidth = function (S) {
    if (!document.body) {
      setTimeout(l.setMinimumPageWidth.bind(this, S), 5);
      return
    }
    switch (typeof S) {
    case "number":
      S += "px";
      break;
    case "string":
      if (S.match(/^[0-9]+$/)) {
        S += "px"
      }
      break;
    default:
      return
    }
    document.body.style.minWidth = S
  };
  l.collapseInteriorSidebar = function () {
    $(".interior-sidebar-wrapper").addClass("collapsed")
  };
  l.expandInteriorSidebar = function () {
    $(".interior-sidebar-wrapper").removeClass("collapsed")
  };
  var m = false;
  var r = {};
  var j;
  var p;
  var f = [];

  function z() {
    F();
    A()
  }
  function F() {
    j = $('<div class="breadcrumb"></div>')
  }
  function A() {
    if ($WH.Browser.ie6) {
      $(document.documentElement).addClass("ie6 ie67 ie678")
    }
    if ($WH.Browser.ie7) {
      $(document.documentElement).addClass("ie7 ie67 ie678")
    }
    if ($WH.Browser.ie8) {
      $(document.documentElement).addClass("ie8 ie678")
    }
  }
  function v() {
    var S = $(".zul-bar-user-item-user");
    if (!S.length) {
      return
    }
    S.attr("href", "/user=" + g_user.name);
    Menu.add(S, b());
    S.addClass("hassubmenu")
  }
  function b() {
    if (M) {
      return M
    }
    var X = $WH.isset("g_dev") && g_dev && $WH.isset("g_enablessl") && !g_enablessl ? "http://" : "https://";
    var Y = [];
    var W = ["user-page", LANG.userpage, "/user=" + g_user.name, null,
    {
      checkedUrl: new RegExp("user=" + g_user.name + "$", "i")
    }];
    Y.push(W);
    var U = ["settings", LANG.settings, X + window.location.hostname + "/account", null,
    {
      fontIcon: "cog",
      checkedUrl: /account(?!=subscribe)/i
    }];
    Y.push(U);
    if (g_user.premium) {
      var V = ["premium", LANG.subscribe, X + window.location.hostname + "/account=subscribe", null,
      {
        checkedUrl: /account=subscribe/i
      }];
      Y.push(V)
    } else {
      premiumUpgrade = ["premium-upgrade", LANG.subscribe, "/subscribe", null,
      {
        className: "premium-upgrade",
        checkedUrl: /subscribe/i
      }];
      Y.push(premiumUpgrade)
    }
    var T = ["reputation", LANG.reputation, "/reputation"];
    Y.push(T);
    if (!Locale.getId()) {
      var S = ["guides", "My Guides", "/my-guides"];
      Y.push(S)
    }
    k(Y);
    g(Y);
    Y.push(["collection", LANG.menu_mycollection, ":hearthhead.com/collection", null,
    {
      icon: g_staticUrl + "/images/icons/hearthstone-sm.png"
    }]);
    q(Y);
    Y.push(["sign-out", LANG.signout, "/account=signout"]);
    M = Y;
    return Y
  }
  function O() {
    if (!g_user.lists || !g_user.lists.length) {
      return
    }
    var T = [];
    G(T);
    T = T[MENU_IDX_SUB];
    if (!T.length) {
      return
    }
    var S = $WH.ge("zul-bar-user-item-avatar");
    if (!S) {
      return
    }
    Menu.add(S, T)
  }
  function k(T) {
    if (!g_user.lists || !g_user.lists.length) {
      return
    }
    var S = R();
    T.push(S)
  }
  function R() {
    var T = {
      onBeforeShow: G,
      zulGetMobileMenu: e,
      zulHref: function (X, V, W, U) {
        return W ? false : "/user=" + g_user.name
      },
      icon: g_staticUrl + "/images/logos/favicon.png"
    };
    for (var S = 0; S < g_user.lists.length; S++) {
      if (g_user.lists[S].thumbnail) {
        delete T.icon;
        T.armory = "//" + g_user.lists[S].region.toLowerCase() + ".battle.net/static-render/" + g_user.lists[S].region.toLowerCase() + "/" + g_user.lists[S].thumbnail + "?alt=wow/static/images/2d/avatar/" + g_user.lists[S].race + "-" + g_user.lists[S].gender + ".jpg"
      }
    }
    return ["lists", LANG.li_myprofiles, "/user=" + g_user.name + "#lists", null, T]
  }
  function e() {
    return Menu.prepareForZul(I())
  }
  function G(S) {
    S[MENU_IDX_SUB] = I()
  }
  function I() {
    if (!g_user.lists) {
      return null
    }
    var ac = [];
    var V = [],
        S = [],
        W = [],
        Z = [];
    g_user.lists.sort(function (ah, ag) {
      return $WH.strcmp(ah.realm, ag.realm) || $WH.strcmp(ah.name, ag.name)
    });
    var X = false;
    $.each(g_user.lists, function (ag, ah) {
      if (ah.mode == 1) {
        if (ah.pinned > 0) {
          V.push(li_generateListMenuItem(ah, true))
        }
        if (X && (X != ah.realm)) {
          if (S.length) {
            S.unshift([undefined, X])
          }
          S.push([undefined, ah.realm])
        }
        X = ah.realm;
        S.push(li_generateListMenuItem(ah))
      } else {
        Z.push(li_generateListMenuItem(ah))
      }
    });
    var Y = 0,
        T, ab, ae;
    var U = function (ah, ai) {
      var ag = 0 + ai;
      return function (ak) {
        if (ak) {
          return
        }
        for (var aj = 0; aj < ah.length; aj++) {
          if (ah[aj][0] == ag) {
            ah.splice(aj--, 1)
          }
        }
      }
    };
    if (g_user.battlenetChars && g_user.battlenetChars.length) {
      g_user.battlenetChars.sort(function (ah, ag) {
        return $WH.strcmp(ah.region, ag.region) || $WH.strcmp(ah.realm, ag.realm) || $WH.strcmp(ah.name, ag.name)
      });
      X = false;
      for (var af = 0; af < g_user.battlenetChars.length; af++) {
        ab = g_user.battlenetChars[af];
        if (ab.level < 10) {
          continue
        }
        T = g_urlize(ab.region + " " + ab.realm + " " + ab.name, true);
        ae = false;
        for (var ad = 0; ad < g_user.lists.length; ad++) {
          if (g_user.lists[ad].url == T) {
            ae = true;
            break
          }
        }
        if (ae) {
          continue
        }
        if (X && (X != ab.realm)) {
          if (W.length) {
            W.unshift([undefined, X])
          }
          W.push([undefined, ab.realm])
        }
        X = ab.realm;
        Y--;
        W.push([Y, ab.name, g_getRelativeHostPrefix("wowhead.com") + "/list/" + T + "?private", null,
        {
          className: "listmanager-mode1"
        }]);
        $WH.BattleNet.CharacterExists(ab.region, ab.realm, ab.name, U(W, Y))
      }
    }
    var aa = 0;
    if (S.length) {
      aa++
    }
    if (W.length) {
      aa++
    }
    if (Z.length) {
      aa++
    }
    if ((S.length + W.length + Z.length <= 12) || (aa <= 1)) {
      if (S.length) {
        ac.push([undefined, LANG.tab_profiles]);
        ac.push.apply(ac, S)
      }
      if (W.length) {
        ac.push([undefined, LANG.tc_import]);
        ac.push.apply(ac, W)
      }
      if (Z.length) {
        ac.push([undefined, LANG.li_customlists]);
        ac.push.apply(ac, Z)
      }
    } else {
      if (V.length) {
        ac.push([undefined, LANG.zul_pinnedprofiles]);
        ac.push.apply(ac, V);
        ac.push([undefined, LANG.other])
      }
      if (S.length) {
        ac.push([1, LANG.tab_profiles, null, S])
      }
      if (W.length) {
        ac.push([1, LANG.tc_import, null, W])
      }
      if (Z.length) {
        ac.push([1, LANG.li_customlists, null, Z])
      }
    }
    return ac
  }
  function q(S) {
    if (!g_user.decks || !g_user.decks.length) {
      return
    }
    var T = ["decks", LANG.menu_mydecks, "/user=" + g_user.name + "#decks", null,
    {
      onBeforeShow: w,
      zulGetMobileMenu: N,
      zulHref: function (X, V, W, U) {
        return W ? false : "/user=" + g_user.name + "#decks"
      },
      icon: g_staticUrl + "/images/icons/hearthstone-sm.png"
    }];
    S.push(T)
  }
  function N() {
    return Menu.prepareForZul(C())
  }
  function w(S) {
    S[MENU_IDX_SUB] = C()
  }
  function C() {
    var S = [];
    g_user.decks.sort(function (U, T) {
      return $WH.strcmp(U.name, T.name)
    });
    $.each(g_user.decks, function (T, U) {
      S.push([U.id, U.name, g_getRelativeHostPrefix("hearthhead.com") + "/deck=" + U.id + "/" + U.url, null,
      {
        className: U.classs ? "c" + U.classs : "q0",
        tinyIcon: U.classs ? "class_" + g_file_classes[U.classs] : null,
        np: true
      }])
    });
    return S
  }
  function g(T) {
    if (!g_user.bagscans || !g_user.bagscans.length) {
      return
    }
    var S = ["bagscans", LANG.menu_mybagscans, "/bagscanner", null,
    {
      onBeforeShow: t,
      zulGetMobileMenu: J,
      zulHref: function (X, V, W, U) {
        return W ? false : "/bagscanner"
      },
      icon: g_staticUrl + "/images/logos/favicon.png"
    }];
    T.push(S)
  }
  function J() {
    return Menu.prepareForZul(L())
  }
  function t(S) {
    S[MENU_IDX_SUB] = L()
  }
  function L() {
    var U = [
      [0, LANG.menu_mybagscans, "/bagscanner", null,
      {
        hide: true,
        zulCondition: function (Y, W, X) {
          return X
        }
      }]
    ];
    var T = 15;
    var V = [];
    if (g_user.bagscans.length > T) {
      g_user.bagscans.sort(function (X, W) {
        return $WH.strcmp(W.when, X.when)
      })
    }
    for (var S = 0; S < T && S < g_user.bagscans.length; S++) {
      V.push(g_user.bagscans[S])
    }
    V.sort(function (X, W) {
      return $WH.strcmp(X.name, W.name)
    });
    $.each(V, function (W, X) {
      U.push([X.id, X.name, g_getRelativeHostPrefix("wowhead.com") + "/bagscanner=" + X.id])
    });
    return U
  }
  function K() {
    var T = "http://";
    var W = location.pathname + location.search + location.hash;
    var S = Locale.getId();
    var V = [];
    var U;
    $.each(Locale.getAllByName(), function (X, Z) {
      var Y = [Z.id, Z.description, T + Z.domain + W];
      if (Z.id == S) {
        Y.checked = true;
        U = Z
      }
      V.push(Y)
    });
    c($(".zul-bar-user-item-locale"), V, U);
    $(document).ready(function () {
      c($("#footer-links-language"), V, U)
    })
  }
  function c(S, U, T) {
    S.attr("href", "javascript:;");
    S.text(T.description);
    S.addClass("hassubmenu");
    Menu.add(S, U)
  }
  function n() {
    $("#header-expandsite").attr("href", "javascript:;").click(H);
    $(".beta-ptr-links a[title]").each(function () {
      $WH.Tooltip.simple(this, this.title, "q2");
      this.title = ""
    })
  }
  function Q() {
    if (!j.is(":empty") && !{
      blog: 1
    }[r.pageName]) {
      var S = location.href.split("/");
      if (S.length) {
        S = S[3].replace(/^\?(.*)/, "$1").split(/[\?&#=]/);
        if (S.length && S[0] == "news") {
          return
        }
      }
      $("<div/>", {
        "class": "pw-widget pw-counter-none header-share-button",
        "pw:copypaste": "false"
      }).append($("<a/>", {
        "class": "pw-button-facebook pw-look-native",
        rel: "np"
      })).append($("<a/>", {
        "class": "pw-button-reddit pw-look-native",
        rel: "np"
      })).append($("<a/>", {
        "class": "pw-button-post-share",
        rel: "np"
      })).prependTo($("#main-precontents"));
      window.shareBoxTimer = null;
      var T = function () {
        $(".ra1-pw-popup").css({
          display: "none"
        })
      };
      setTimeout(function () {
        if (Platform.isTouch()) {
          return
        }
        $(".pw-button-post-share").mouseover(function () {
          clearTimeout(window.shareBoxTimer);
          setTimeout(function () {
            var U = $(".ra1-pw-popup");
            if (U.data("closer-attached") == true) {
              return
            }
            U.mouseover(function () {
              clearTimeout(window.shareBoxTimer)
            }).mouseout(function () {
              window.shareBoxTimer = setTimeout(T, 333)
            }).data("closer-attached", true)
          }, 50)
        }).mouseout(function () {
          window.shareBoxTimer = setTimeout(T, 333)
        })
      }, 500)
    }
  }
  function u() {
    var T = $("#toptabs");
    if (!T.length) {
      return
    }
    p = $("<dl/>");
    var S = '<span class="fa fa-chevron-down"></span>';
    $.each(Menu.getMenu(), function (U, W) {
      if (W[MENU_IDX_OPT] && (W[MENU_IDX_OPT].breadcrumbOnly || W[MENU_IDX_OPT].hide)) {
        return
      }
      var V = "";
      switch (W[MENU_IDX_NAME]) {
      case "Wowhead":
        V = '<img src="' + g_staticUrl + '/images/logos/favicon.png" style="padding-right: 2px; margin-bottom: -3px">';
        break;
      case "Hearthhead":
        break
      }
      var X = $('<dt><a data-id="' + W[MENU_IDX_ID] + '">' + V + W[MENU_IDX_NAME] + S + "</a></dt>");
      var Y = X.children("a");
      Menu.linkifyItem(W, Y);
      Y.data("menuItem", W);
      X.appendTo(p)
    });
    s();
    p.prependTo(T)
  }
  function o() {
    var W = $("div.topbar-search");
    if (W.length) {
      var S = $('input[type="text"]', W);
      var V = $("body");
      if (V.hasClass("home")) {
        g_safeFocus(S)
      }
      if ($WH.localStorage.get("showRandomWidget") == "true") {
        $WH.localStorage.remove("showRandomWidget");
        var U = $WH.ce("a");
        U.className = "topbar-random fa fa-random";
        U.href = "/random";
        $WH.Tooltip.simple(U, LANG.anotherrandompage_tip, "q2");
        W.append(U)
      }
      var T;
      if ($WH.isset("g_thottbot") && g_thottbot) {
        T = $("<button>&gt;</button>")
      } else {
        T = $("<a/>", {
          "class": "topbar-search-button fa fa-search",
          href: "javascript:;"
        })
      }
      T.click(B).appendTo(W);
      $("form", W).submit(g_preventEmptyFormSubmission);
      LiveSearch.attach(S);
      if (Array.prototype.indexOf && !r.noSearchBoxGrab) {
        V.keydown((function (X, Y) {
          if (!Y.ctrlKey && !Y.metaKey && !Y.altKey && $WH.g_keyPressIsAlphaNumeric(Y) && ["INPUT", "SELECT", "TEXTAREA"].indexOf(document.activeElement.tagName) == -1) {
            if (X.offset().top >= (window.scrollY || window.pageYOffset)) {
              X.focus()
            }
          }
        }).bind(null, S))
      }
    }
  }
  function y() {
    P();
    j.appendTo($("#main-precontents"))
  }
  function s() {
    if (!p) {
      return
    }
    $.each(Menu.getMenu(), function (S, U) {
      var V = $('a[data-id="' + U[MENU_IDX_ID] + '"]', p);
      var T = (U[MENU_IDX_ID] == r.activeTab);
      if (T) {
        if (Platform.isTouch()) {
          V.addClass("active-touch");
          if (U[MENU_IDX_SUB]) {
            Menu.addTouch(V, U[MENU_IDX_SUB])
          }
        } else {
          V.addClass("active");
          Menu.add(V, U[MENU_IDX_SUB])
        }
      } else {
        V.removeClass("active-touch").removeClass("active");
        if (U[MENU_IDX_SUB]) {
          if (Platform.isTouch()) {
            Menu.addTouch(V, U[MENU_IDX_SUB])
          } else {
            Menu.add(V, U[MENU_IDX_SUB])
          }
        }
      }
    })
  }
  function h() {
    return;
    if (Platform.isTouch()) {
      return
    }
    var W = $("#topbar div.topbar-buttons");
    if (!W.length) {
      return
    }
    W.empty();
    switch (r.activeTab) {
    case 0:
      if ($WH.g_isHearthhead()) {
        Menu.addButtons(W, [
          [0, LANG.menu_browse, null, mn_hearthstone_database], Menu.findItem(mn_hearthhead_tools, [8]), Menu.findItem(mn_hearthhead_tools, [8, 4])])
      } else {
        Menu.addButtons(W, [
          [0, LANG.menu_browse, null, mn_database], Menu.findItem(mn_tools, [8]), Menu.findItem(mn_tools, [8, 4])])
      }
      break;
    case 1:
      if ($WH.g_isHearthhead()) {
        Menu.addButtons(W, mn_hearthstone_tools);
        Menu.addButtons(W, mn_hearthstone_goodies);
        Menu.addButtons(W, Menu.implode(mn_hearthhead_tools_other))
      } else {
        var U = [
          [, LANG.calculators], Menu.findItem(mn_tools, [0]), Menu.findItem(mn_tools, [14]), Menu.findItem(mn_tools, [21]), Menu.findItem(mn_tools, [3]), Menu.findItem(mn_tools, [18]), Menu.findItem(mn_tools, [11])];
        if (Menu.findItem(mn_tools, [2])) {
          U.splice(3, 0, Menu.findItem(mn_tools, [2]))
        }
        var Z = [
          [, Menu.findItem(mn_tools, [1])[1]], Menu.findItem(mn_tools, [1]), Menu.findItem(mn_tools, [20])];
        var S = Menu.findItem(mn_tools, [5]);
        var ac = [
          [, S[1]]
        ].concat(S[3]).concat([Menu.findItem(mn_tools, [21])]);
        var V = [];
        var X = [U, Z, ac];
        var ad = false;
        for (var ab = 0; ab < mn_tools.length; ab++) {
          ad = (typeof mn_tools[ab][0] == "undefined");
          if (ad) {
            V.push(mn_tools[ab]);
            continue
          }
          if (mn_tools[ab][0] == 5) {
            continue
          }
          for (var Y = 0; !ad && Y < X.length; Y++) {
            for (var aa = 1; !ad && aa < X[Y].length; aa++) {
              ad = (X[Y][aa][0] == mn_tools[ab][0])
            }
          }
          if (!ad) {
            V.push(mn_tools[ab])
          }
        }
        Menu.addButtons(W, Menu.implode(U));
        Menu.addButtons(W, Menu.implode(Z));
        Menu.addButtons(W, Menu.implode(ac));
        Menu.addButtons(W, Menu.implode(V))
      }
      break;
    case 2:
      if ($WH.g_isHearthhead()) {
        Menu.addButtons(W, Menu.implode(mn_hearthhead_more))
      } else {
        Menu.addButtons(W, Menu.implode(mn_more))
      }
      break;
    case 3:
      Menu.addButtons(W, Menu.implode($WH.g_isHearthhead() ? mn_hearthhead_community : mn_wowhead_community));
      Menu.addButtons(W, [Menu.findItem(mn_tools, [8])]);
      break;
    case 4:
      Menu.addButtons(W, Menu.implode(mn_staff));
      break;
    case 5:
      if ($WH.g_isHearthhead()) {
        Menu.addButtons(W, Menu.implode(mn_hearthhead_news))
      } else {
        Menu.addButtons(W, Menu.implode(mn_news))
      }
      break;
    case 6:
      var T = [
        [1, "List of guides", "/guides"],
        [2, "Write new guide", "/guide=new"]
      ];
      if (g_user.id) {
        T.push([3, "My guides", "/my-guides"])
      }
      Menu.addButtons(W, T);
      break;
    case 7:
      var T = [
        [3, LANG.menu_hearthstonecards, ":hearthhead.com/cards", mn_hearthstone_cards],
        [4, LANG.mechanics, ":hearthhead.com/mechanics", mn_hearthstone_mechanics],
        [2, LANG.menu_deckbuilder, ":hearthhead.com/deckbuilder", mn_hearthstone_deckbuilder],
        [1, LANG.menu_tooltips, ":hearthhead.com/tooltips"]
      ];
      Menu.addButtons(W, T);
      break;
    case 9:
      Menu.addButtons(W, Menu.implode(mn_hearthhead_decks));
      break
    }
  }
  function P() {
    if (!r.breadcrumb || !r.breadcrumb.length) {
      j.detach();
      setTimeout(function () {
        if (j.is(":empty")) {
          j.detach()
        }
      }, 0);
      return
    }
    j.empty();
    j.appendTo("#main-precontents");
    if (f.length) {
      $.each(f, function () {
        this.checked = false;
        Menu.updateItem(this)
      });
      f = []
    }
    var S = Menu.getFullPath(Menu.getMenu(), r.breadcrumb);
    if (!S.length) {
      return
    }
    if (S[0][0] == 7) {
      j.addClass("breadcrumb-hearthstone")
    } else {
      j.removeClass("breadcrumb-hearthstone")
    }
    var T = (S.length - 1);
    $.each(S, function (U, Y) {
      var X = Menu.getItemOpt(Y);
      Y.checked = true;
      f.push(Y);
      Menu.updateItem(Y);
      var W = E();
      var V = W;
      if (Y[MENU_IDX_URL]) {
        V = $("<a/>", {
          href: Menu.getItemUrl(Y),
          rel: "np"
        }).appendTo(W)
      }
      if (X.breadcrumb) {
        V.text(X.breadcrumb.trim())
      } else {
        V.text(Y[MENU_IDX_NAME].trim())
      }
      Menu.add(V, Y.parentMenu);
      W.appendTo(j);
      if (U == T && Y[MENU_IDX_SUB]) {
        W.addClass("breadcrumb-arrow");
        var Z = $('<span class="breadcrumb-ellipsis">...</span>');
        Menu.add(Z, Y[MENU_IDX_SUB]);
        Z.appendTo(j)
      }
    });
    j.trigger("update");
    j.show();
    ZUL.regenerateMenu(false, true)
  }
  function E() {
    if ($WH.isset("g_thottbot") && g_thottbot) {
      j.children("span:last").append(" &gt; ")
    } else {
      j.children("span:last").addClass("breadcrumb-arrow")
    }
    return $("<span/>").appendTo(j)
  }
  function H() {
    var S = $(".news-right .block-bg");
    if (S.length) {
      S = S.parent();
      setTimeout((function (T) {
        T.remove()
      }).bind(null, S), 0)
    }
    WAS.removeAll();
    $("#sidebar, #header-expandsite").remove();
    if ($("#layout").hasClass("nosidebar")) {
      return
    }
    $("#wrapper").animate({
      "margin-right": "10px"
    }, 333, null, function () {
      $("#wrapper").css("margin-right", "0px");
      $("#layout").addClass("nosidebar");
      if (typeof SearchSupport != "undefined") {
        if ($(".graphical-guide-links").length) {
          SearchSupport.updateTopResultsWidth();
          SearchSupport.checkGuidesSize()
        } else {
          SearchSupport.updateTopResultsWidth(true)
        }
      }
    })
  }
  function B() {
    var S = $(this).siblings("form").submit().children("input");
    g_safeFocus(S)
  }
  z()
};

function g_convertRawItemDataForPaperdoll(c) {
  var e = {};
  e.slotId = c[0];
  e.itemId = c[1];
  e.transmogId = c[9];
  e.hidden = c[10];
  e.rawBonuses = c.slice(11, 17);
  e.bonuses = [];
  for (var b in e.rawBonuses) {
    if (e.rawBonuses.hasOwnProperty(b) && e.rawBonuses[b]) {
      e.bonuses.push(e.rawBonuses[b])
    }
  }
  return e
}
function g_convertPaperdollItemDataToRaw(e) {
  var b = [];
  for (var c = 0; c < 17; c++) {
    b[c] = 0
  }
  b[0] = e.slotId;
  b[1] = e.itemId;
  b[9] = e.transmogId ? e.transmogId : 0;
  b[10] = e.hidden ? e.hidden : 0;
  b[11] = e.itemBonus ? e.itemBonus : 0;
  return b
}
var Platform = new
function () {
  this.known = false;
  this.initialized = false;
  this.initSteps = {};
  var k = "user-specified-platform";
  var b = false;
  var f = false;
  var c = false;
  var h = navigator.userAgent || navigator.vendor || window.opera;
  if ($WH.g_isThottbot()) {} else {
    if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(h) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(h.substr(0, 4))) {
      b = true
    }
    if (!b) {
      if (/(android|ipad|playbook|silk)/i.test(h)) {
        f = true
      }
    }
    var l = $WH.localStorage.get(k);
    if (l) {
      switch (l) {
      case "mobile":
        if (!b) {
          c = true;
          b = true;
          f = false
        }
        break;
      case "tablet":
        if (!f) {
          c = true;
          b = false;
          f = true
        }
        break;
      default:
        if (b || f) {
          c = true;
          b = false;
          f = false
        }
      }
    }
  }
  var p = $WH.g_getGets();
  if (typeof p.testmobile != "undefined" && !b) {
    c = true;
    b = true
  }
  if (typeof p.testtablet != "undefined" && !f) {
    c = true;
    f = true
  }
  this.known = true;
  this.preInit1 = function () {
    if (Platform.initSteps["1"]) {
      return
    }
    $("html").addClass(Platform.get() + "-device" + (c ? " forced-device" : ""));
    if (Platform.isTouch()) {
      o()
    }
    q();
    Platform.initSteps["1"] = true
  };
  this.preInit2 = function () {
    if (Platform.initSteps["2"]) {
      return
    }
    if (Platform.isTouch()) {
      m()
    }
    Platform.initSteps["2"] = true
  };
  this.init = function () {
    if (Platform.initSteps["3"] || Platform.initialized) {
      return
    }
    if (Platform.isTouch()) {
      j()
    }
    Platform.initSteps["3"] = true;
    Platform.initialized = true
  };
  this.isMobile = function () {
    return b
  };
  this.isTablet = function () {
    return f
  };
  this.isTouch = function () {
    return this.isMobile() || this.isTablet()
  };
  this.get = function () {
    if (this.isMobile()) {
      return "mobile"
    }
    if (this.isTablet()) {
      return "tablet"
    }
    return "pointer"
  };
  this.set = function (s) {
    if (!$WH.localStorage.isSupported()) {
      alert(LANG.platform_layoutchoicelserror);
      return
    }
    switch (s) {
    case "mobile":
    case "tablet":
    case "pointer":
      e(s);
      break;
    case "auto":
      r();
      break;
    default:
      if (typeof console != "undefined" && console.error) {
        console.error("Attempted to set platform to invalid value:", s)
      }
    }
  };
  this.getViewportSize = function () {
    var t = window;
    var s = "inner";
    if (!("innerWidth" in window)) {
      s = "client";
      t = document.documentElement || document.body
    }
    return {
      width: t[s + "Width"],
      height: t[s + "Height"]
    }
  };

  function e(s) {
    $WH.localStorage.set(k, s);
    g()
  }
  function r() {
    $WH.localStorage.remove(k);
    g()
  }
  function g() {
    location.reload()
  }
  function q() {
    $("head meta[name=viewport]").remove();
    var u = Platform.get();
    var t = $("head");
    var s = "initial-scale=1";
    if (c) {
      switch (u) {
      case "mobile":
        s = "width=" + 414;
        break;
      case "tablet":
        s = "width=" + 768;
        break;
      case "pointer":
        s = "width=" + 996
      }
    }
    if (u == "mobile") {
      s += ", user-scalable=no"
    }
    if (!(u == "pointer" && !c)) {
      t.append('<meta name="viewport" content="' + s + '">')
    }
  }
  function o() {
    $("html").addClass("touch-device")
  }
  function m() {
    Platform.preInit1();
    $("#layout").addClass("nosidebar");
    $("#sidebar").remove();
    $("#header-expandsite").remove()
  }
  function j() {
    Platform.preInit1();
    Platform.preInit2();
    if (Platform.isMobile()) {
      if (document.body.className && document.body.className.match(/ +home\b/)) {
        $("#block-today-in-draenor").insertBefore(".news-left > .row-news")
      }
      $(".news-right").remove()
    }
    var s = $WH.ge("infobox-alternate");
    if (s) {
      var u = $(".infobox");
      var t = u.closest(".interior-sidebar");
      if (t.length) {
        if ((Platform.getViewportSize()).width > 767) {
          return
        }
        t.appendTo(s)
      } else {
        u.appendTo(s)
      }
      if (Platform.isTablet()) {
        n(u, {
          rows: 2
        })
      }
    }
  }
  function n(t, w) {
    if (!w) {
      w = {}
    }
    if (!w.rows) {
      w.rows = 1
    }
    t = t.first();
    var y = [];
    $("table", t).each(function () {
      var z = this.parentNode;
      var A = $(this);
      A.detach();
      y.push([z, A])
    });
    var s = $("tr", t);
    var v;
    while (s.length > w.rows) {
      for (u = 0; u < w.rows; u++) {
        v = w.rows;
        $(s[u]).append($("th, td", s[v]));
        $(s[v]).remove();
        s.splice(v, 1)
      }
    }
    for (var u in y) {
      if (y.hasOwnProperty(u)) {
        y[u][1].appendTo(y[u][0])
      }
    }
  }
};
$(document).ready(Platform.init);

function g_getViewport() {
  var b = $(window);
  return new Rectangle(b.scrollLeft(), b.scrollTop(), b.width(), b.height())
}
var PoundChecker = new
function () {
  var c = null;
  var f = null;
  var e = 1000;
  var b = function () {
    if (!f) {
      PoundChecker.stop();
      return
    }
    if (location.hash) {
      f()
    }
  };
  this.start = function (g, h) {
    if (f) {
      if ($WH.isset("g_dev")) {
        alert("Multiple pound checkers are bad, mmkay?")
      }
      return
    }
    f = g;
    if (h) {
      e = h
    }
    c = setInterval(b, e)
  };
  this.stop = function () {
    clearInterval(c);
    c = f = null;
    e = 1000
  };
  this.pause = function () {
    clearInterval(c)
  };
  this.resume = function () {
    if (f) {
      c = setInterval(f, e)
    }
  }
};
var ProgressBar = function (b) {
  this.opts = {
    text: "",
    hoverText: "",
    color: "rep6",
    width: 0,
    progress: 0
  };
  this.elements = {
    text: null,
    hoverText: null,
    textContainer: null,
    progress: null,
    container: null
  };
  $WH.cO(this.opts, b);
  this.build()
};
ProgressBar.prototype.build = function () {
  var c = $("<a/>", {
    "class": "progressbar",
    href: "javascript:;"
  });
  if (this.opts.width > 0) {
    c.css("width", this.opts.width + "px")
  } else {
    c.css("width", "auto")
  }
  var b = $("<div/>", {
    "class": "progressbar-text"
  });
  if (this.opts.text) {
    this.elements.text = $("<del/>", {
      text: this.opts.text
    });
    b.append(this.elements.text)
  }
  if (this.opts.hoverText) {
    this.elements.hoverText = $("<ins/>", {
      text: this.opts.hoverText
    });
    b.append(this.elements.hoverText)
  }
  c.append(b);
  var e = $("<div/>", {
    "class": "progressbar-" + this.opts.color,
    css: {
      width: this.opts.progress + "%"
    },
    text: String.fromCharCode(160)
  });
  c.append(e);
  if (this.opts.text) {
    b.append($("<div/>", {
      "class": "progressbar-text progressbar-hidden",
      text: this.opts.text
    }))
  }
  this.elements.container = c;
  this.elements.progress = e;
  this.elements.textContainer = b;
  return c
};
ProgressBar.prototype.setText = function (b) {
  this.opts.text = b;
  if (this.elements.text) {
    this.elements.text.text(this.opts.text)
  } else {
    this.elements.text = $("<del/>", {
      text: this.opts.text
    });
    if (this.opts.hoverText) {
      this.opts.hoverText.before(this.elements.text)
    } else {
      this.elements.textContainer.append(this.elements.text)
    }
  }
};
ProgressBar.prototype.setHoverText = function (b) {
  this.opts.hoverText = b;
  if (this.elements.hoverText) {
    this.elements.hoverText.text(this.opts.hoverText)
  } else {
    this.elements.hoverText = $("<ins/>", {
      text: this.opts.hoverText
    });
    this.elements.textContainer.append(this.elements.hoverText)
  }
};
ProgressBar.prototype.setProgress = function (b) {
  this.opts.progress = b;
  this.elements.progress.css("width", this.opts.progress + "%")
};
ProgressBar.prototype.setWidth = function (b) {
  this.opts.width = b;
  if (this.opts.width > 0) {
    this.elements.container.css("width", this.opts.width + "px")
  } else {
    this.elements.container.css("width", "auto")
  }
};
ProgressBar.prototype.getText = function () {
  return this.opts.text
};
ProgressBar.prototype.getHoverText = function () {
  return this.opts.hoverText
};
ProgressBar.prototype.getWidth = function () {
  return this.opts.width
};
ProgressBar.prototype.getContainer = function () {
  return this.elements.container
};

function Rectangle(f, e, b, c) {
  this.l = f;
  this.t = e;
  this.r = f + b;
  this.b = e + c
}
Rectangle.prototype = {
  intersectWith: function (b) {
    var c = !(this.l >= b.r || b.l >= this.r || this.t >= b.b || b.t >= this.b);
    return c
  },
  contains: function (b) {
    var c = (this.l <= b.l && this.t <= b.t && this.r >= b.r && this.b >= b.b);
    return c
  },
  containedIn: function (b) {
    return b.contains(this)
  }
};

function ss_submitAScreenshot() {
  tabsContribute.focus(1)
}
function ss_validateForm(b) {
  if (!b.elements.screenshotfile.value.length) {
    alert(LANG.message_noscreenshot);
    return false
  }
  return true
}
function ss_appendSticky() {
  var l = $WH.ge("infobox-sticky-ss");
  if (!l) {
    return
  }
  var h = g_pageInfo.type;
  var g = g_pageInfo.typeId;
  var j = $WH.in_array(lv_screenshots, 1, function (n) {
    return n.sticky
  });
  if (j != -1) {
    var b = lv_screenshots[j];
    var k = $WH.ce("a");
    k.href = "#screenshots:id=" + b.id;
    k.onclick = function (n) {
      ScreenshotViewer.show({
        screenshots: lv_screenshots,
        pos: j
      });
      return $WH.rf2(n)
    };
    var m = (lv_videos && lv_videos.length ? [120, 90] : [150, 150]);
    var f = $WH.ce("img"),
        e = Math.min(m[0] / b.width, m[1] / b.height);
    f.src = g_staticUrl + "/uploads/screenshots/thumb/" + b.id + ".jpg";
    f.width = Math.round(e * b.width);
    f.height = Math.round(e * b.height);
    f.className = "border";
    $WH.ae(k, f);
    $WH.ae(l, k);
    var c = $("#infobox-screenshots");
    if (!c) {
      c = $("th", $(l).parents().prev("tr"))
    }
    c.append(" (" + lv_screenshots.length + ")").wrapInner($('<a href="#screenshots"></a>').click(function () {
      tabsRelated.focus(tabsRelated.getTabById("screenshots"));
      return false
    }))
  } else {
    var k;
    if (g_user.id > 0) {
      k = '<a href="javascript:;" onclick="ss_submitAScreenshot(); return false">'
    } else {
      k = '<a href="/account=signin">'
    }
    l.innerHTML = $WH.sprintf(LANG.infobox_noneyet, k + LANG.infobox_submitone + "</a>")
  }
  ss_appendSticky = function () {}
}
var g_screenshots = {};
var ScreenshotViewer = new
function () {
  var J, q, f, g, G, M, c, w, z = 0,
      C, b, v, o, y, E, F, l, D, p, s, I, u = "screenshots";

  function k(N) {
    var Q = J[q];
    if (!Q) {
      Q = {
        height: 270,
        width: 300
      }
    }
    var O = Math.max(50, Math.min(618, $WH.g_getWindowSize().h - 72 - N));
    if (z != 1 || Q.id || Q.resize) {
      c = Math.min(772 / Q.width, 618 / Q.height);
      M = Math.min(772 / Q.width, O / Q.height)
    } else {
      c = M = 1
    }
    if (c > 1) {
      c = 1
    }
    if (M > 1) {
      M = 1
    }
    g = Math.round(M * Q.width);
    G = Math.round(M * Q.height);
    var P = Math.max(480, g);
    Lightbox.setSize(P + 20, G + 52 + N);
    if (N) {
      o.firstChild.width = g;
      o.firstChild.height = G
    }
  }
  function e(P) {
    var O = J[P],
        N = "#" + u;
    if (z == 0) {
      N += (O ? ":id=" + O.id : "")
    } else {
      N += ":" + C + ":" + (O ? P + 1 : P + 0.5)
    }
    return N
  }
  function B(Q) {
    if (Q && (M == c) && $WH.g_getWindowSize().h > b.offsetHeight) {
      return
    }
    b.style.visibility = "hidden";
    var N = J[q];
    if (!N) {
      N = {
        ad: true,
        height: 270,
        width: 300
      }
    }
    var T = (N.width > 772 || N.height > 618);
    k(0);
    var P = (N.url ? N.url : g_staticUrl + "/uploads/screenshots/" + (T ? "resized/" : "normal/") + N.id + ".jpg");
    var U = "";
    if (N.ad) {
      U = '<div class="screenshot-block"><div id="screenshot-block-target"></div><div class="screenshot-block-caption">' + LANG.advertisement + "</div></div>";
      setTimeout(function () {
        WAS.create("medrec", "screenshot-block-target")
      }, 0)
    } else {
      U = '<img src="' + P + '" width="' + g + '" height="' + G + '">'
    }
    o.innerHTML = U;
    if (!Q) {
      g_trackEvent("Screenshots", "Show", N.id + ((N.caption && N.caption.length) ? " (" + N.caption + ")" : ""));
      if (N.ad) {
        l.href = "javascript:;";
        l.style.display = "none"
      } else {
        if (N.url) {
          l.href = P;
          l.style.display = "block"
        } else {
          l.href = g_staticUrl + "/uploads/screenshots/normal/" + N.id + ".jpg";
          l.style.display = "block"
        }
      }
      if (!N.user && typeof g_pageInfo == "object") {
        N.user = g_pageInfo.username
      }
      var W = (N.date && N.user),
          V = (J.length > 1);
      if (W) {
        var S = new Date(N.date),
            Y = (g_serverTime - S) / 1000;
        var X = D.firstChild.childNodes[1];
        X.href = "/user=" + N.user;
        X.innerHTML = N.user;
        var aa = D.firstChild.childNodes[3];
        $WH.ee(aa);
        g_formatDate(aa, Y, S);
        D.firstChild.style.display = ""
      } else {
        D.firstChild.style.display = "none"
      }
      var aa = D.childNodes[1];
      $WH.ee(aa);
      if (N.user) {
        if (W) {
          $WH.ae(aa, $WH.ct(" " + LANG.dash + " "))
        }
        var X = $WH.ce("a");
        X.href = "javascript:;";
        X.onclick = ContactTool.show.bind(ContactTool, {
          mode: 3,
          screenshot: N
        });
        X.className = "icon-report";
        g_addTooltip(X, LANG.report_tooltip, "q2");
        $WH.ae(X, $WH.ct(LANG.report));
        $WH.ae(aa, X)
      }
      aa = D.childNodes[2];
      if (V) {
        var Z = "";
        if (N.user) {
          Z = LANG.dash
        }
        if (q % 1 != 0) {
          Z += $WH.sprintf(LANG.dialog_adbetweenimages, q + 0.5, q + 1.5, J.length)
        } else {
          Z += (q + 1) + LANG.lvpage_of + J.length
        }
        aa.innerHTML = Z;
        aa.style.display = ""
      } else {
        aa.style.display = "none"
      }
      D.style.display = (W || V ? "" : "none");
      if (Locale.getId() != LOCALE_ENUS && N.caption) {
        N.caption = ""
      }
      var O = (N.caption != null && N.caption.length);
      var R = (N.subject != null && N.subject.length && N.type && N.typeId);
      if (O || R) {
        U = "";
        if (R) {
          U += LANG.types[N.type][0] + LANG.colon;
          U += '<a href="/' + g_types[N.type] + "=" + N.typeId + '">';
          U += N.subject;
          U += "</a>"
        }
        if (O) {
          if (R) {
            U += LANG.dash
          }
          U += (N.noMarkup ? N.caption : Markup.toHtml(N.caption, {
            mode: Markup.MODE_SIGNATURE
          }))
        }
        p.innerHTML = U;
        p.style.display = ""
      } else {
        p.style.display = "none"
      }
      if (J.length > 1) {
        E.href = e(A(-1));
        F.href = e(A(1));
        E.style.display = F.style.display = ""
      } else {
        E.style.display = F.style.display = "none"
      }
      if (q != f || Platform.isTouch()) {
        y.style.display = "none"
      }
      location.replace(e(q))
    }
    Lightbox.reveal();
    if (p.offsetHeight > 18) {
      k(p.offsetHeight - 18)
    }
    b.style.visibility = "visible"
  }
  function A(N) {
    var O = q;
    O += N;
    if (O < 0) {
      O = J.length - 1
    } else {
      if (O >= J.length) {
        O = 0
      }
    }
    return O
  }
  function h(O) {
    console.log("logging", O);
    if (typeof OX == "undefined") {
      return
    }
    if (!window.ox_instances) {
      window.ox_instances = {}
    }
    var N = window.ox_instances;
    N[O] = OX({
      auid: O
    });
    N[O].load()
  }
  function H(O) {
    var N = q + O;
    if (typeof WAS != "undefined" && WAS.showAds() && false) {
      if (q % 1 != 0) {
        O = O / 2
      } else {
        if (N != f && N + 1 != f && ((O > 0 && (100 + N - f) % 5 == 0) || (O < 0 && (100 + N - f + 1) % 5 == 0))) {
          O = O / 2
        }
      }
      if (q % 1 == 0 && N != f && N + 1 != f && ((O > 0 && (100 + N - f) % 4 == 0) || (O < 0 && (100 + N - f + 1) % 4 == 0))) {
        h("537180962")
      }
    }
    q = A(O);
    n();
    return false
  }
  function t(N) {
    N = $WH.$E(N);
    switch (N.keyCode) {
    case 37:
      H(-1);
      break;
    case 39:
      H(1);
      break
    }
  }
  function j() {
    B(1)
  }
  function r() {
    L();
    if (J.length > 1) {
      $WH.dE(document, "keyup", t)
    }
    if (w && z == 0) {
      if (w.indexOf(":id=") != -1) {
        w = "#" + u
      }
      $WH.g_setHash(w)
    } else {
      $WH.g_clearHash()
    }
  }
  function K(T, S, P) {
    if (typeof P.screenshots == "string") {
      J = g_screenshots[P.screenshots];
      z = 1;
      C = P.screenshots
    } else {
      J = P.screenshots;
      z = 0;
      C = null
    }
    b = T;
    q = 0;
    if (P.pos && P.pos >= 0 && P.pos < J.length) {
      q = P.pos
    }
    f = q;
    if (S) {
      T.className += " has-lightbox-caption screenshotviewer";
      v = $WH.ce("div");
      v.className = "lightbox-content screenshotviewer-screen";
      y = $WH.ce("div");
      y.className = "screenshotviewer-keystip";
      y.innerHTML = LANG.dialog_ssviewerkeys;
      $WH.ae(T, y);
      var V = $WH.ce("div");
      var N = $WH.ce("div");
      V.className = "screenshotviewer-page-wrapper screenshotviewer-prev-wrapper";
      N.className = "screenshotviewer-page-wrapper screenshotviewer-next-wrapper";
      E = $WH.ce("a");
      F = $WH.ce("a");
      E.className = "screenshotviewer-prev";
      F.className = "screenshotviewer-next";
      E.href = "javascript:;";
      F.href = "javascript:;";
      var R = $WH.ce("span");
      R.className = "fa fa-chevron-left";
      $WH.ae(E, R);
      R = $WH.ce("span");
      R.className = "fa fa-chevron-right";
      $WH.ae(F, R);
      $WH.aE(E, "click", H.bind(E, -1));
      $WH.aE(E, "tap", H.bind(E, -1));
      $WH.aE(F, "click", H.bind(F, 1));
      $WH.aE(F, "tap", H.bind(F, 1));
      $WH.ae(V, E);
      $WH.ae(N, F);
      $WH.ae(v, V);
      $WH.ae(v, N);
      o = $WH.ce("div", {
        className: "screenshotviewer-image"
      });
      $WH.ae(v, o);
      $WH.ae(T, v);
      var Q = $WH.ce("a");
      Q.className = "dialog-x fa fa-times";
      Q.href = "javascript:;";
      Q.onclick = Lightbox.hide;
      $WH.ae(Q, $WH.ct(LANG.close));
      $WH.ae(T, Q);
      l = $WH.ce("a");
      l.className = "dialog-arrow fa fa-external-link";
      l.href = "javascript:;";
      l.target = "_blank";
      $WH.ae(l, $WH.ct(LANG.original));
      $WH.ae(T, l);
      var U = $WH.ce("div", {
        className: "lightbox-caption"
      });
      D = $WH.ce("div");
      D.className = "screenshotviewer-from";
      var O = $WH.ce("span");
      $WH.ae(O, $WH.ct(LANG.lvscreenshot_from));
      $WH.ae(O, $WH.ce("a"));
      $WH.ae(O, $WH.ct(" "));
      $WH.ae(O, $WH.ce("span"));
      $WH.ae(D, O);
      $WH.ae(D, $WH.ce("span"));
      $WH.ae(D, $WH.ce("span"));
      $WH.ae(U, D);
      p = $WH.ce("div");
      p.className = "screenshotviewer-caption";
      $WH.ae(U, p);
      $WH.ae(T, U)
    }
    w = location.hash;
    if (J.length > 1) {
      $WH.aE(document, "keyup", t)
    }
    n()
  }
  function n() {
    var O = J[q];
    if (O && (!O.width || !O.height)) {
      if (s) {
        s.onload = null;
        s.onerror = null
      } else {
        b.className = "";
        I = [];
        while (b.firstChild) {
          I.push(b.firstChild);
          $WH.de(b.firstChild)
        }
      }
      var N = setTimeout(function () {
        O.width = 126;
        O.height = 22;
        k(0);
        O.width = null;
        O.height = null;
        var Q = $WH.ce("div");
        Q.style.margin = "0 auto";
        Q.style.width = "126px";
        var P = $WH.ce("img");
        P.src = g_staticUrl + "/images/ui/misc/progress-anim.gif";
        P.width = 126;
        P.height = 22;
        $WH.ae(Q, P);
        $WH.ae(b, Q);
        Lightbox.reveal();
        b.style.visiblity = "visible"
      }, 150);
      s = new Image();
      s.onload = (function (P, Q) {
        clearTimeout(Q);
        P.width = this.width;
        P.height = this.height;
        s = null;
        m();
        B()
      }).bind(s, O, N);
      s.onerror = (function (P) {
        clearTimeout(P);
        s = null;
        Lightbox.hide();
        m()
      }).bind(s, N);
      s.src = (O.url ? O.url : g_staticUrl + "/uploads/screenshots/normal/" + O.id + ".jpg")
    } else {
      B()
    }
  }
  function L() {
    if (!s) {
      return
    }
    s.onload = null;
    s.onerror = null;
    s = null;
    m()
  }
  function m() {
    if (!I) {
      return
    }
    $WH.ee(b);
    b.className = "lightbox-frame has-lightbox-caption screenshotviewer";
    for (var N = 0; N < I.length; ++N) {
      $WH.ae(b, I[N])
    }
    I = null
  }
  this.checkPound = function () {
    if (location.hash && location.hash.indexOf("#" + u) == 0) {
      if (!g_listviews[u]) {
        var O = location.hash.split(":");
        if (O.length == 3) {
          var P = g_screenshots[O[1]],
              N = parseInt(O[2]);
          if (P && N >= 1 && N <= P.length) {
            ScreenshotViewer.show({
              screenshots: O[1],
              pos: N - 1,
              hashname: u
            })
          }
        }
      }
    }
  };
  this.show = function (N) {
    if ("hashname" in N) {
      u = N.hashname;
      delete N.hashname
    }
    Lightbox.show("screenshotviewer", {
      onShow: K,
      onHide: r,
      onResize: j
    }, N)
  };
  $(document).ready(this.checkPound)
};
$WH.aE(window, "load", function () {
  if (!(window.JSON && $WH.localStorage.isSupported())) {
    return
  }
  var j = $WH.localStorage.get("lvBrowse");
  if (!j) {
    return
  }
  j = window.JSON.parse(j);
  if (!j) {
    return
  }
  var p = /^\/[-a-z]+=\d+/i;
  var m = p.exec(location.pathname);
  if (!m) {
    return
  }
  m = m[0];
  var c = function (q, b) {
    if (!b) {
      return $WH.ce("i", {
        className: "fa fa-" + q
      })
    }
    return $WH.ce("a", {
      className: "fa fa-" + q,
      href: b
    })
  };
  for (var l = 0; l < j.length; l++) {
    var o = j[l].urls;
    for (var k = 0; k < o.length; k++) {
      if (o[k] == m) {
        var e = k > 0 ? o[k - 1] : false;
        var g = (k + 1) < o.length ? o[k + 1] : false;
        var n = j[l].path + j[l].hash;
        var h = $WH.ge("topbar-browse");
        if (!h) {
          return
        }
        var f = c("arrow-circle-up", n);
        $WH.Tooltip.simple(f, LANG.backtolist, "q2");
        $WH.ae(h, c("arrow-circle-left", e));
        $WH.ae(h, f);
        $WH.ae(h, c("arrow-circle-right", g));
        h.style.display = "block";
        return
      }
    }
  }
});
var ShowOnMap = function (e, f, c) {
  var b = this;
  b.data = e;
  b.currentPath = [];
  if (f == null) {
    f = myMapper
  }
  b.mapper = f;
  b._legend = null;
  b._legendLabel = null;
  b._legendContents = null;
  b._legendHorde = null;
  b._legendAlliance = null;
  b._menu = [];
  b._trackingIcons = [];
  b._controlsdiv = c ? $(typeof c == "string" ? ("#" + c) : c) : $("#lenrlkn4");
  b.construct()
};
ShowOnMap.prototype.onExpand = function () {
  this.expanded = true;
  location.replace(this.pound + ".map")
};
ShowOnMap.prototype.onCollapse = function () {
  this.expanded = false;
  var b = g_getHash();
  if (b.indexOf("#show") == 0 && b.indexOf(".map") > 0) {
    this.pound = b.substr(0, b.indexOf(".map"));
    location.replace(this.pound)
  }
};
ShowOnMap.prototype.construct = function () {
  if (!this.data) {
    return
  }
  var ad = this._controlsdiv;
  var c = function (m, l) {
    return $WH.strcmp(m[1], l[1])
  };
  var I = [];
  var Z = [];
  for (var Y in this.data) {
    if (this.data[Y].length === undefined) {
      var h = [];
      var j = [];
      var K = {};
      var B = this.data[Y];
      for (var R in B) {
        var b = false;
        for (var V = 0, z = B[R].length; V < z; ++V) {
          if (B[R][V].paths) {
            b = true;
            break
          }
        }
        var k = g_urlize(R);
        if (B[R][0].name_enus !== undefined) {
          k = g_urlize(B[R][0].name_enus)
        }
        var N = {};
        var q = {};
        var G = [k];
        var g = ShowOnMap.combinePins(B[R], false, b);
        var M = g[0];
        var E = g[1];
        var af = 0;
        for (var V = 0; V < M.length; ++V) {
          var H = M[V];
          var s = ShowOnMap.buildTooltip(H.list);
          var e = s[2];
          var W = null;
          if (e == "javascript:;") {
            W = s[3]
          }
          if (H.list.length == 1) {
            e = (g_types[H.list[0].type] && H.list[0].id ? "/" + g_types[H.list[0].type] + "=" + H.list[0].id : "")
          }
          if (Y == "rare" || Y == "herb" || Y == "vein") {
            s[1] = h.length + 1
          }
          if (N[H.level] == undefined) {
            N[H.level] = []
          }
          N[H.level].push([H.coord[0], H.coord[1],
          {
            url: e,
            label: s[0],
            menu: W,
            type: s[1],
            lines: H.list[0].paths
          }]);
          af++
        }
        if (af > 0) {
          var e = (g_types[B[R][0].type] && B[R][0].id ? "/" + g_types[B[R][0].type] + "=" + B[R][0].id : "");
          q[h.length + 1] = [R, e];
          G.push(R + $WH.sprintf(LANG.qty, E));
          G.push(this.showStuff.bind(this, N, [Y, k], q));
          h.push(G);
          for (var X in N) {
            if (j[X]) {
              j[X] = j[X].concat(N[X])
            } else {
              j[X] = N[X]
            }
          }
          K[h.length] = [R, e]
        }
      }
      if (h.length > 0) {
        h.sort(c);
        var G = [Y, LANG.som[Y], this.showStuff.bind(this, j, [Y], K), h];
        this._menu.push(G);
        var w = [
          [null, LANG.som[Y]],
          ["all", LANG.som.all, G[2]]
        ];
        for (x = 0; x < h.length; x++) {
          w.push(h[x])
        }
        this._trackingIcons.push([Y, undefined, K, w])
      }
    } else {
      if (this.data[Y].length == 0) {
        continue
      }
      var b = false;
      for (var V = 0, z = this.data[Y].length; V < z; ++V) {
        if (this.data[Y][V].paths) {
          b = true;
          break
        }
      }
      var G = [Y];
      var N = {};
      var S = {},
          C = {};
      var o = {},
          r = {};
      var q = {};
      var t = {};
      var L = {};
      var g = ShowOnMap.combinePins(this.data[Y], false, b);
      var E = g[1];
      var af = 0,
          f = 0,
          F = 0,
          Q = 0,
          ac = 0;
      var v = function (ag, aj) {
        for (var ah = 0; ah < aj.length; ++ah) {
          var l = aj[ah];
          var am = ag;
          l.list.key = Y;
          var al = ShowOnMap.buildTooltip(l.list, (ag == "hordedailyquests" || ag == "alliancedailyquests") ? true : false);
          var p = al[2];
          var ai = null;
          if (p == "javascript:;") {
            ai = al[3]
          }
          if (l.list.length == 1) {
            p = (g_types[l.list[0].type] && l.list[0].id ? "/" + g_types[l.list[0].type] + "=" + l.list[0].id : "")
          }
          var ak = [l.coord[0], l.coord[1],
          {
            url: p,
            label: al[0],
            menu: ai,
            type: al[1],
            lines: l.list[0].paths
          }];
          if (N[l.level] == undefined) {
            N[l.level] = [];
            S[l.level] = [];
            C[l.level] = [];
            o[l.level] = [];
            r[l.level] = []
          }
          if (l.list[0].mapicon) {
            ak[2].mapicon = l.list[0].mapicon
          }
          if (am != "mailbox" && am != "vignettes" && am != "rare" && am != "spirithealer" && am != "book" && am != "forge" && am != "treasure" && am != "anvil" && am != "hordequests" && am != "alliancequests" && am != "hordedailyquests" && am != "alliancedailyquests" && am != "boss") {
            if (al[1] == 2 || al[1] == 0) {
              if (al[1] == 2) {
                t[2] = [LANG.som_legend_horde, null]
              } else {
                t[0] = [LANG.som_legend_neutral, null]
              }
              S[l.level].push(ak);
              f++
            }
            if (al[1] == 3 || al[1] == 0) {
              if (al[1] == 3) {
                L[3] = [LANG.som_legend_alliance, null]
              } else {
                L[0] = [LANG.som_legend_neutral, null]
              }
              o[l.level].push(ak);
              Q++
            }
          } else {
            if (am == "hordequests") {
              am = "quest";
              if (al[1] == 2) {
                t[2] = [LANG.som_legend_horde, null]
              } else {
                t[0] = [LANG.som_legend_neutral, null]
              }
              S[l.level].push(ak);
              f++
            } else {
              if (am == "hordedailyquests") {
                am = "daily";
                if (al[1] == 2) {
                  t[2] = [LANG.som_legend_horde, null]
                } else {
                  t[0] = [LANG.som_legend_neutral, null]
                }
                C[l.level].push(ak);
                F++
              } else {
                if (am == "alliancequests") {
                  am = "quest";
                  if (al[1] == 3) {
                    L[3] = [LANG.som_legend_alliance, null]
                  } else {
                    L[0] = [LANG.som_legend_neutral, null]
                  }
                  o[l.level].push(ak);
                  Q++
                } else {
                  if (am == "alliancedailyquests") {
                    am = "daily";
                    if (al[1] == 3) {
                      L[3] = [LANG.som_legend_alliance, null]
                    } else {
                      L[0] = [LANG.som_legend_neutral, null]
                    }
                    r[l.level].push(ak);
                    ac++
                  } else {
                    N[l.level].push(ak);
                    af++
                  }
                }
              }
            }
          }
        }
        return am
      };
      var ab = v(Y, g[0]);
      if (Y == "alliancequests") {
        var A = ShowOnMap.combinePins(this.data[Y], true);
        if (A[1] > 0) {
          v("alliancedailyquests", A[0])
        }
      } else {
        if (Y == "hordequests") {
          var O = ShowOnMap.combinePins(this.data[Y], true);
          if (O[1] > 0) {
            v("hordedailyquests", O[0])
          }
        }
      }
      if (ab == "rare") {
        E = this.data[ab].length
      } else {
        if (ab == "forge" || ab == "anvil" || ab == "treasure" || ab == "mailbox") {
          E = g[0].length
        }
      }
      if (af > 0) {
        var G = [ab, LANG.som[ab] + $WH.sprintf(LANG.qty, E), this.showStuff.bind(this, N, [ab], q)];
        this._menu.push(G);
        this._trackingIcons.push([ab, N, q])
      }
      if (f > 0) {
        var G = [ab, LANG.som[ab] + $WH.sprintf(LANG.qty, f), this.showStuff.bind(this, S, ["horde", ab], t), null];
        if (ab == "quest") {
          G.push({
            tinyIcon: "quest_start"
          });
          if (F > 0) {
            Z.push(G);
            G = ["daily", LANG.som.daily + $WH.sprintf(LANG.qty, F), this.showStuff.bind(this, C, ["horde", "daily"], t), null,
            {
              tinyIcon: "quest_start_daily"
            }];
            this._trackingIcons.push(["daily", C, t])
          }
        }
        Z.push(G);
        this._trackingIcons.push([ab, S, t])
      }
      if (Q > 0) {
        var G = [ab, LANG.som[ab] + $WH.sprintf(LANG.qty, Q), this.showStuff.bind(this, o, ["alliance", ab], L), null];
        if (ab == "quest") {
          G.push({
            tinyIcon: "quest_start"
          });
          if (ac > 0) {
            I.push(G);
            G = ["daily", LANG.som.daily + $WH.sprintf(LANG.qty, ac), this.showStuff.bind(this, r, ["alliance", "daily"], L), null,
            {
              tinyIcon: "quest_start_daily"
            }];
            this._trackingIcons.push(["daily", r, L])
          }
        }
        I.push(G);
        this._trackingIcons.push([ab, o, L])
      }
    }
  }
  I.sort(c);
  Z.sort(c);
  this._menu.sort(c);
  if (Z.length > 0) {
    this._menu.unshift(["horde", LANG.som.horde, "", Z,
    {
      tinyIcon: "side_horde"
    }])
  }
  if (I.length > 0) {
    this._menu.unshift(["alliance", LANG.som.alliance, "", I,
    {
      tinyIcon: "side_alliance"
    }])
  }
  var y = [-1, LANG.som_nothing, this.showStuff.bind(this, [], [-1], {})];
  y.checked = true;
  this._menu.push(y);
  var u = $WH.g_createButton(LANG.showonmap, null, {
    "class": "mapper-som-button fa fa-search"
  });
  Menu.add(u, this._menu, {
    showAtElement: true
  });
  ad.append(u);
  var J;
  if (!this._legend) {
    this._legend = $("<div/>", {
      "class": "mapper-legend",
      css: {
        display: "none"
      }
    });
    var U = $("<div/>", {
      "class": "mapper-legend-container"
    });
    this._legendLabel = $("<b/>", {
      text: LANG.som_legend
    });
    U.append(this._legendLabel);
    this._legendContents = $("<div/>", {
      css: {
        "float": "right"
      }
    });
    U.append(this._legendContents);
    var J = $("<div/>", {
      css: {
        clear: "right"
      }
    });
    U.append(J);
    this._legend.append(U)
  }
  ad.append(this._legend);
  J = $("<div/>", {
    css: {
      clear: "left"
    }
  });
  ad.append(J);
  this.setTrackingIcons();
  var D = [];
  var T = g_getHash();
  if (T.indexOf("#show:") != -1) {
    D = T.split(".")
  } else {
    if (this.data.instance) {
      D.push("#show:boss")
    }
  }
  if (D.length > 0) {
    if (D.length == 2 && D[1] == "map") {
      this.expanded = true;
      this.mapper.toggleZoom()
    }
    var P = D[0].split(":");
    if (P.length < 2) {
      return
    }
    var aa = this._menu;
    for (var V = 1; V < P.length; ++V) {
      var ae = P.length - 1;
      for (var R = 0; R < aa.length; ++R) {
        if (aa[R][0] == P[V]) {
          if (aa[R][3] && V < ae) {
            aa = aa[R][3]
          } else {
            aa = aa[R]
          }
          break
        }
      }
    }
    if (aa && aa[2] && jQuery.isFunction(aa[2])) {
      aa[2]()
    }
  }
};
ShowOnMap.prototype.setTrackingIcons = function () {
  var c = this.mapper.parent;
  var B = {
    repair: "repair",
    auctioneer: "auctioneer",
    banker: "banker",
    battlemaster: "battlemaster",
    innkeeper: "inn",
    guildmaster: "guild",
    stablemaster: "stablemaster",
    flightmaster: "flightmaster",
    trainer: "trainer-profession",
    vendor: "vendor-food",
    quest: "quest",
    daily: "daily",
    anvil: "blacksmithing",
    herb: "herbalism",
    vein: "mining",
    book: "trainer-class",
    forge: "smelting",
    spirithealer: "spirithealer",
    boss: "boss",
    rare: "hostile-npc",
    vignettes: "resource",
    treasure: "treasure",
    mailbox: "mailbox"
  };
  var e = [{
    name: LANG.types[1][2],
    icons: ["repair", "auctioneer", "banker", "battlemaster", "innkeeper", "guildmaster", "stablemaster", "flightmaster", "trainer", "vendor", "spirithealer", "boss", "rare"],
    elements: []
  },
  {
    name: LANG.types[5][2],
    icons: ["quest", "daily"],
    elements: []
  },
  {
    name: l_guide_categories[2],
    icons: ["anvil", "herb", "vein", "book", "forge"],
    elements: []
  },
  {
    name: LANG.loot,
    icons: ["vignettes", "treasure"],
    elements: []
  },
  {
    name: LANG.other,
    icons: ["mailbox"],
    elements: []
  }];
  var b = this._trackingIcons;
  b.sort(function (k, j) {
    return $WH.strcmp(k[0], j[0])
  });
  for (var u = 1; u < b.length; u++) {
    if (b[u][0] == b[u - 1][0]) {
      var r = {};
      for (var v in b[u][1]) {
        if (!b[u][1].hasOwnProperty(v)) {
          continue
        }
        r[v] = b[u][1][v]
      }
      for (v in b[u - 1][1]) {
        if (!b[u - 1][1].hasOwnProperty(v)) {
          continue
        }
        if (!r.hasOwnProperty(v)) {
          r[v] = b[u - 1][1][v]
        } else {
          r[v] = r[v].concat(b[u - 1][1][v])
        }
      }
      b[u - 1][1] = r;
      var D = {};
      for (var g in b[u][2]) {
        if (!b[u][2].hasOwnProperty(g)) {
          continue
        }
        D[g] = b[u][2][g]
      }
      for (g in b[u - 1][2]) {
        if (!b[u - 1][2].hasOwnProperty(g)) {
          continue
        }
        D[g] = b[u - 1][2][g]
      }
      b[u - 1][2] = D;
      b.splice(u--, 1)
    }
  }
  b.sort(function (k, j) {
    return $WH.strcmp(LANG.som[k[0]], LANG.som[j[0]])
  });
  var o = $WH.ce("div", {
    className: "mapper-legend-icons"
  });
  for (var E = 0, t; t = b[E]; E++) {
    if (!B.hasOwnProperty(t[0])) {
      continue
    }
    var A = $WH.ce("div");
    A.className = "mapper-legend-icon " + B[t[0]];
    A.setAttribute("data-legend-icon", t[0]);
    A.onmousedown = $WH.rf;
    if (t[1]) {
      var s = [t[0]];
      if (t[0] != "vignettes" && t[0] != "treasure") {
        s.splice(0, 0, -2)
      }
      $WH.aE(A, "click", this.showStuff.bind(this, t[1], s, t[2], A))
    }
    if (t[3]) {
      Menu.add(A, t[3], {
        showAtElement: true
      })
    }
    if (!Platform.isTouch()) {
      $WH.Tooltip.simple(A, LANG.som[t[0]])
    }
    var n = false;
    for (var C = 0, p; p = e[C]; C++) {
      if (p.icons.indexOf(t[0]) > -1) {
        n = true;
        e[C].elements.push(A);
        break
      }
    }
    if (!n) {
      if (typeof console != "undefined" && typeof console.error == "function") {
        console.error("Could not find group for " + t[0] + " icon!")
      }
    }
  }
  for (var z = 0, G; G = e[z]; z++) {
    if (G.elements.length) {
      var h = $WH.ce("div", {
        className: "mapper-legend-icons-group"
      });
      var f = $WH.ce("div", {
        className: "mapper-legend-icons-heading",
        innerHTML: G.name
      });
      var H = $WH.ce("div", {
        className: "mapper-legend-icons-icons"
      });
      if (G.style) {
        for (var y in G.style) {
          if (G.style.hasOwnProperty(y)) {
            h.style[y] = G.style[y]
          }
        }
      }
      for (var w = 0, F; F = G.elements[w]; w++) {
        $WH.ae(H, F)
      }
      $WH.ae(h, f);
      $WH.ae(h, H);
      $WH.ae(o, h)
    }
  }
  var q = $WH.ce("div", {
    className: "mapper-legend-icons-tip",
    innerHTML: LANG.mapper_clickicon
  });
  $("> span:first-child", this.mapper.parent).append(q);
  $WH.ae(c, o);
  c.className += " mapper-autoheight"
};
ShowOnMap.prototype.setLegend = function (g) {
  this._legendContents.empty();
  var h = $("<div/>");
  var e = 0;
  for (var c in g) {
    var f = $("<span/>", {
      "class": ("mapper-pin mapper-pin-" + c + " mapper-legend-pin")
    });
    if (g[c][1]) {
      var b = $("<a/>", {
        href: g[c][1],
        text: g[c][0]
      });
      f.append(b)
    } else {
      f.text(g[c][0])
    }
    h.append(f);
    if ((++e) % 4 == 0) {
      h.append($("<br/>"))
    }
  }
  this._legendContents.append(h)
};
ShowOnMap.prototype.showStuff = function (b, j, e) {
  if (g_isEqualSimpleObject(j, this.currentPath)) {
    this.showStuff.call(this, [], [-1], {});
    return
  }
  Menu.hide();
  var g = false;
  for (var c = 0, f; f = j[c]; c++) {
    if (typeof f != "string") {
      continue
    }
    var h = $('[data-legend-icon="' + f + '"]');
    if (h.length) {
      h.parents(".mapper-legend-icons").find(".mapper-legend-icon").removeClass("active");
      h.addClass("active");
      g = true;
      break
    }
  }
  if (!g) {
    $(".mapper-legend-icon", this.mapper.parent).removeClass("active")
  }
  var k = {
    coords: b,
    preservelevel: true
  };
  if ((typeof g_pageInfo != "undefined") && g_pageInfo.hasOwnProperty("id")) {
    k.zone = g_pageInfo.id
  }
  this.mapper.update(k);
  this.setLegend(e);
  this.checkMenu(j);
  this.currentPath = j;
  if ((j.length == 1 && j[0] == -1) || (j[0] == -2)) {
    this.pound = "";
    $WH.g_clearHash();
    return
  }
  this.pound = "#show:" + j.join(":");
  if (this.pound != "#show:boss") {
    location.replace(this.pound + (this.expanded ? ".map" : ""))
  }
};
ShowOnMap.prototype.clearChecks = function (c) {
  for (var b = 0; b < c.length; ++b) {
    c[b].checked = false;
    if (c[b][3] && c[b][3].length > 0) {
      this.clearChecks(c[b][3])
    }
  }
  this._legend.hide()
};
ShowOnMap.prototype.checkMenu = function (m) {
  this.clearChecks(this._menu);
  if (m[0] != -1) {
    this._legend.show()
  } else {
    this._legend.hide()
  }
  var b = this._menu;
  var k = [];
  for (var e = 0; e < m.length; ++e) {
    for (var c = 0; c < b.length; ++c) {
      if (b[c][0] == m[e]) {
        b[c].checked = true;
        k.push([b[c][0], b[c][1]]);
        b = b[c][3];
        break
      }
    }
  }
  if (m[0] == -2) {
    k.push([m[1], LANG.som[m[1]]])
  }
  var f = k.length - 1;
  var h = "";
  var g = {
    rare: true,
    herb: true,
    vein: true
  };
  for (var e = 0; e < k.length; ++e) {
    if (e > 0 && g[k[0][0]]) {
      var l = $("span", this._legendContents);
      l.removeClass("mapper-legend-pin");
      l.append($("<b/>", {
        text: " " + k[e][1].substr(k[e][1].lastIndexOf("("))
      }))
    } else {
      if (e == f) {
        h += "<span>"
      } else {
        h += '<span class="breadcrumb-arrow">'
      }
      h += k[e][1] + "</span>"
    }
  }
  this._legendLabel.html(h)
};
ShowOnMap.combinePins = function (t, m, g) {
  var f = {};
  var r = null,
      b = null;
  var l, k;
  var v = 0;
  var e = function (B, n) {
    var c = Math.floor(B[0]);
    var p = Math.floor(B[1]);
    if (!n) {
      if (c % 2 == 1) {
        c += 1
      }
      if (p % 2 == 1) {
        p += 1
      }
    }
    if (f[c] === undefined) {
      f[c] = {}
    }
    if (f[c][p] === undefined) {
      f[c][p] = []
    }
    return [c, p]
  };
  for (var o = 0; o < t.length; ++o) {
    var h = t[o];
    if (m) {
      if (!h.quests) {
        continue
      }
      var s = true;
      for (var q = 0; q < h.quests.length; ++q) {
        if (h.quests[q].daily) {
          s = false;
          break
        }
      }
      if (s) {
        continue
      }
    } else {
      if (g) {
        r = e([h.id, 0], true);
        l = r[0];
        k = r[1];
        var j = $WH.dO(h);
        j.coord = h.coords[0];
        f[l][k].push(j);
        v++;
        continue
      }
    }
    if (h.point == "start" || h.point == "end") {
      r = e(h.coord);
      l = r[0];
      k = r[1];
      if (f[l][k].length > 3) {
        var w = f[l][k];
        f[l][k] = [];
        for (var u = 0; u < w.length; ++u) {
          b = e(w[u].coord, true);
          f[b[0]][b[1]].push(w[u])
        }
      }
      f[l][k].push(h);
      v++
    } else {
      for (var z = 0; z < h.coords.length; ++z) {
        r = e(h.coords[z]);
        l = r[0];
        k = r[1];
        var j = $WH.dO(h);
        j.coord = h.coords[z];
        if (f[l][k].length > 3) {
          var w = f[l][k];
          f[l][k] = [];
          for (var u = 0; u < w.length; ++u) {
            b = e(w[u].coord, true);
            f[b[0]][b[1]].push(w[u])
          }
        }
        f[l][k].push(j);
        v++
      }
    }
  }
  var A = [];
  for (l in f) {
    for (k in f[l]) {
      A.push({
        coord: [f[l][k][0].coord[0], f[l][k][0].coord[1]],
        level: f[l][k][0].level,
        list: f[l][k]
      })
    }
  }
  return [A, v]
};
ShowOnMap.buildTooltip = function (w, m) {
  var t = "";
  var f = "";
  var c = [];
  var p = -1;
  var h = {};
  var g = 0;
  var b = {};
  var y = 1;
  for (var s = 0; s < w.length; ++s) {
    var j = w[s];
    f = (g_types[j.type] && j.id ? "/" + g_types[j.type] + "=" + j.id : "");
    var A = f + j.item;
    var k = f + j.point;
    if (!h[A]) {
      h[A] = {
        url: f,
        obj: j,
        coords: [j.coord],
        all: [j]
      };
      g++
    } else {
      if (!b[k]) {
        h[A].all.push(j)
      }
      h[A].coords.push(j.coord)
    }
    b[k] = 1
  }
  var s = 0;
  for (var A in h) {
    var f = h[A].url;
    var e = h[A].all;
    var j = h[A].obj;
    var v = h[A].coords;
    if (s > 0) {
      t += "<br />"
    }
    c.push([s++, j.name, f]);
    y = j.type;
    if (!j.point) {
      if ((j.reacthorde == 1 && j.reactalliance < 1) || j.side == 2) {
        if (p == 2 || p == -1) {
          p = 2
        } else {
          p = 0
        }
      } else {
        if ((j.reactalliance == 1 && j.reacthorde < 1) || j.side == 1) {
          if (p == 3 || p == -1) {
            p = 3
          } else {
            p = 0
          }
        } else {
          p = 0
        }
      }
    }
    t += '<b class="q' + (p == 2 ? " icon-horde" : "") + (p == 3 ? " icon-alliance" : "") + '">' + j.name + "</b>";
    if (v.length > 0) {
      t += " (" + v[0][0] + ", " + v[0][1] + ")<br />"
    }
    if (j.quests) {
      if (j.quests.length > 1) {
        t += LANG.som_startsquestpl
      } else {
        t += LANG.som_startsquest
      }
      t += '<div class="indent">';
      for (var l = 0; l < j.quests.length; ++l) {
        var u = j.quests[l];
        if (m && !u.daily) {
          continue
        }
        t += '<span class="q0">[' + u.level + "]</span> " + u.name + ((u.series && !u.first) ? '<sup style="font-size: 8px">(*)</sup>' : "") + ((u.category < 0 && g_quest_sorts[u.category]) ? ' <i class="q0">' + g_quest_sorts[u.category] + "</i>" : "") + "<br />"
      }
      t += "</div>"
    } else {
      if (j.description) {
        t += j.description + "<br />"
      } else {
        if (j.point) {
          for (var s = 0; s < e.length; ++s) {
            var r = e[s];
            switch (r.point) {
            case "start":
              t += LANG.mapper_startsquest + "<br />";
              if (p == "end") {
                p = "startend"
              } else {
                if (p != "startend") {
                  p = "start"
                }
              }
              break;
            case "end":
              t += LANG.mapper_endsquest + "<br />";
              if (p == "start") {
                p = "startend"
              } else {
                if (p != "startend") {
                  p = "end"
                }
              }
              break;
            case "sourcestart":
              t += LANG.mapper_sourcestart + "<br />";
              t += '<div class="indent">' + r.item + "</div>";
              if (p == "end") {
                p = "startend"
              } else {
                if (p != "startend") {
                  p = "start"
                }
              }
              break;
            case "sourceend":
              t += LANG.mapper_sourceend + "<br />";
              t += '<div class="indent">' + r.item + "</div>";
              if (p == "start") {
                p = "startend"
              } else {
                if (p != "startend") {
                  p = "end"
                }
              }
              break;
            case "requirement":
              t += LANG.mapper_requiredquest + "<br />";
              if (p == -1) {
                p = r.objective
              }
              break;
            case "sourcerequirement":
              t += LANG.mapper_sourcereq + "<br />";
              t += '<div class="indent">' + r.item + "</div>";
              if (p == -1) {
                p = r.objective
              }
              break
            }
          }
        }
      }
    }
  }
  t += '<div class="q2">';
  if (w.length == 1) {
    t += (w[0].type == 1 ? LANG.som_viewnpc : (w[0].type == 2 ? LANG.som_viewobj : ""))
  } else {
    if (g == 1) {
      t += (y == 1 ? LANG.som_viewnpc : (y == 2 ? LANG.som_viewobj : ""))
    } else {
      t += "<br />" + LANG.som_view
    }
  }
  t += "</div>";
  var z = [];
  z.push(t);
  z.push(p);
  if (w.length == 1 || g == 1) {
    z.push(f);
    z.push(null)
  } else {
    z.push("javascript:;");
    z.push(c)
  }
  return z
};
var Slider = new
function () {
  var c, n, l;

  function o(r) {
    r = $WH.$E(r);
    n = this;
    c = $WH.g_getCursorPos(r);
    $WH.aE(document, "mousemove", e);
    $WH.aE(document, "mouseup", f);
    return false
  }
  function e(s) {
    s = $WH.$E(s);
    if (!c || !n) {
      return
    }
    var t = $WH.g_getCursorPos(s),
        v = t[n._dir] - c[n._dir],
        u = p(n, n._pos + v),
        r = m(n);
    if (r && n.input) {
      n.input.value = r.value
    }
    if (!u) {
      c = t
    }
    if (n.onMove) {
      n.onMove(s, n, r)
    }
  }
  function f(r) {
    r = $WH.$E(r);
    if (n.onMove) {
      n.onMove(r, n, m(n))
    }
    n = null;
    c = null;
    $WH.dE(document, "mousemove", e);
    $WH.dE(document, "mouseup", f);
    return false
  }
  function q(u, t) {
    t = $WH.$E(t);
    n = u;
    c = $WH.g_getCursorPos(t);
    var v = $WH.ac(n.parentNode),
        s = Math.floor(g(n) / 2);
    p(n, c[n._dir] - v[n._dir] - s);
    var r = m(n);
    if (r && n.input) {
      n.input.value = r.value
    }
    if (n.onMove) {
      n.onMove(t, n, r)
    }
    $WH.aE(document, "mousemove", e);
    $WH.aE(document, "mouseup", f);
    return false
  }
  function k(s, r) {
    if (l) {
      clearTimeout(l)
    }
    if (r.type == "change" || r.type == "keypress" && r.which == 13) {
      b(s, r)
    } else {
      l = setTimeout(b.bind(0, s, r), 1000)
    }
  }
  function b(u, t) {
    var s = u.input.value,
        r = m(u);
    if (isNaN(s)) {
      s = r.value
    }
    if (s > u._max) {
      s = u._max
    }
    if (s < u._min) {
      s = u._min
    }
    Slider.setValue(u, s);
    if (u.onMove) {
      u.onMove(t, u, m(u))
    }
  }
  function p(r, s) {
    var t = false;
    if (s < 0) {
      s = 0;
      t = true
    } else {
      if (s > j(r)) {
        s = j(r);
        t = true
      }
    }
    r.style[(r._dir == "y" ? "top" : "left")] = parseInt(s) + "px";
    r._pos = s;
    return t
  }
  function j(r) {
    return h(r) - g(r) + 2
  }
  function m(u) {
    var r = u._pos / j(u),
        t = Math.round((r * (u._max - u._min)) + u._min),
        s = [r, t];
    s.percent = r;
    s.value = t;
    return s
  }
  function h(r) {
    if (r._tsz > 0) {
      return r._tsz
    }
    if (r._dir == "y") {
      return r.parentNode.offsetHeight
    }
    return r.parentNode.offsetWidth
  }
  function g(r) {
    if (r._hsz > 0) {
      return r._hsz
    }
    if (r._dir == "y") {
      return r.offsetHeight
    }
    return r.offsetWidth
  }
  this.setPercent = function (s, r) {
    p(s, r * j(s))
  };
  this.setValue = function (s, r) {
    if (r < s._min) {
      r = s._min
    } else {
      if (r > s._max) {
        r = s._max
      }
    }
    if (s.input) {
      s.input.value = r
    }
    this.setPercent(s, (r - s._min) / (s._max - s._min))
  };
  this.setSize = function (u, r) {
    var t = m(u),
        s = j(u);
    u.parentNode.style[(u._dir == "y" ? "height" : "width")] = r + "px";
    if (s != j(u)) {
      this.setValue(u, t.value)
    }
  };
  this.init = function (u, t) {
    var v = $WH.ce("a");
    v.href = "javascript:;";
    v.onmousedown = o;
    v.className = "handle";
    var r = $WH.ce("a");
    r.href = "javascript:;";
    r.onmousedown = q.bind(0, v);
    r.className = "track";
    $WH.ae(u, $WH.ce("span"));
    $WH.ae(u, r);
    $WH.ae(u, v);
    v._dir = "x";
    v._min = 1;
    v._max = 100;
    v._pos = 0;
    v._tsz = 0;
    v._hsz = 0;
    if (t != null) {
      if (t.direction == "y") {
        v._dir = "y"
      }
      if (t.minValue) {
        v._min = t.minValue
      }
      if (t.maxValue) {
        v._max = t.maxValue
      }
      if (t.onMove) {
        v.onMove = t.onMove
      }
      if (t.trackSize) {
        v._tsz = t.trackSize
      }
      if (t.handleSize) {
        v._hsz = t.handleSize
      }
      if (t.showLabels !== false) {
        var s = $WH.ce("div");
        s.innerHTML = v._min;
        s.className = "label min";
        $WH.ae(u, s);
        s = $WH.ce("div");
        s.innerHTML = v._max;
        s.className = "label max";
        $WH.ae(u, s);
        v.input = $WH.ce("input");
        $(v.input).attr({
          value: v._max,
          type: "text"
        }).bind("click", function () {
          this.select()
        }).keypress(function (z) {
          var w = [];
          var y = z.which;
          for (i = 48; i < 58; i++) {
            w.push(i)
          }
          if (!($WH.in_array(w, y) >= 0) && y != 13) {
            z.preventDefault()
          }
        }).bind("keyup keydown change", k.bind(0, v));
        v.input.className = "input";
        $WH.ae(u, v.input)
      }
    }
    u.className = "slider-" + v._dir + (t == null || t.showLabels !== false ? " has-labels" : "");
    return v
  }
};
var suDialog;

function su_addToSaved(e, f, b, g) {
  if (!e) {
    return
  }
  if (!suDialog) {
    suDialog = new Dialog()
  }
  var c = function (k) {
    var j = g_getWowheadCookie("compare_groups"),
        h = "/compare";
    if (k.action > 1) {
      if (j) {
        e = j + ";" + e
      }
      g_setWowheadCookie("compare_groups", e, true);
      if (g) {
        g_setWowheadCookie("compare_level", g, true)
      }
    } else {
      h += "?items=" + e + (g ? "&l=" + g : "")
    }
    if (k.action < 3) {
      if (b) {
        window.open(h)
      } else {
        location.href = h
      }
    }
  };
  suDialog.show("docompare", {
    data: {
      selecteditems: f,
      action: 1
    },
    onSubmit: c
  })
}
Dialog.templates.docompare = {
  title: LANG.dialog_compare,
  width: 400,
  buttons: [
    ["check", LANG.ok],
    ["x", LANG.cancel]
  ],
  fields: [{
    id: "selecteditems",
    type: "caption",
    compute: function (e, c, b, f) {
      f.innerHTML = $WH.sprintf((c == 1 ? LANG.dialog_selecteditem : LANG.dialog_selecteditems), c)
    }
  },
  {
    id: "action",
    type: "radio",
    label: "",
    value: 3,
    submitOnDblClick: 1,
    options: {
      1: LANG.dialog_nosaveandview,
      2: LANG.dialog_saveandview,
      3: LANG.dialog_saveforlater
    }
  }]
};
var swfobject = function () {
  var aq = "undefined",
      aD = "object",
      ab = "Shockwave Flash",
      X = "ShockwaveFlash.ShockwaveFlash",
      aE = "application/x-shockwave-flash",
      ac = "SWFObjectExprInst",
      ax = "onreadystatechange",
      af = window,
      aL = document,
      aB = navigator,
      aa = false,
      Z = [aN],
      aG = [],
      ag = [],
      al = [],
      aJ, ad, ap, at, ak = false,
      aU = false,
      aH, an, aI = true,
      ah = function () {
      var b = typeof aL.getElementById != aq && typeof aL.getElementsByTagName != aq && typeof aL.createElement != aq,
          g = aB.userAgent.toLowerCase(),
          e = aB.platform.toLowerCase(),
          k = e ? /win/.test(e) : /win/.test(g),
          m = e ? /mac/.test(e) : /mac/.test(g),
          j = /webkit/.test(g) ? parseFloat(g.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false,
          f = !+"\v1",
          h = [0, 0, 0],
          n = null;
      if (typeof aB.plugins != aq && typeof aB.plugins[ab] == aD) {
        n = aB.plugins[ab].description;
        if (n && !(typeof aB.mimeTypes != aq && aB.mimeTypes[aE] && !aB.mimeTypes[aE].enabledPlugin)) {
          aa = true;
          f = false;
          n = n.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
          h[0] = parseInt(n.replace(/^(.*)\..*$/, "$1"), 10);
          h[1] = parseInt(n.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
          h[2] = /[a-zA-Z]/.test(n) ? parseInt(n.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0
        }
      } else {
        if (typeof af.ActiveXObject != aq) {
          try {
            var l = new ActiveXObject(X);
            if (l) {
              n = l.GetVariable("$version");
              if (n) {
                f = true;
                n = n.split(" ")[1].split(",");
                h = [parseInt(n[0], 10), parseInt(n[1], 10), parseInt(n[2], 10)]
              }
            }
          } catch (c) {}
        }
      }
      return {
        w3: b,
        pv: h,
        wk: j,
        ie: f,
        win: k,
        mac: m
      }
      }(),
      aK = function () {
      if (!ah.w3) {
        return
      }
      if ((typeof aL.readyState != aq && aL.readyState == "complete") || (typeof aL.readyState == aq && (aL.getElementsByTagName("body")[0] || aL.body))) {
        aP()
      }
      if (!ak) {
        if (typeof aL.addEventListener != aq) {
          aL.addEventListener("DOMContentLoaded", aP, false)
        }
        if (ah.ie && ah.win) {
          aL.attachEvent(ax, function () {
            if (aL.readyState == "complete") {
              aL.detachEvent(ax, arguments.callee);
              aP()
            }
          });
          if (af == top) {
            (function () {
              if (ak) {
                return
              }
              try {
                aL.documentElement.doScroll("left")
              } catch (b) {
                setTimeout(arguments.callee, 0);
                return
              }
              aP()
            })()
          }
        }
        if (ah.wk) {
          (function () {
            if (ak) {
              return
            }
            if (!/loaded|complete/.test(aL.readyState)) {
              setTimeout(arguments.callee, 0);
              return
            }
            aP()
          })()
        }
        aC(aP)
      }
      }();

  function aP() {
    if (ak) {
      return
    }
    try {
      var c = aL.getElementsByTagName("body")[0].appendChild(ar("span"));
      c.parentNode.removeChild(c)
    } catch (b) {
      return
    }
    ak = true;
    var f = Z.length;
    for (var e = 0; e < f; e++) {
      Z[e]()
    }
  }
  function aj(b) {
    if (ak) {
      b()
    } else {
      Z[Z.length] = b
    }
  }
  function aC(b) {
    if (typeof af.addEventListener != aq) {
      af.addEventListener("load", b, false)
    } else {
      if (typeof aL.addEventListener != aq) {
        aL.addEventListener("load", b, false)
      } else {
        if (typeof af.attachEvent != aq) {
          aM(af, "onload", b)
        } else {
          if (typeof af.onload == "function") {
            var c = af.onload;
            af.onload = function () {
              c();
              b()
            }
          } else {
            af.onload = b
          }
        }
      }
    }
  }
  function aN() {
    if (aa) {
      Y()
    } else {
      am()
    }
  }
  function Y() {
    var f = aL.getElementsByTagName("body")[0];
    var c = ar(aD);
    c.setAttribute("type", aE);
    var b = f.appendChild(c);
    if (b) {
      var e = 0;
      (function () {
        if (typeof b.GetVariable != aq) {
          var g = b.GetVariable("$version");
          if (g) {
            g = g.split(" ")[1].split(",");
            ah.pv = [parseInt(g[0], 10), parseInt(g[1], 10), parseInt(g[2], 10)]
          }
        } else {
          if (e < 10) {
            e++;
            setTimeout(arguments.callee, 10);
            return
          }
        }
        f.removeChild(c);
        b = null;
        am()
      })()
    } else {
      am()
    }
  }
  function am() {
    var j = aG.length;
    if (j > 0) {
      for (var k = 0; k < j; k++) {
        var e = aG[k].id;
        var o = aG[k].callbackFn;
        var b = {
          success: false,
          id: e
        };
        if (ah.pv[0] > 0) {
          var l = aS(e);
          if (l) {
            if (ao(aG[k].swfVersion) && !(ah.wk && ah.wk < 312)) {
              ay(e, true);
              if (o) {
                b.success = true;
                b.ref = av(e);
                o(b)
              }
            } else {
              if (aG[k].expressInstall && au()) {
                var g = {};
                g.data = aG[k].expressInstall;
                g.width = l.getAttribute("width") || "0";
                g.height = l.getAttribute("height") || "0";
                if (l.getAttribute("class")) {
                  g.styleclass = l.getAttribute("class")
                }
                if (l.getAttribute("align")) {
                  g.align = l.getAttribute("align")
                }
                var h = {};
                var f = l.getElementsByTagName("param");
                var n = f.length;
                for (var m = 0; m < n; m++) {
                  if (f[m].getAttribute("name").toLowerCase() != "movie") {
                    h[f[m].getAttribute("name")] = f[m].getAttribute("value")
                  }
                }
                ae(g, h, e, o)
              } else {
                aF(l);
                if (o) {
                  o(b)
                }
              }
            }
          }
        } else {
          ay(e, true);
          if (o) {
            var c = av(e);
            if (c && typeof c.SetVariable != aq) {
              b.success = true;
              b.ref = c
            }
            o(b)
          }
        }
      }
    }
  }
  function av(c) {
    var f = null;
    var e = aS(c);
    if (e && e.nodeName == "OBJECT") {
      if (typeof e.SetVariable != aq) {
        f = e
      } else {
        var b = e.getElementsByTagName(aD)[0];
        if (b) {
          f = b
        }
      }
    }
    return f
  }
  function au() {
    return !aU && ao("6.0.65") && (ah.win || ah.mac) && !(ah.wk && ah.wk < 312)
  }
  function ae(h, f, k, g) {
    aU = true;
    ap = g || null;
    at = {
      success: false,
      id: k
    };
    var b = aS(k);
    if (b) {
      if (b.nodeName == "OBJECT") {
        aJ = aO(b);
        ad = null
      } else {
        aJ = b;
        ad = k
      }
      h.id = ac;
      if (typeof h.width == aq || (!/%$/.test(h.width) && parseInt(h.width, 10) < 310)) {
        h.width = "310"
      }
      if (typeof h.height == aq || (!/%$/.test(h.height) && parseInt(h.height, 10) < 137)) {
        h.height = "137"
      }
      aL.title = aL.title.slice(0, 47) + " - Flash Player Installation";
      var c = ah.ie && ah.win ? "ActiveX" : "PlugIn",
          e = "MMredirectURL=" + af.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + c + "&MMdoctitle=" + aL.title;
      if (typeof f.flashvars != aq) {
        f.flashvars += "&" + e
      } else {
        f.flashvars = e
      }
      if (ah.ie && ah.win && b.readyState != 4) {
        var j = ar("div");
        k += "SWFObjectNew";
        j.setAttribute("id", k);
        b.parentNode.insertBefore(j, b);
        b.style.display = "none";
        (function () {
          if (b.readyState == 4) {
            b.parentNode.removeChild(b)
          } else {
            setTimeout(arguments.callee, 10)
          }
        })()
      }
      aA(h, f, k)
    }
  }
  function aF(b) {
    if (ah.ie && ah.win && b.readyState != 4) {
      var c = ar("div");
      b.parentNode.insertBefore(c, b);
      c.parentNode.replaceChild(aO(b), c);
      b.style.display = "none";
      (function () {
        if (b.readyState == 4) {
          b.parentNode.removeChild(b)
        } else {
          setTimeout(arguments.callee, 10)
        }
      })()
    } else {
      b.parentNode.replaceChild(aO(b), b)
    }
  }
  function aO(c) {
    var f = ar("div");
    if (ah.win && ah.ie) {
      f.innerHTML = c.innerHTML
    } else {
      var g = c.getElementsByTagName(aD)[0];
      if (g) {
        var b = g.childNodes;
        if (b) {
          var h = b.length;
          for (var e = 0; e < h; e++) {
            if (!(b[e].nodeType == 1 && b[e].nodeName == "PARAM") && !(b[e].nodeType == 8)) {
              f.appendChild(b[e].cloneNode(true))
            }
          }
        }
      }
    }
    return f
  }
  function aA(g, j, e) {
    var f, b = aS(e);
    if (ah.wk && ah.wk < 312) {
      return f
    }
    if (b) {
      if (typeof g.id == aq) {
        g.id = e
      }
      if (ah.ie && ah.win) {
        var h = "";
        for (var l in g) {
          if (g[l] != Object.prototype[l]) {
            if (l.toLowerCase() == "data") {
              j.movie = g[l]
            } else {
              if (l.toLowerCase() == "styleclass") {
                h += ' class="' + g[l] + '"'
              } else {
                if (l.toLowerCase() != "classid") {
                  h += " " + l + '="' + g[l] + '"'
                }
              }
            }
          }
        }
        var k = "";
        for (var m in j) {
          if (j[m] != Object.prototype[m]) {
            k += '<param name="' + m + '" value="' + j[m] + '" />'
          }
        }
        b.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + h + ">" + k + "</object>";
        ag[ag.length] = g.id;
        f = aS(g.id)
      } else {
        var c = ar(aD);
        c.setAttribute("type", aE);
        for (var n in g) {
          if (g[n] != Object.prototype[n]) {
            if (n.toLowerCase() == "styleclass") {
              c.setAttribute("class", g[n])
            } else {
              if (n.toLowerCase() != "classid") {
                c.setAttribute(n, g[n])
              }
            }
          }
        }
        for (var o in j) {
          if (j[o] != Object.prototype[o] && o.toLowerCase() != "movie") {
            aQ(c, o, j[o])
          }
        }
        b.parentNode.replaceChild(c, b);
        f = c
      }
    }
    return f
  }
  function aQ(c, f, e) {
    var b = ar("param");
    b.setAttribute("name", f);
    b.setAttribute("value", e);
    c.appendChild(b)
  }
  function aw(b) {
    var c = aS(b);
    if (c && c.nodeName == "OBJECT") {
      if (ah.ie && ah.win) {
        c.style.display = "none";
        (function () {
          if (c.readyState == 4) {
            aT(b)
          } else {
            setTimeout(arguments.callee, 10)
          }
        })()
      } else {
        c.parentNode.removeChild(c)
      }
    }
  }
  function aT(b) {
    var c = aS(b);
    if (c) {
      for (var e in c) {
        if (typeof c[e] == "function") {
          c[e] = null
        }
      }
      c.parentNode.removeChild(c)
    }
  }
  function aS(b) {
    var e = null;
    try {
      e = aL.getElementById(b)
    } catch (c) {}
    return e
  }
  function ar(b) {
    return aL.createElement(b)
  }
  function aM(b, e, c) {
    b.attachEvent(e, c);
    al[al.length] = [b, e, c]
  }
  function ao(b) {
    var c = ah.pv,
        e = b.split(".");
    e[0] = parseInt(e[0], 10);
    e[1] = parseInt(e[1], 10) || 0;
    e[2] = parseInt(e[2], 10) || 0;
    return (c[0] > e[0] || (c[0] == e[0] && c[1] > e[1]) || (c[0] == e[0] && c[1] == e[1] && c[2] >= e[2])) ? true : false
  }
  function az(c, h, b, e) {
    if (ah.ie && ah.mac) {
      return
    }
    var g = aL.getElementsByTagName("head")[0];
    if (!g) {
      return
    }
    var j = (b && typeof b == "string") ? b : "screen";
    if (e) {
      aH = null;
      an = null
    }
    if (!aH || an != j) {
      var f = ar("style");
      f.setAttribute("type", "text/css");
      f.setAttribute("media", j);
      aH = g.appendChild(f);
      if (ah.ie && ah.win && typeof aL.styleSheets != aq && aL.styleSheets.length > 0) {
        aH = aL.styleSheets[aL.styleSheets.length - 1]
      }
      an = j
    }
    if (ah.ie && ah.win) {
      if (aH && typeof aH.addRule == aD) {
        aH.addRule(c, h)
      }
    } else {
      if (aH && typeof aL.createTextNode != aq) {
        aH.appendChild(aL.createTextNode(c + " {" + h + "}"))
      }
    }
  }
  function ay(b, e) {
    if (!aI) {
      return
    }
    var c = e ? "visible" : "hidden";
    if (ak && aS(b)) {
      aS(b).style.visibility = c
    } else {
      az("#" + b, "visibility:" + c)
    }
  }
  function ai(c) {
    var b = /[\\\"<>\.;]/;
    var e = b.exec(c) != null;
    return e && typeof encodeURIComponent != aq ? encodeURIComponent(c) : c
  }
  var aR = function () {
    if (ah.ie && ah.win) {
      window.attachEvent("onunload", function () {
        var b = al.length;
        for (var c = 0; c < b; c++) {
          al[c][0].detachEvent(al[c][1], al[c][2])
        }
        var f = ag.length;
        for (var e = 0; e < f; e++) {
          aw(ag[e])
        }
        for (var g in ah) {
          ah[g] = null
        }
        ah = null;
        for (var h in swfobject) {
          swfobject[h] = null
        }
        swfobject = null
      })
    }
  }();
  return {
    registerObject: function (b, g, e, c) {
      if (ah.w3 && b && g) {
        var f = {};
        f.id = b;
        f.swfVersion = g;
        f.expressInstall = e;
        f.callbackFn = c;
        aG[aG.length] = f;
        ay(b, false)
      } else {
        if (c) {
          c({
            success: false,
            id: b
          })
        }
      }
    },
    getObjectById: function (b) {
      if (ah.w3) {
        return av(b)
      }
    },
    embedSWF: function (n, g, k, h, e, b, c, l, j, m) {
      var f = {
        success: false,
        id: g
      };
      if (ah.w3 && !(ah.wk && ah.wk < 312) && n && g && k && h && e) {
        ay(g, false);
        aj(function () {
          k += "";
          h += "";
          var t = {};
          if (j && typeof j === aD) {
            for (var r in j) {
              t[r] = j[r]
            }
          }
          t.data = n;
          t.width = k;
          t.height = h;
          var q = {};
          if (l && typeof l === aD) {
            for (var s in l) {
              q[s] = l[s]
            }
          }
          if (c && typeof c === aD) {
            for (var o in c) {
              if (typeof q.flashvars != aq) {
                q.flashvars += "&" + o + "=" + c[o]
              } else {
                q.flashvars = o + "=" + c[o]
              }
            }
          }
          if (ao(e)) {
            var p = aA(t, q, g);
            if (t.id == g) {
              ay(g, true)
            }
            f.success = true;
            f.ref = p
          } else {
            if (b && au()) {
              t.data = b;
              ae(t, q, g, m);
              return
            } else {
              ay(g, true)
            }
          }
          if (m) {
            m(f)
          }
        })
      } else {
        if (m) {
          m(f)
        }
      }
    },
    switchOffAutoHideShow: function () {
      aI = false
    },
    ua: ah,
    getFlashPlayerVersion: function () {
      return {
        major: ah.pv[0],
        minor: ah.pv[1],
        release: ah.pv[2]
      }
    },
    hasFlashPlayerVersion: ao,
    createSWF: function (b, c, e) {
      if (ah.w3) {
        return aA(b, c, e)
      } else {
        return undefined
      }
    },
    showExpressInstall: function (c, b, f, e) {
      if (ah.w3 && au()) {
        ae(c, b, f, e)
      }
    },
    removeSWF: function (b) {
      if (ah.w3) {
        aw(b)
      }
    },
    createCSS: function (c, b, e, f) {
      if (ah.w3) {
        az(c, b, e, f)
      }
    },
    addDomLoadEvent: aj,
    addLoadEvent: aC,
    getQueryParamValue: function (c) {
      var b = aL.location.search || aL.location.hash;
      if (b) {
        if (/\?/.test(b)) {
          b = b.split("?")[1]
        }
        if (c == null) {
          return ai(b)
        }
        var e = b.split("&");
        for (var f = 0; f < e.length; f++) {
          if (e[f].substring(0, e[f].indexOf("=")) == c) {
            return ai(e[f].substring((e[f].indexOf("=") + 1)))
          }
        }
      }
      return ""
    },
    expressInstallCallback: function () {
      if (aU) {
        var b = aS(ac);
        if (b && aJ) {
          b.parentNode.replaceChild(aJ, b);
          if (ad) {
            ay(ad, true);
            if (ah.ie && ah.win) {
              aJ.style.display = "block"
            }
          }
          if (ap) {
            ap(at)
          }
        }
        aU = false
      }
    }
  }
}();

function Tabs(b) {
  $WH.cO(this, b);
  if (this.parent) {
    this.parent = $WH.ge(this.parent)
  } else {
    return
  }
  this.selectedTab = -1;
  this.ul = null;
  this.tabs = [];
  this.nShows = 0;
  if (this.poundable == null) {
    this.poundable = 1
  }
  this.poundedTab = null;
  if (this.onLoad == null) {
    this.onLoad = Tabs.onLoad.bind(this)
  }
  if (this.onShow == null) {
    this.onShow = Tabs.onShow.bind(this)
  }
  if (this.onHide) {
    this.onHide = this.onHide.bind(this)
  }
  this.trackClick = Tabs.trackClick.bind(this)
}
Tabs.prototype = {
  add: function (b, f) {
    var e, c = this.tabs.length;
    e = {
      caption: b,
      index: c,
      owner: this
    };
    $WH.cO(e, f);
    this.tabs.push(e);
    if (this.ul) {
      var g = this.createTab(e);
      $WH.ae(this.ul, g)
    }
    return c
  },
  hide: function (e, g) {
    if (this.tabs[e]) {
      var c = this.selectedTab;
      if (e == 0 && c == -1) {
        this.poundedTab = this.selectedTab = c = 0
      }
      if (e != this.poundedTab) {
        this.selectedTab = -1
      }
      this.tabs[e].hidden = !g;
      this.flush();
      if (!g && e == c) {
        this.selectedTab = c;
        for (var f = 0, b = this.tabs.length; f < b; ++f) {
          if (f != e && !this.tabs[f].hidden) {
            return this.show(f, 1)
          }
        }
      }
    }
  },
  unlock: function (c, e) {
    if (this.tabs[c]) {
      this.tabs[c].locked = e;
      b = $WH.gE(this.ul, "a");
      $(".fa-lock", b[c]).remove();
      if (e) {
        $("div, b", b[c]).prepend('<span class="fa fa-lock" />')
      }
      var b = location.hash.substr(1).split(":")[0];
      if (this.tabs[c].id == b) {
        this.show(c, 1)
      }
    }
  },
  focus: function (b) {
    if (b < 0) {
      b = this.tabs.length + b
    }
    this.forceScroll = 1;
    $WH.gE(this.ul, "a")[b].onclick({}, true);
    this.forceScroll = null
  },
  show: function (c, e, g) {
    var b;
    if (isNaN(c) || c < 0) {
      c = 0
    } else {
      if (c >= this.tabs.length) {
        c = this.tabs.length - 1
      }
    }
    if ((e == null && c == this.selectedTab) || this.tabs[c].hidden) {
      return
    }
    if (this.tabs[c].locked) {
      return this.onShow(this.tabs[c], this.tabs[this.selectedTab])
    }
    if (this.selectedTab != -1) {
      b = this.tabs[this.selectedTab];
      if (this.onHide && !this.onHide(b)) {
        return
      }
      if (b.onHide && !b.onHide()) {
        return
      }
    }++this.nShows;
    b = $WH.gE(this.ul, "a");
    if (this.selectedTab != -1) {
      b[this.selectedTab].className = ""
    }
    b[c].className = "selected";
    if (Platform.isMobile()) {
      var f = function (j) {
        var h = $(j).parent().siblings(".tab-responsive-list");
        if (h.length) {
          if (j.parentNode.getAttribute("data-responsive-hidden") == "true") {
            $("a", h).addClass("selected");
            $("div, b", h).html(this.getMoreTabName(true, $("b", j).html()))
          } else {
            $("a", h).removeClass("selected");
            $("div, b", h).html(this.getMoreTabName(true))
          }
        }
      };
      if (g) {
        setTimeout(f.bind(this, b[c]), 250)
      } else {
        f.call(this, b[c])
      }
    }
    b = this.tabs[c];
    if (b.onLoad) {
      b.onLoad();
      b.onLoad = null
    }
    this.onShow(this.tabs[c], this.tabs[this.selectedTab]);
    if (b.onShow) {
      b.onShow(this.tabs[this.selectedTab])
    }
    this.selectedTab = c
  },
  flush: function (h) {
    var c;
    var b = ($WH.isset("g_thottbot") && g_thottbot);
    var g = $WH.ce("div");
    g.className = "tabs-container";
    var k = (b ? "div" : "ul");
    this.ul = $WH.ce(k);
    this.ul.className = "tabs";
    $WH.ae(g, this.ul);
    for (var e = 0; e < this.tabs.length; ++e) {
      var j = this.tabs[e];
      var f = this.createTab(j);
      $WH.ae(this.ul, f)
    }
    $WH.ee(this.parent);
    $WH.ae(this.parent, g);
    if (this.onLoad) {
      c = this.onLoad();
      if (c != null) {
        this.poundedTab = h = c
      }
    }
    this.show(h, null, true);
    if (Platform.isMobile()) {
      setTimeout((function () {
        this.collapseExtraTabs()
      }).bind(this), 1)
    }
  },
  createTab: function (k) {
    var f = ($WH.isset("g_thottbot") && g_thottbot);
    var h, c, g;
    if (f) {
      h = $WH.ce("span")
    } else {
      h = $WH.ce("li");
      c = $WH.ce("b")
    }
    var e = $WH.ce("a");
    if (k.className) {
      h.className = k.className
    }
    if (k.hidden) {
      h.style.display = "none"
    }
    if (this.poundable && !k.noPound) {
      e.href = "#" + k.id
    } else {
      e.href = "javascript:;"
    }
    $WH.ns(e);
    if (k.menu) {
      Menu.add(e, k.menu, {
        showAtElement: true,
        onShow: k.onShowMenu,
        onHide: k.onHideMenu
      })
    } else {
      e.onclick = Tabs.onClick.bind(k, e)
    }
    var j = $WH.ce("div");
    if (k.locked) {
      g = $WH.ce("span", {
        className: "fa fa-lock"
      });
      $WH.ae(f ? e : j, g)
    } else {
      if (k.icon) {
        g = $WH.ce("span", {
          classname: "icontiny"
        });
        g.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + k.icon.toLowerCase() + ".gif)";
        $WH.ae(f ? e : j, g)
      } else {
        if (k.image) {
          g = $WH.ce("img");
          $.extend(g, k.image);
          $WH.ae(f ? e : j, g)
        } else {
          if (k.fontIcon) {
            g = $WH.ce("i", {
              className: "fa fa-" + k.fontIcon
            });
            $WH.ae(f ? e : j, g)
          }
        }
      }
    }
    if (k.tooltip) {
      e.onmouseover = (function (b, l) {
        $WH.Tooltip.showAtCursor(l, b, 0, 0, "q")
      }).bind(e, k.tooltip);
      e.onmousemove = $WH.Tooltip.cursorUpdate;
      e.onmouseout = $WH.Tooltip.hide
    }
    if (k["class"]) {
      j.className = k["class"]
    }
    $WH.ae(j, $WH.ct(k.caption));
    $WH.ae(e, j);
    if (k.locked) {
      g = $WH.ce("span", {
        className: "fa fa-lock"
      });
      $WH.ae(f ? e : c, g)
    } else {
      if (k.icon) {
        g = $WH.ce("span", {
          className: "icontiny"
        });
        g.style.backgroundImage = "url(" + g_staticUrl + "/images/wow/icons/tiny/" + k.icon.toLowerCase() + ".gif)";
        $WH.ae(f ? e : c, g)
      } else {
        if (k.image) {
          g = $WH.ce("img");
          $.extend(g, k.image);
          $WH.ae(f ? e : c, g)
        } else {
          if (k.fontIcon) {
            g = $WH.ce("i", {
              className: "fa fa-" + k.fontIcon
            });
            $WH.ae(f ? e : c, g)
          }
        }
      }
    }
    if (f) {
      $WH.ae(e, $WH.ct(k.caption))
    } else {
      $WH.ae(c, $WH.ct(k.caption));
      $WH.ae(e, c)
    }
    $WH.ae(h, e);
    return h
  },
  collapseExtraTabs: function () {
    var e = $(this.ul);
    if (e.height() > 140) {
      var h = $("> li", e);
      var l = [];
      var c = [];
      h.each(function (p) {
        var q = $(this);
        var o = q.position();
        if (o.top > 110) {
          c.push(q)
        } else {
          l.push(q);
          while (l.length > 2) {
            l.shift()
          }
        }
      });
      while (c.length > 0 && l.length > 0) {
        c.unshift(l.pop())
      }
      var b = h.length - c.length;
      var g = [];
      var n = /<img[^>]+src="([^">]*)"[^>]*>\s*/;
      for (var f = 0, k; k = c[f]; f++) {
        k.attr("data-responsive-hidden", "true");
        var j = [f, $("b", k).html(), (function (o) {
          $("a", o).trigger("click");
          $("html, body").animate({
            scrollTop: $(this.ul).offset().top - 42
          }, 150)
        }).bind(this, k), null,
        {
          checkedFunc: (function (o) {
            return this.selectedTab == o
          }).bind(this, f + b)
        }];
        var m = j[MENU_IDX_NAME].match(n);
        if (m) {
          j[MENU_IDX_OPT].icon = m[1]
        }
        j[MENU_IDX_NAME] = j[MENU_IDX_NAME].replace(/<[^>]*>/, "");
        g.push(j)
      }
      this.add(this.getMoreTabName(false), {
        className: "tab-responsive-list",
        fontIcon: "bars",
        menu: g,
        onShowMenu: (function () {
          $(this.currentTabContents).addClass("tab-fade")
        }).bind(this),
        onHideMenu: (function () {
          $(".tab-fade").removeClass("tab-fade")
        }).bind(this),
        noPound: false
      })
    }
  },
  getMoreTabName: function (c, e) {
    var b = c ? '<i class="fa fa-bars"></i>' : "";
    if (e) {
      b += " &ndash; " + e
    }
    return b
  },
  setTabName: function (e, c) {
    this.tabs[e].caption = c;
    var b = $WH.gE(this.ul, "a");
    g_setTextNodes(b[e], c)
  },
  setTabPound: function (e, b) {
    if (!this.poundable) {
      return
    }
    var c = $WH.gE(this.ul, "a");
    c[e].href = "#" + this.tabs[e].id + (b ? ":" + b : "")
  },
  setTabTooltip: function (c, e) {
    this.tabs[c].tooltip = e;
    var b = $WH.gE(this.ul, "a");
    if (e == null) {
      b[c].onmouseover = b[c].onmousemove = b[c].onmouseout = null
    } else {
      b[c].onmouseover = function (f) {
        $WH.Tooltip.showAtCursor(f, e, 0, 0, "q2")
      };
      b[c].onmousemove = $WH.Tooltip.cursorUpdate;
      b[c].onmouseout = $WH.Tooltip.hide
    }
  },
  getSelectedTab: function () {
    return this.selectedTab
  },
  getTabById: function (e) {
    for (var c = 0, b = this.tabs.length; c < b; ++c) {
      if (this.tabs[c].id == e) {
        return c
      }
    }
  }
};
Tabs.onClick = function (b, h, g) {
  if (g == null && this.index == this.owner.selectedTab) {
    return
  }
  var f = $WH.rf2(h);
  if (f == null) {
    return
  }
  Menu.hide();
  this.owner.show(this.index, g);
  if (this.owner.poundable && !this.locked) {
    var c = b.href.indexOf("#");
    c != -1 && location.replace(b.href.substr(c))
  }
  return f
};
Tabs.onLoad = function () {
  if (!this.poundable || !location.hash.length) {
    return
  }
  var b = location.hash.substr(1).split(":")[0];
  if (b) {
    return $WH.in_array(this.tabs, b, function (c) {
      if (!c.locked) {
        return c.id
      }
    })
  }
};
Tabs.onShow = function (f, g) {
  var c;
  if (f.hidden || f.locked) {
    return
  }
  if (g) {
    $WH.ge("tab-" + g.id).style.display = "none"
  }
  if (this.poundedTab != null || g) {
    this.trackClick(f)
  }
  c = $WH.ge("tab-" + f.id);
  c.style.display = "";
  this.currentTabContents = c;
  if (((this.nShows == 1 && this.poundedTab != null && this.poundedTab >= 0) || this.forceScroll) && !this.noScroll) {
    var e, b;
    if (this.__st) {
      e = this.__st;
      b = 15
    } else {
      e = c;
      b = this.parent.offsetHeight + 15
    }
    setTimeout($WH.g_scrollTo.bind(null, e, b), 10)
  }
};
Tabs.trackClick = function (b) {
  if (!this.trackable || b.tracked) {
    return
  }
  g_trackEvent("Tabs", "Show", this.trackable + ": " + b.id);
  b.tracked = 1
};

function g_trackPageview(b) {
  function c() {
    if (typeof _gaq != "undefined") {
      _gaq.push(["_trackPageview", b])
    }
  }
  $(document).ready(c)
}
function g_trackEvent(f, b, e, g) {
  function c() {
    if (typeof _gaq != "undefined") {
      _gaq.push(["_trackEvent", f, b, e, g])
    }
  }
  $(document).ready(c)
}
function g_attachTracking(g, f, b, e, h) {
  var c = $(g);
  c.click(function () {
    g_trackEvent(f, b, e, h)
  })
}
function g_addAnalytics() {
  var f = {
    "database-logo": {
      category: "Homepage Logo",
      actions: {
        "Click image": function (e) {
          return true
        }
      }
    },
    "database-featuredbox": {
      category: "Featured Box",
      actions: {
        "Follow link": function (e) {
          return (e.parentNode.className != "database-featuredbox-links")
        },
        "Click image": function (e) {
          return (e.parentNode.className == "database-featuredbox-links")
        }
      }
    },
    "database-oneliner": {
      category: "Oneliner",
      actions: {
        "Follow link": function (e) {
          return true
        }
      }
    },
    "sidebar-container": {
      category: "Page sidebar",
      actions: {
        "Click image": function (e) {
          return true
        }
      }
    },
    "toptabs-promo": {
      category: "Page header",
      actions: {
        "Click image": function (e) {
          return true
        }
      }
    }
  };
  for (var b in f) {
    var c = $WH.ge(b);
    if (c) {
      g_addAnalyticsToNode(c, f[b])
    }
  }
}
function g_getNodeTextId(b) {
  var e = null;
  var c = g_getFirstTextContent(b);
  if (c) {
    e = g_urlize(c)
  } else {
    if (b.title) {
      e = g_urlize(b.title)
    } else {
      if (b.id) {
        e = g_urlize(b.id)
      }
    }
  }
  return e
}
function g_addAnalyticsToNode(e, b, h) {
  if (!b || !b.actions || !b.category) {
    if ($WH.isset("g_dev") && g_dev) {
      console.log("Tried to add analytics event without appropriate parameters.");
      console.log(e);
      console.log(b)
    }
    return
  }
  var c = b.category;
  var l = $WH.gE(e, "a");
  for (var g = 0; g < l.length; ++g) {
    var e = l[g];
    var f = "Follow link";
    for (var k in b.actions) {
      if (b.actions[k] && b.actions[k](e)) {
        f = k;
        break
      }
    }
    var j = (h ? h + "-" : "") + g_getNodeTextId(e);
    g_attachTracking(e, c, f, j)
  }
}
$(document).ready(g_addAnalytics);

function g_getReputationPlusAchievementText(b, c, f, g) {
  var h = g_getAchievementText(b, c, f, true);
  var j = $("<span>").addClass("wsach-pts");
  j.mouseover(function (k) {
    $WH.Tooltip.showAtCursor(k, LANG.reputationtip, 0, 0, "q")
  }).mousemove(function (k) {
    $WH.Tooltip.cursorUpdate(k)
  }).mouseout(function () {
    $WH.Tooltip.hide()
  });
  j.css("color", "white");
  j.text($WH.number_format(g));
  var e = $("<span>");
  e.append(" (");
  e.append(j);
  e.append(" &ndash; ");
  e.append(h);
  e.append(") ");
  return e
}
function g_getAchievementText(b, c, g, e) {
  var f = $("<span>").addClass("wsach-pts");
  f.mouseover(function (j) {
    $WH.Tooltip.showAtCursor(j, LANG.userachcount_tip, 0, 0, "q")
  }).mousemove(function (j) {
    $WH.Tooltip.cursorUpdate(j)
  }).mouseout(function () {
    $WH.Tooltip.hide()
  });
  var h = " ";
  if (!e) {
    h += " ("
  }
  if (b) {
    h += "<i>" + b + "</i>&middot;"
  }
  if (c) {
    h += "<b>" + c + "</b>&middot;"
  }
  if (!g) {
    g = 0
  }
  h += "<u>" + g + "</u>";
  if (!e) {
    h += ")"
  }
  f.html(h);
  return f
}
function g_addTooltip(c, e, b) {
  if (!b && e.indexOf("<table>") == -1) {
    b = "q"
  }
  $WH.Tooltip.simple(c, e, b)
}
function g_addStaticTooltip(c, e, b) {
  if (!b && e.indexOf("<table>") == -1) {
    b = "q"
  }
  c.onmouseover = function (f) {
    $WH.Tooltip.show(c, e, 0, 0, b)
  };
  c.onmouseout = $WH.Tooltip.hide
}
function g_formatTimeElapsed(h, c) {
  function f(q, p, o) {
    if (o && LANG.timeunitsab[p] == "") {
      o = 0
    }
    if (o) {
      return q + " " + LANG.timeunitsab[p]
    } else {
      return q + " " + (q == 1 ? LANG.timeunitssg[p] : LANG.timeunitspl[p])
    }
  }
  var k = [31557600, 2629800, 604800, 86400, 3600, 60, 1];
  var b = [1, 3, 3, -1, 5, -1, -1];
  h = Math.max(h, 1);
  for (var j = 3, l = k.length; j < l; ++j) {
    if (h >= k[j]) {
      var g = j;
      var n = Math.floor(h / k[g]);
      if (b[g] != -1) {
        var e = b[g];
        h %= k[g];
        var m = Math.floor(h / k[e]);
        if (m > 0) {
          return f(n, g, 1) + " " + f(m, e, 1)
        }
      }
      return f(n, g, 0)
    }
  }
  return "(n/a)"
}
function g_GetStaffColorFromRoles(b) {
  if (b & U_GROUP_ADMIN) {
    return "comment-blue"
  }
  if (b & U_GROUP_GREEN_TEXT) {
    return "comment-green"
  }
  if (b & U_GROUP_VIP) {
    return "comment-gold"
  }
  if (b & U_GROUP_PREMIUM) {
    return "comment-gold"
  }
  return ""
}
function g_formatDate(e, m, b, f, n) {
  var h = new Date();
  var c = new Date();
  c.setTime(h.getTime() - (1000 * m));
  var g;
  var j = new Date(c.getYear(), c.getMonth(), c.getDate());
  var o = new Date(h.getYear(), h.getMonth(), h.getDate());
  var l = (o.getTime() - j.getTime());
  l /= 1000;
  l /= 86400;
  l = Math.round(l);
  if (m >= 2592000) {
    g = LANG.date_on + g_formatDateSimple(b, f)
  } else {
    if (l > 1) {
      g = $WH.sprintf(LANG.ddaysago, l);
      if (e) {
        var k = new Date();
        k.setTime(b.getTime() + (g_localTime - g_serverTime));
        e.className += (($WH.isset("g_thottbot") && g_thottbot) ? "" : " tip");
        e.title = k.toLocaleString()
      }
    } else {
      if (m >= 43200) {
        if (h.getDay() == c.getDay()) {
          g = LANG.today
        } else {
          g = LANG.yesterday
        }
        g = g_formatTimeSimple(c, g);
        if (e) {
          var k = new Date();
          k.setTime(b.getTime() + (g_localTime - g_serverTime));
          e.className += " tip";
          e.title = k.toLocaleString()
        }
      } else {
        var g = $WH.sprintf(LANG.date_ago, g_formatTimeElapsed(m));
        if (e) {
          var k = new Date();
          k.setTime(b.getTime() + (g_localTime - g_serverTime));
          e.className += " tip";
          e.title = k.toLocaleString()
        }
      }
    }
  }
  if (n == 1) {
    g = g.substr(0, 1).toUpperCase() + g.substr(1)
  }
  if (e) {
    $WH.ae(e, $WH.ct(g))
  } else {
    return g
  }
}
function g_formatDateSimple(k, j) {
  function f(b) {
    return (b < 10 ? "0" + b : b)
  }
  var c = "",
      e = k.getDate(),
      h = k.getMonth() + 1,
      g = k.getFullYear();
  if (g <= 1970) {
    c += LANG.unknowndate_stc
  } else {
    c += $WH.sprintf(LANG.date_simple, f(e), f(h), g)
  }
  if (j != null) {
    c = g_formatTimeSimple(k, c)
  }
  return c
}
function g_formatTimeSimple(h, b, f) {
  function e(j) {
    return (j < 10 ? "0" + j : j)
  }
  var c = h.getHours(),
      g = h.getMinutes();
  if (b == null) {
    b = ""
  }
  b += (f ? " " : LANG.date_at);
  if (c == 12) {
    b += LANG.noon
  } else {
    if (c == 0) {
      b += LANG.midnight
    } else {
      if (c > 12) {
        b += (c - 12) + ":" + e(g) + " " + LANG.pm
      } else {
        b += c + ":" + e(g) + " " + LANG.am
      }
    }
  }
  return b
}
function g_formatStartEndDates(g, c) {
  if (!g && !c) {
    return ""
  }
  var j = false;
  var f = false;
  if (g) {
    j = new Date(g.getUTCFullYear(), g.getUTCMonth(), g.getUTCDate())
  }
  if (c) {
    f = new Date(c.getUTCFullYear(), c.getUTCMonth(), c.getUTCDate())
  }
  var m = "";
  if (!f) {
    m = LANG.tab_starts + " " + j.toLocaleDateString()
  } else {
    if (!j) {
      m = LANG.tab_ends + " " + f.toLocaleDateString()
    } else {
      var h = (function () {
        try {
          new Date().toLocaleDateString("i")
        } catch (n) {
          return n.name === "RangeError"
        }
        return false
      })();
      var e = {
        month: "long",
        year: "numeric"
      };
      var l = "",
          k = "",
          b = 0;
      if (h && (j.getDate() == 1)) {
        l = j.toLocaleDateString(undefined, e);
        b++
      } else {
        l = j.toLocaleDateString()
      }
      if (h && ((new Date(f.valueOf() + 36 * 60 * 60 * 1000)).getMonth() != f.getMonth())) {
        k = f.toLocaleDateString(undefined, e);
        b++
      } else {
        k = f.toLocaleDateString()
      }
      if (l == k) {
        m = l
      } else {
        if (b == 1) {
          m = j.toLocaleDateString() + " - " + f.toLocaleDateString()
        } else {
          m = l + " - " + k
        }
      }
    }
  }
  return m
}
function g_createGlow(b, k) {
  var f = $WH.ce("span");
  for (var e = -1; e <= 1; ++e) {
    for (var c = -1; c <= 1; ++c) {
      var h = $WH.ce("div");
      h.style.position = "absolute";
      h.style.whiteSpace = "nowrap";
      h.style.left = e + "px";
      h.style.top = c + "px";
      if (e == 0 && c == 0) {
        h.style.zIndex = 4
      } else {
        h.style.color = "black";
        h.style.zIndex = 2
      }
      h.innerHTML = b;
      $WH.ae(f, h)
    }
  }
  f.style.position = "relative";
  f.className = "glow" + (k != null ? " " + k : "");
  var g = $WH.ce("span");
  g.style.visibility = "hidden";
  $WH.ae(g, $WH.ct(b));
  $WH.ae(f, g);
  return f
}
function g_createProgressBar(e) {
  if (e == null) {
    e = {}
  }
  if (typeof e.text == "undefined") {
    e.text = " "
  }
  if (e.color == null) {
    e.color = "rep0"
  }
  if (e.width == null || e.width > 100) {
    e.width = 100
  }
  var f, g;
  if (e.hoverText) {
    f = $WH.ce("a");
    f.href = "javascript:;"
  } else {
    f = $WH.ce("span")
  }
  f.className = "progressbar";
  if (e.text || e.hoverText) {
    g = $WH.ce("div");
    g.className = "progressbar-text";
    if (e.text) {
      var b = $WH.ce("del");
      $WH.ae(b, $WH.ct(e.text));
      $WH.ae(g, b)
    }
    if (e.hoverText) {
      var c = $WH.ce("ins");
      $WH.ae(c, $WH.ct(e.hoverText));
      $WH.ae(g, c)
    }
    $WH.ae(f, g)
  }
  g = $WH.ce("div");
  g.className = "progressbar-" + e.color;
  g.style.width = e.width + "%";
  if (e.height) {
    g.style.height = e.height
  }
  $WH.ae(g, $WH.ct(String.fromCharCode(160)));
  $WH.ae(f, g);
  if (e.text) {
    var g = $WH.ce("div");
    g.className = "progressbar-text progressbar-hidden";
    $WH.ae(g, $WH.ct(e.text));
    $WH.ae(f, g)
  }
  return f
}
function g_createReputationBar(k, g) {
  if (!g) {
    g = 0
  }
  var j = g_getReputationProgress(g);
  var f = j.length > 0 ? (j[j.length - 1][1] + 999) : 0;
  if (!k) {
    k = 0
  }
  if (k < 0) {
    k = 0
  } else {
    if (k > f) {
      k = f
    }
  }
  var b = k,
      h = 0,
      l, e = f;
  if (f != 0) {
    while (h < j.length) {
      if (k < j[h][1]) {
        break
      }++h
    }--h;
    b -= j[h][1];
    e = (h + 1 < j.length) ? (j[h + 1][1] - j[h][1]) : 999
  }
  if (g) {
    l = g_friendship_reactions[$WH.sprintf("$1-$2", g, h)]
  } else {
    l = g_reputation_standings[h]
  }
  var c = {
    text: l,
    hoverText: b + " / " + e,
    color: "rep" + h,
    width: parseInt(b / e * 100)
  };
  return g_createProgressBar(c)
}
function g_getReputationProgress(b) {
  if ($WH.isset("g_friendships_thresholds") && b && g_friendships_thresholds[b] && $WH.is_array(g_friendships_thresholds[b])) {
    return g_friendships_thresholds[b]
  }
  return [[0, 0], [0, 36000], [0, 39000], [0, 42000], [0, 45000], [0, 51000], [0, 63000], [0, 84000]]
}
function g_createAchievementBar(c, f, b, g) {
  if (!c) {
    c = 0
  }
  var e = {
    text: c + (g > 0 ? "(+" + g + ")" : "") + (f > 0 ? " / " + f : ""),
    color: (b ? "rep7" : "ach" + (f > 0 ? 0 : 1)),
    width: (f > 0 ? parseInt(c / f * 100) : 100)
  };
  return g_createProgressBar(e)
}
function g_createCaptcha(h, g) {
  if (g_captchaType == 1) {
    var b = {
      0: "en",
      2: "fr",
      3: "de",
      6: "es",
      7: "ru"
    };
    Recaptcha.create("6Lf127oSAAAAAJ4QhB9VuZPCEyt7jA1xLd2TFEjh", h, {
      theme: "blackglass",
      lang: b[Locale.getId()]
    })
  } else {
    var e = $("#" + h);
    var c = $("<a/>", {
      href: "javascript:;",
      "class": "captcha",
      title: LANG.tooltip_captcha,
      css: {
        "background-image": "url(/captcha?foo=" + Math.random() + ")"
      },
      click: function () {
        this.style.backgroundImage = "url(/captcha?foo=" + Math.random() + ")"
      }
    });
    if (g === true) {
      c.css({
        "margin-left": "auto",
        "margin-right": "auto"
      })
    } else {
      c.css("margin-left", "15px")
    }
    e.append($("<div/>").append(c));
    var f = $("<input/>", {
      type: "text",
      name: "captcha",
      maxlength: 5,
      css: {
        width: "3.3em",
        "text-align": "center"
      }
    });
    e.append("<small>" + LANG.ct_dialog_captcha + "</small>");
    e.append(f)
  }
}
function g_revealCaptcha(h, c, f, g) {
  if (g_requireCaptcha() || c) {
    var b = $("#" + h);
    if (b.length == 0 || b.has("#recaptcha_area").length > 0 || b.has("a.captcha").length > 0) {
      return
    }
    g_createCaptcha(h, f)
  } else {
    if (!c) {
      var b = $("#" + h);
      var e = $("<input/>", {
        type: "hidden",
        name: "skipcaptcha",
        val: 1
      });
      b.append(e)
    }
  }
  if (typeof g != "string") {
    g = "General"
  }
  g_trackCaptcha(g)
}
function g_trackCaptcha(b) {
  if (typeof _gaq == "undefined") {
    setTimeout(function () {
      g_trackCaptcha(b)
    }, 200);
    return
  }
  _gaq.push(["_trackEvent", "Captcha", "Impression", b])
}
function g_getMoneyHtml(b, j, g, c, o) {
  var m = 0,
      f = "";
  if (j == 1 || j == "alliance") {
    j = 1
  } else {
    if (j == 2 || j == "horde") {
      j = 2
    } else {
      j = 3
    }
  }
  if (b >= 10000) {
    m = 1;
    var k = Math.floor(b / 10000);
    f += '<span class="moneygold">' + $WH.number_format(k) + "</span>";
    b %= 10000
  }
  if (b >= 100) {
    if (m) {
      f += " "
    } else {
      m = 1
    }
    var k = Math.floor(b / 100);
    f += '<span class="moneysilver">' + k + "</span>";
    b %= 100
  }
  if (b >= 1) {
    if (m) {
      f += " "
    } else {
      m = 1
    }
    f += '<span class="moneycopper">' + b + "</span>"
  }
  if (g != null) {
    for (var e = 0; e < g.length; ++e) {
      if (m) {
        f += " "
      } else {
        m = 1
      }
      var p = g[e][0];
      var h = g[e][1];
      var l = (g_items[p] && g_items[p].icon ? g_items[p].icon : "inv_misc_questionmark");
      f += '<a href="/item=' + p + '" class="moneyitem" style="background-image: url(' + g_staticUrl + "/images/wow/icons/tiny/" + l.toLowerCase() + '.gif)">' + h + "</a>"
    }
  }
  if (c != null) {
    for (var e = 0; e < c.length; ++e) {
      if (m) {
        f += " "
      } else {
        m = 1
      }
      var n = c[e][0];
      var h = c[e][1];
      var l = (g_gatheredcurrencies[n] && g_gatheredcurrencies[n].icon ? g_gatheredcurrencies[n].icon : ["inv_misc_questionmark", "inv_misc_questionmark"]);
      if (j == 3 && l[0] == l[1]) {
        j = 1
      }
      f += '<a href="/currency=' + n + '" class="icontinyr tip q1" onmouseover="Listview.funcBox.moneyCurrencyOver(' + n + ", " + h + ', event)" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()" style="background-image: url(' + g_staticUrl + "/images/wow/icons/tiny/" + l[(j == 3 ? 1 : j - 1)].toLowerCase() + '.gif)">' + (j == 3 ? '<span class="icontinyr" style="background-image: url(' + g_staticUrl + "/images/wow/icons/tiny/" + l[0].toLowerCase() + '.gif)">' : "") + h + (j == 3 ? "</span>" : "") + "</a>"
    }
  }
  if (o > 0) {
    if (m) {
      f += " "
    } else {
      m = 1
    }
    f += '<span class="moneyachievement tip" onmouseover="Listview.funcBox.moneyAchievementOver(event)" onmousemove="$WH.Tooltip.cursorUpdate(event)" onmouseout="$WH.Tooltip.hide()">' + $WH.number_format(o) + "</span>"
  }
  return f
}
function g_pickerWheel(b) {
  b = $WH.$E(b);
  if (b._wheelDelta < 0) {
    this.scrollTop += 27
  } else {
    this.scrollTop -= 27
  }
}
function g_setSelectedLink(e, c) {
  if (!g_setSelectedLink.groups) {
    g_setSelectedLink.groups = {}
  }
  var b = g_setSelectedLink.groups;
  if (b[c]) {
    b[c].className = b[c].className.replace("selected", "")
  }
  e.className += " selected";
  b[c] = e
}
function g_setCheckedRow(e, c) {
  if (!g_setCheckedRow.groups) {
    g_setCheckedRow.groups = {}
  }
  var b = g_setCheckedRow.groups;
  if (b[c]) {
    b[c].className = b[c].className.replace("checked", "")
  }
  e.className += " checked";
  b[c] = e
}
function g_addPages(m, c) {
  function p(t, r) {
    var s;
    if (t == c.page) {
      s = $WH.ce("span");
      s.className = "selected"
    } else {
      s = $WH.ce("a");
      s.href = (t > 1 ? c.url + c.sep + t + c.pound : c.url + c.pound)
    }
    $WH.ae(s, $WH.ct(r != null ? r : t));
    return s
  }
  if (!c.pound) {
    c.pound = ""
  }
  if (!c.sep) {
    c.sep = "."
  }
  if (c.allOrNothing && c.nPages <= 1) {
    return
  }
  var e = (c.align && c.align == "left");
  var f = $WH.ce("div"),
      l, q = $WH.ce("var");
  f.className = "pages";
  if (e) {
    f.className += " pages-left"
  }
  if (c.nPages > 1) {
    l = $WH.ce("div");
    l.className = "pages-numbers";
    var o = Math.max(2, c.page - 2);
    var j = Math.min(c.nPages - 1, c.page + 2);
    var n = [];
    if (c.page != c.nPages) {
      n.push(p(c.page + 1, String.fromCharCode(187)))
    }
    n.push(p(c.nPages));
    if (j < c.nPages - 1) {
      var b = $WH.ce("span");
      $WH.ae(b, $WH.ct("..."));
      n.push(b)
    }
    for (var h = j; h >= o; --h) {
      n.push(p(h))
    }
    if (o > 2) {
      var b = $WH.ce("span");
      $WH.ae(b, $WH.ct("..."));
      n.push(b)
    }
    n.push(p(1));
    if (c.page != 1) {
      n.push(p(c.page - 1, String.fromCharCode(171)))
    }
    if (e) {
      n.reverse()
    }
    for (var h = 0, k = n.length; h < k; ++h) {
      $WH.ae(l, n[h])
    }
    l.firstChild.style.marginRight = "0";
    l.lastChild.style.marginLeft = "0"
  }
  var q = $WH.ce("var");
  $WH.ae(q, $WH.ct($WH.sprintf(LANG[c.wording[c.nItems == 1 ? 0 : 1]], c.nItems)));
  if (c.nPages > 1) {
    var b = $WH.ce("span");
    $WH.ae(b, $WH.ct(String.fromCharCode(8211)));
    $WH.ae(q, b);
    var g = $WH.ce("a");
    g.className = "gotopage";
    g.href = "javascript:;";
    $WH.ns(g);
    g.onclick = function () {
      var r = prompt($WH.sprintf(LANG.prompt_gotopage, 1, c.nPages), c.page);
      if (r != null) {
        r |= 0;
        if (r != c.page && r >= 1 && r <= c.nPages) {
          document.location.href = (r > 1 ? c.url + c.sep + r + c.pound : c.url + c.pound)
        }
      }
    };
    g.onmouseover = function (r) {
      $WH.Tooltip.showAtCursor(r, LANG.tooltip_gotopage, 0, 0, "q2")
    };
    g.onmousemove = $WH.Tooltip.cursorUpdate;
    g.onmouseout = $WH.Tooltip.hide;
    $WH.ae(q, g)
  }
  if (e) {
    $WH.ae(f, q);
    if (l) {
      $WH.ae(f, l)
    }
  } else {
    if (l) {
      $WH.ae(f, l)
    }
    $WH.ae(f, q)
  }
  $WH.ae(m, f)
}
function g_disclose(b, c) {
  c.className = "disclosure-" + (g_toggleDisplay(b) ? "on" : "off");
  return false
}
function g_setupChangeWarning(h, e, c) {
  if (!h) {
    return
  }
  function g() {
    return c
  }
  h.submit(function () {
    window.onbeforeunload = null
  });
  var f = [];
  for (var b in e) {
    var j = e[b];
    if (!j) {
      continue
    }
    f[b] = j.val();
    j.keydown(function () {
      for (var k in e) {
        var l = e[k];
        if (!l) {
          continue
        }
        if (l.val() != f[k]) {
          window.onbeforeunload = g;
          return
        }
        window.onbeforeunload = null
      }
    })
  }
}
$(document).ready(function () {
  $("dfn").each(function () {
    var b = $(this).attr("title");
    $(this).attr("title", "").addClass("tip").mouseover(function (c) {
      $WH.Tooltip.showAtCursor(c, b, 0, 0, "q")
    }).mousemove(function (c) {
      $WH.Tooltip.cursorUpdate(c)
    }).mouseout(function () {
      $WH.Tooltip.hide()
    })
  });
  $(".text").bind("copy", function () {
    $("*[unselectable]", this).each(function (e, c) {
      var b = $(c).text();
      $(c).text("");
      setTimeout(function () {
        $(c).text(b)
      }, 1)
    })
  })
});

function g_GetExpansionClassName(b) {
  switch (b) {
  case 0:
    return null;
  case 1:
    return "icon-bc-right";
  case 2:
    return "icon-wotlk-right";
  case 3:
    return "icon-cata-right";
  case 4:
    return "icon-mop-right";
  case 5:
    return "icon-warlords-right"
  }
  return "icon-unknown" + b + "-right"
}
function UpdateProgressBar(b, e) {
  if (!c || e < 0 || e > 100) {
    return
  }
  var c = $(b);
  c.find("b").text(e + "%");
  c.find("img").css("background-position", (-120 + Math.floor(e * 1.2)) + "px 50%")
}
$(document).ready(function () {
  $("input").each(function () {
    var e = $(this).attr("maxlength");
    var c = $(this).attr("data-charwarning");
    var b = c ? $("#" + c) : null;
    if (!e || !b) {
      return
    }
    hide = function () {
      b.hide()
    };
    display = function (f) {
      var j = e - f;
      var k = f / e;
      var h = parseInt((k >= 0.5) ? 255 : (k * 2 * 255)).toString(16);
      var g = parseInt((k < 0.5) ? 255 : (255 - ((k - 0.5) * 2 * 255))).toString(16);
      if (h.length == 1) {
        h = "0" + h
      }
      if (g.length == 1) {
        g = "0" + g
      }
      b.text($WH.sprintf(LANG.charactersremaining_format, j));
      b.show();
      b.css("color", "#" + h + g + "00")
    };
    $(this).focus(function () {
      display($(this).val().length)
    }).blur(function () {
      hide()
    }).keyup(function () {
      display($(this).val().length)
    })
  })
});

function GetN5(c) {
  var b = Math.abs(c);
  if (b < 10000) {
    return $WH.number_format(c)
  }
  if (b < 100000) {
    return (Math.round(c / 100) / 10) + "k"
  }
  if (b < 1000000) {
    return Math.round(c / 1000) + "k"
  }
  if (b < 10000000) {
    return (Math.round(c / 1000 / 10) / 100) + "m"
  }
  if (b < 100000000) {
    return (Math.round(c / 1000 / 100) / 10) + "m"
  }
  if (b < 1000000000) {
    return Math.round(c / 1000 / 1000) + "m"
  }
  if (b < 10000000000) {
    return (Math.round(c / 1000 / 1000 / 10) / 100) + "b"
  }
  if (b < 10000000000) {
    return (Math.round(c / 1000 / 1000 / 100) / 10) + "b"
  }
  return Math.round(c / 1000 / 1000 / 1000) + "b"
}
function CreateAjaxLoader() {
  return $("<img>").attr("alt", "").attr("src", g_staticUrl + "/images/icons/ajax.gif").addClass("ajax-loader")
}
var UrlShortener = {
  get: function (b) {
    var c = "http://ggl-shortener.appspot.com/?url=" + $WH.urlencode2(b) + "&jsonp=UrlShortener.callback";
    $.getScript(c)
  },
  callback: function (b) {
    if (b && b.short_url) {
      prompt(LANG.message_sharetheurlbelow, b.short_url)
    }
  }
};

function g_getMajorHeading(g, f, e, c) {
  if (isNaN(f) || f < 1 || f > 6) {
    f = 2
  }
  if (isNaN(e) || e < 1 || e > 6) {
    e = f
  }
  var b = ["heading-size-" + e];
  return g_constructHeading("h" + f, g, b, c)
}
function g_getImitationHeading(f, e, c) {
  if (isNaN(e) || e < 1 || e > 6) {
    e = 2
  }
  var b = ["imitation-heading", "heading-size-" + e];
  return g_constructHeading("div", f, b, c)
}
function g_constructHeading(b, g, f, e) {
  if (typeof e != "object") {
    e = {}
  }
  if (typeof e.classes == "string") {
    f.push(e.classes)
  }
  var h = $WH.ce(b);
  h.className = f.join(" ");
  if (typeof e.styles == "string") {
    h.style = e.styles
  }
  if (typeof e.id == "string") {
    h.id = e.id
  }
  if (typeof g == "string") {
    h.innerHTML = g
  } else {
    if (g.nodeType === 1 || g.nodeType === 3) {
      h.appendChild(g)
    } else {
      $(h).append(g)
    }
  }
  if (e.asString) {
    var c = $WH.ce("div");
    $WH.ae(c, h);
    return c.innerHTML
  }
  return h
}
function g_createRange(f, b) {
  var c = {};
  for (var e = f; e <= b; ++e) {
    c[e] = e
  }
  return c
}
function g_sortIdArray(b, c, e) {
  b.sort(e ?
  function (g, f) {
    return $WH.strcmp(c[g][e], c[f][e])
  } : function (g, f) {
    return $WH.strcmp(c[g], c[f])
  })
}
function g_sortJsonArray(g, f, h, b) {
  var e = [];
  for (var c in g) {
    if (f[c] && (b == null || b(f[c]))) {
      e.push(c)
    }
  }
  if (h != null) {
    e.sort(h)
  } else {
    g_sortIdArray(e, f)
  }
  return e
}
function g_isEqualSimpleObject(b, c) {
  for (var f in b) {
    if (typeof b[f] == "object") {
      if (typeof c[f] != "object") {
        return false
      }
      if (!g_isEqualSimpleObject(b[f], c[f])) {
        return false
      }
    } else {
      if (b[f] !== c[f]) {
        return false
      }
    }
  }
  for (var e in c) {
    if (typeof c[e] == "object") {
      if (typeof b[e] != "object") {
        return false
      }
      if (!g_isEqualSimpleObject(b[e], c[e])) {
        return false
      }
    } else {
      if (b[e] !== c[e]) {
        return false
      }
    }
  }
  return true
}
function g_urlize(c, e) {
  var b = $WH.ce("textarea");
  b.innerHTML = c.replace(/</g, "&lt;").replace(/>/g, "&gt;");
  c = b.value;
  c = $WH.str_replace(c, " / ", "-");
  c = $WH.str_replace(c, "'", "");
  c = $WH.str_replace(c, "#", "");
  c = $WH.trim(c);
  if (e) {
    c = $WH.str_replace(c, " ", "-")
  } else {
    c = c.replace(/[^a-z0-9]/ig, "-")
  }
  c = $WH.str_replace(c, "--", "-");
  c = $WH.str_replace(c, "--", "-");
  c = c.replace(/^-+|-+$/, "");
  c = c.replace(/[A-Z]/g, function (f) {
    return f.toLowerCase()
  });
  return c
}
function g_isDateValid(b) {
  return /^(20[0-2]\d)-([01]\d)-([0-3]\d) ([0-2]\d):([0-5]\d):([0-5]\d)$/.exec(b)
}
function g_isIpAddress(b) {
  return /[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/.test(b)
}
function g_isEmailValid(b) {
  return b.match(/^([a-z0-9._-]+)(\+[a-z0-9._-]+)?(@[a-z0-9.-]+\.[a-z]{2,4})$/i) != null
}
function g_getCurrentDomain() {
  if (g_getCurrentDomain.CACHE) {
    return g_getCurrentDomain.CACHE
  }
  var b = location.hostname;
  if (!g_isIpAddress(b)) {
    var c = b.split(".");
    if (c.length > 2) {
      c.splice(0, c.length - 2)
    }
    b = c.join(".")
  }
  g_getCurrentDomain.CACHE = b;
  return b
}
function g_getCommentDomain(b) {
  if (!$WH.isset("g_ptr") && b == "ptr") {
    return "http://ptr.wowhead.com"
  } else {
    if (!$WH.isset("g_beta") && b == "beta") {
      return "http://wod.wowhead.com"
    } else {
      if (!$WH.isset("g_old") && b == "old") {
        return "http://old.wowhead.com"
      }
    }
  }
  return ""
}
function g_isExternalUrl(b) {
  if (!b) {
    return false
  }
  if (b.indexOf("http") != 0 && b.indexOf("//") != 0) {
    return false
  } else {
    if (b.indexOf("wowhead.com") != -1) {
      return false
    } else {
      if (b.indexOf("hearthhead.com") != -1) {
        return false
      } else {
        if (b.indexOf("wowheadnews.") != -1) {
          return false
        } else {
          if (b.indexOf(g_getCurrentDomain()) != -1) {
            return false
          }
        }
      }
    }
  }
  return true
}
function g_getRelativeHostPrefix(c, h) {
  var e = /[^\.]+\.com$/.exec(location.hostname);
  e = e ? e[0] : "wowhead.com";
  var j = (typeof c != "string") ? (c == null ? e : "wowhead.com") : c;
  var k = j + (h ? "_https" : "_http");
  if (!g_getRelativeHostPrefix.CACHE) {
    g_getRelativeHostPrefix.CACHE = {}
  }
  if (k in g_getRelativeHostPrefix.CACHE) {
    return g_getRelativeHostPrefix.CACHE[k]
  }
  var g = "";
  var b, f;
  if ((location.hostname.indexOf(j) < 0 || ( !! h != (location.protocol == "https:"))) && !/^[0-9\.]+$/.test(location.hostname)) {
    b = /^([\w\W]*)\.[^\.]+\.com$/.exec(location.hostname);
    b = b ? b[1] : "www";
    f = "";
    if (location.port) {
      f = location.port
    }
    if (f.substr(0, 1) != ":") {
      f = ":" + f
    }
    if (f == ":80" || f == ":") {
      f = ""
    }
    g = "http://" + b + "." + j + f
  }
  if (h) {
    g = g.replace(/^http:/, "https:")
  }
  g_getRelativeHostPrefix.CACHE[k] = g;
  return g
}
function g_createOrRegex(e, f) {
  e = e.replace(/(\(|\)|\|\+|\*|\?|\$|\^)/g, "\\$1");
  var h = e.split(" "),
      g = "";
  for (var c = 0, b = h.length; c < b; ++c) {
    if (c > 0) {
      g += "|"
    }
    g += h[c]
  }
  return new RegExp((f != null ? "(" + f + ")?" : "") + "(" + g + ")", "gi")
}
function g_getHash() {
  return "#" + decodeURIComponent(location.href.split("#")[1] || "")
}
function g_modifyUrl(b, f, c) {
  if (!c) {
    c = $.noop
  }
  var e = "";
  if (b.match(/(#.+)$/)) {
    e = RegExp.$1;
    b = b.replace(e, "")
  }
  $.each(f, function (l, k) {
    var n;
    var g;
    var m;
    var j = b.match(new RegExp("(&|\\?)?" + l + "=?([^&]+)?"));
    if (j != null) {
      n = j[0];
      g = j[1];
      m = decodeURIComponent(j[2])
    }
    if (k == null) {
      if (!n) {
        return
      }
      m = null
    } else {
      if (k.substr(0, 2) == "+=") {
        if (m && c.onAppendCollision) {
          m = c.onAppendCollision(m, k.substr(2), c.menuUrl)
        } else {
          if (!m && c.onAppendEmpty) {
            m = c.onAppendEmpty(k.substr(2), c.menuUrl)
          } else {
            if (!m) {
              m = ""
            }
            m += $.trim(k.substr(2))
          }
        }
      } else {
        m = k
      }
    }
    if (n) {
      var h = "";
      if (g) {
        h += g
      }
      if (m != null) {
        h += l;
        if (m) {
          h += "=" + $WH.urlencode2(m)
        }
      }
      b = b.replace(n, h)
    } else {
      if (m || k == null || k.substr(0, 2) != "+=") {
        b += (b.indexOf("?") == -1 ? "?" : "&") + l;
        if (m) {
          b += "=" + $WH.urlencode2(m)
        }
      }
    }
  });
  b = b.replace("?&", "?");
  b = b.replace(/&&/g, "&");
  b = b.replace(/\/\?/g, "/");
  b = b.replace(/(&|\?)+$/, "");
  return b + e
}
function g_AssertSession() {
  if ($WH.isset("g_user") && g_user.id) {
    return
  }
  if (typeof g_AssertSession.asserted != "undefined") {
    return
  }
  $WH.g_ajaxIshRequest("/account=assertsession", true)
}
function ts_GetPreferredRace() {
  var b = $WH.localStorage.get("transmog_racegender");
  if (!b && g_user && g_user.hasOwnProperty("cookies") && g_user.cookies.hasOwnProperty("default_3dmodel")) {
    b = g_user.cookies.default_3dmodel
  }
  if (!b || (("" + b).indexOf(",") < 0)) {
    b = "1,2"
  }
  b = b.split(",");
  if (b[0] == 25 || b[0] == 26) {
    b[0] = 24
  }
  if (!parseInt(b[0], 10)) {
    b[0] = 1
  }
  if (!parseInt(b[1], 10)) {
    b[1] = 2
  }
  return {
    race: b[0],
    gender: b[1]
  }
}
$WH.getPage = function () {
  var c = null;
  var b = location.href.split("/");
  if (b.length) {
    c = b[3].replace(/^\?(.*)/, "$1").split(/[\?&#=]/)
  }
  $WH.getPage = (function (e) {
    return e
  }).bind(null, c);
  return c
};
$WH.isBlizzardReferral = function () {
  var b = false;
  var c = $WH.g_getGets();
  if (typeof c.brl != "undefined") {
    b = "brl"
  }
  if (!b) {
    b = !! (document.referrer && document.referrer.match(/^https?:\/\/[^\/]*\bbattle\.net\//))
  }
  $WH.isBlizzardReferral = (function (e) {
    return e
  }).bind(null, b);
  return b
};
$WH.g_createOptionsMenuWidget = function (b, p, n) {
  var h = 0;
  var l = 1;
  var c = 2;
  var g = 3;
  var k = ' <i class="fa fa-chevron-down fa-color-gray"></i>';
  var o = $WH.ce("span");
  o.id = "options-menu-widget-" + b;
  o.className = "options-menu-widget " + o.id;
  o.innerHTML = p + k;
  if (n.id) {
    o.id = n.id
  }
  if (n.className) {
    o.className += " " + n.className
  }
  if (n.options instanceof Array) {
    var e = [];
    for (var j = 0, f; f = n.options[j]; j++) {
      var m = [j, f[l]];
      if ((typeof n.selected == "number" || typeof n.selected == "string") && n.selected == f[h]) {
        o.innerHTML = f[l] + k;
        if (f[g]) {
          switch (typeof f[g].className) {
          case "string":
            $.data(o, "options-menu-widget-class", f[g].className);
            o.className += " " + f[g].className;
            break;
          case "function":
            $.data(o, "options-menu-widget-class", f[g].className(f, true));
            o.className += " " + f[g].className(f, true);
            break
          }
        }
      }
      if (f[c]) {
        m.push((function (u, s, q, r) {
          switch (typeof q[c]) {
          case "string":
            window.location = q[c];
            break;
          case "function":
            if (typeof r.updateWidgetText == "undefined" || r.updateWidgetText) {
              s.innerHTML = q[l] + u;
              var t = $.data(s, "options-menu-widget-class");
              if (t) {
                s.className = s.className.replace(new RegExp(" *\\b" + t + "\\b"), "")
              }
              if (q[g]) {
                switch (typeof q[g].className) {
                case "string":
                  $.data(s, "options-menu-widget-class", q[g].className);
                  s.className += " " + q[g].className;
                  break;
                case "function":
                  $.data(s, "options-menu-widget-class", q[g].className(q, true));
                  s.className += " " + q[g].className(q, true);
                  break
                }
              }
            }
            q[c](s, q);
            break
          }
        }).bind(null, k, o, f, n))
      } else {
        if (!f[g] || !f[g].menu) {
          m[0] = null
        }
      }
      m[MENU_IDX_OPT] = {};
      if (f[g]) {
        switch (typeof f[g].className) {
        case "string":
          m[MENU_IDX_OPT].className = f[g].className;
          break;
        case "function":
          m[MENU_IDX_OPT].className = f[g].className.bind(null, f, false);
          break
        }
        switch (typeof f[g].tinyIcon) {
        case "string":
          m[MENU_IDX_OPT].tinyIcon = f[g].tinyIcon;
          break;
        case "function":
          m[MENU_IDX_OPT].tinyIcon = f[g].tinyIcon.bind(null, f);
          break
        }
        switch (typeof f[g].fontIcon) {
        case "string":
          m[MENU_IDX_OPT].fontIcon = f[g].fontIcon;
          break;
        case "function":
          m[MENU_IDX_OPT].fontIcon = f[g].fontIcon.bind(null, f);
          break
        }
        if (typeof f[g].isChecked == "function") {
          m[MENU_IDX_OPT].checkedFunc = f[g].isChecked.bind(null, f)
        }
        if (typeof f[g].menu == "object" && f[g].menu instanceof Array) {
          m[MENU_IDX_SUB] = f[g].menu
        }
      }
      e.push(m)
    }
    o.menu = e;
    if (n.menuOnClick) {
      o.onmousedown = $WH.rf;
      Menu.add(o, e, {
        showAtElement: true
      })
    } else {
      Menu.add(o, e)
    }
  }
  if (n.target) {
    $(n.target).append(o)
  } else {
    return o
  }
};
$WH.g_setHash = function (e, b) {
  var c = "" + location.hash;
  if (e.substr(0, 1) != "#") {
    e = "#" + e
  }
  if (e == "#.") {
    $WH.g_clearHash(b || false)
  } else {
    if (b) {
      location.hash = e
    } else {
      location.replace(e)
    }
  }
  return c
};
$WH.g_clearHash = function (c) {
  var e = "" + location.hash;
  var b = ("" + location.href).replace(/#.*/, "");
  if (c) {
    if (window.history && window.history.pushState) {
      window.history.pushState({}, "", b)
    } else {
      location.hash = "#."
    }
  } else {
    if (window.history && window.history.replaceState) {
      window.history.replaceState({}, "", b)
    } else {
      location.replace("#.")
    }
  }
  return e
};
$WH.g_selectText = function (e) {
  var f = document,
      g = f.getElementById(e),
      c, b;
  if (f.body.createTextRange) {
    c = document.body.createTextRange();
    c.moveToElementText(g);
    c.select()
  } else {
    if (window.getSelection) {
      b = window.getSelection();
      c = document.createRange();
      c.selectNodeContents(g);
      b.removeAllRanges();
      b.addRange(c)
    }
  }
};
var vi_thumbnails = {
  1: "//i3.ytimg.com/vi/$1/default.jpg"
};
var vi_siteurls = {
  1: "http://www.youtube.com/watch?v=$1"
};
var vi_sitevalidation = {
  1: /^https?:\/\/www\.youtube\.com\/watch\?v=([^& ]{11})/
};

function vi_submitAVideo() {
  tabsContribute.focus(2)
}
function vi_validateForm(c) {
  if (!c.elements.videourl.value.length) {
    alert(LANG.message_novideo);
    return false
  }
  var e = false;
  for (var b in vi_sitevalidation) {
    if (c.elements.videourl.value.match(vi_sitevalidation[b])) {
      e = true;
      break
    }
  }
  if (!e) {
    alert(LANG.message_novideo);
    return false
  }
  return true
}
function vi_appendSticky() {
  var f = $WH.ge("infobox-sticky-vi");
  if (!f) {
    return
  }
  var g = g_pageInfo.type;
  var e = g_pageInfo.typeId;
  var k = $WH.in_array(lv_videos, 1, function (l) {
    return l.sticky
  });
  if (k != -1) {
    var j = lv_videos[k];
    var b = $WH.ce("a");
    b.href = "#videos:id=" + j.id;
    b.onclick = function (l) {
      VideoViewer.show({
        videos: lv_videos,
        pos: k
      });
      return $WH.rf2(l)
    };
    var c = $WH.ce("img");
    c.src = $WH.sprintf(vi_thumbnails[j.videoType], j.videoId);
    c.className = "border";
    $WH.ae(b, c);
    $WH.ae(f, b);
    var h = $("#infobox-videos");
    if (!h) {
      h = $("th", $(f).parents().prev("tr"))
    }
    h.append(" (" + lv_videos.length + ")").wrapInner($('<a href="#videos"></a>').click(function () {
      tabsRelated.focus(tabsRelated.getTabById("videos"));
      return false
    }))
  } else {
    if (g_user && g_user.roles & (U_GROUP_ADMIN | U_GROUP_BUREAU | U_GROUP_VIDEO)) {
      var b;
      if (g_user.id > 0) {
        b = '<a href="javascript:;" onclick="vi_submitAVideo(); return false">'
      } else {
        b = '<a href="/account=signin">'
      }
      f.innerHTML = $WH.sprintf(LANG.infobox_noneyet, b + LANG.infobox_suggestone + "</a>")
    } else {
      $("#infobox-videos,#infobox-sticky-vi").closest("td, th").css("display", "none")
    }
  }
  vi_appendSticky = function () {}
}
var g_videos = [];
var VideoViewer = new
function () {
  var f, n, e, D, H, s, t = 0,
      y, k, E, b, r, l, A, C, w, j, z, m;

  function h() {
    var K = f[n];
    var I = Math.max(m.offsetHeight - 18, 0),
        J = Math.max(50, Math.min(520, $WH.g_getWindowSize().h - 72 - I)),
        L = Math.min(1, J / 520);
    e = Math.round(L * 880);
    D = Math.round(L * 520);
    A.style.height = C.style.height = w.style.height = (D - 95) + "px";
    Lightbox.setSize(Math.max(480, e) + 20, D + 52 + I + (E ? 96 : 0))
  }
  function c(K) {
    var I = f[K],
        J = "#videos:";
    if (t == 0) {
      J += "id=" + I.id
    } else {
      J += y + ":" + (K + 1)
    }
    return J
  }
  function v(I) {
    if (I && (H == 1) && $WH.g_getWindowSize().h > b.offsetHeight) {
      return
    }
    b.style.visibility = "hidden";
    var K = f[n];
    h();
    if (!I) {
      var J = (K.caption != null && K.caption.length);
      g_trackEvent("Videos", "Show", K.id + (J ? " (" + K.caption + ")" : ""));
      if (K.videoType == 1) {
        l.innerHTML = Markup.toHtml("[youtube=" + K.videoId + " width=" + e + " height=" + D + " autoplay=true]")
      }
      j.href = $WH.sprintf(vi_siteurls[K.videoType], K.videoId);
      if (!K.user && typeof g_pageInfo == "object") {
        K.user = g_pageInfo.username
      }
      var P = (K.date && K.user),
          O = (f.length > 1);
      if (P) {
        var N = new Date(K.date),
            R = (g_serverTime - N) / 1000;
        var Q = z.firstChild.childNodes[1];
        Q.href = "/user=" + K.user;
        Q.innerHTML = K.user;
        var T = z.firstChild.childNodes[3];
        $WH.ee(T);
        g_formatDate(T, R, N);
        z.firstChild.style.display = ""
      } else {
        z.firstChild.style.display = "none"
      }
      var T = z.childNodes[1];
      $WH.ee(T);
      T = z.childNodes[2];
      if (O) {
        var S = "";
        if (K.user) {
          S = LANG.dash
        }
        S += (n + 1) + LANG.lvpage_of + f.length;
        T.innerHTML = S;
        T.style.display = ""
      } else {
        T.style.display = "none"
      }
      z.style.display = (P || O ? "" : "none");
      var L = (K.subject != null && K.subject.length && K.type && K.typeId);
      if (J || L) {
        var M = "";
        if (L) {
          M += LANG.types[K.type][0] + LANG.colon;
          M += '<a href="/' + g_types[K.type] + "=" + K.typeId + '">';
          M += K.subject;
          M += "</a>"
        }
        if (J) {
          if (L) {
            M += LANG.dash
          }
          M += (K.noMarkup ? K.caption : Markup.toHtml(K.caption, {
            mode: Markup.MODE_SIGNATURE
          }))
        }
        m.innerHTML = M;
        m.style.display = ""
      } else {
        m.style.display = "none"
      }
      if (f.length > 1) {
        A.href = c(u(-1));
        C.href = c(u(1));
        A.style.display = C.style.display = "";
        w.style.display = "none"
      } else {
        A.style.display = C.style.display = "none";
        w.style.display = ""
      }
      location.replace(c(n))
    } else {
      $("object, embed", l).each(function () {
        this.width = e;
        this.height = D
      })
    }
    Lightbox.reveal();
    b.style.visibility = "visible";
    setTimeout(p, 1)
  }
  function u(I) {
    var J = n;
    J += I;
    if (J < 0) {
      J = f.length - 1
    } else {
      if (J >= f.length) {
        J = 0
      }
    }
    return J
  }
  function B() {
    n = u(-1);
    v();
    return false
  }
  function F() {
    n = u(1);
    v();
    return false
  }
  function p() {
    if (k) {
      document.title = k
    }
  }
  function q(I) {
    I = $WH.$E(I);
    switch (I.keyCode) {
    case 37:
      B();
      break;
    case 39:
      F();
      break
    }
  }
  function g() {
    v(1)
  }
  function o() {
    $WH.ee(l);
    if (f.length > 1) {
      $WH.dE(document, "keyup", q)
    }
    if (s && t == 0) {
      if (s.indexOf(":id=") != -1) {
        s = "#videos"
      }
      $WH.g_setHash(s)
    } else {
      $WH.g_clearHash()
    }
    p()
  }
  function G(R, N, K) {
    if (typeof K.videos == "string") {
      f = g_videos[K.videos];
      t = 1;
      y = K.videos
    } else {
      f = K.videos;
      t = 0;
      y = null
    }
    b = R;
    n = 0;
    if (K.pos && K.pos >= 0 && K.pos < f.length) {
      n = K.pos
    }
    if (N) {
      R.className += " has-lightbox-caption screenshotviewer";
      r = $WH.ce("div");
      r.className = "lightbox-content screenshotviewer-screen";
      var U = $WH.ce("div");
      var I = $WH.ce("div");
      U.className = "screenshotviewer-page-wrapper screenshotviewer-prev-wrapper";
      I.className = "screenshotviewer-page-wrapper screenshotviewer-next-wrapper";
      A = $WH.ce("a");
      C = $WH.ce("a");
      A.className = "screenshotviewer-prev";
      C.className = "screenshotviewer-next";
      A.href = "javascript:;";
      C.href = "javascript:;";
      var M = $WH.ce("span");
      M.className = "fa fa-chevron-left";
      $WH.ae(A, M);
      M = $WH.ce("span");
      M.className = "fa fa-chevron-right";
      $WH.ae(C, M);
      A.onclick = B;
      C.onclick = F;
      w = $WH.ce("a");
      w.className = "screenshotviewer-cover";
      w.href = "javascript:;";
      w.onclick = Lightbox.hide;
      var Q = $WH.ce("span");
      var P = $WH.ce("b");
      $WH.ae(P, $WH.ct(LANG.close));
      $WH.ae(Q, P);
      $WH.ae(w, Q);
      $WH.ae(U, A);
      $WH.ae(I, C);
      $WH.ae(r, U);
      $WH.ae(r, I);
      $WH.ae(r, w);
      l = $WH.ce("div", {
        className: "screenshotviewer-image"
      });
      $WH.ae(r, l);
      $WH.ae(R, r);
      var L = $WH.ce("a");
      L.className = "dialog-x fa fa-times";
      L.href = "javascript:;";
      L.onclick = Lightbox.hide;
      $WH.ae(L, $WH.ct(LANG.close));
      $WH.ae(R, L);
      j = $WH.ce("a");
      j.className = "dialog-arrow fa fa-external-link";
      j.href = "javascript:;";
      j.target = "_blank";
      $WH.ae(j, $WH.ct(LANG.original));
      $WH.ae(R, j);
      var T = $WH.ce("div", {
        className: "lightbox-caption"
      });
      z = $WH.ce("div");
      z.className = "screenshotviewer-from";
      var J = $WH.ce("span");
      $WH.ae(J, $WH.ct(LANG.lvscreenshot_from));
      $WH.ae(J, $WH.ce("a"));
      $WH.ae(J, $WH.ct(" "));
      $WH.ae(J, $WH.ce("span"));
      $WH.ae(z, J);
      $WH.ae(z, $WH.ce("span"));
      $WH.ae(z, $WH.ce("span"));
      $WH.ae(T, z);
      m = $WH.ce("div");
      m.className = "screenshotviewer-caption";
      $WH.ae(T, m);
      $WH.ae(R, T)
    }
    var S = $WH.ge("videoviewer-ad");
    if (!N && S) {
      $WH.ee(S)
    }
    if (K.displayAd && S) {
      var O = $WH.ce("div");
      $WH.ae(S, O);
      WAS.create("leaderboard", O)
    }
    s = location.hash;
    if (f.length > 1) {
      $WH.aE(document, "keyup", q)
    }
    v()
  }
  this.checkPound = function () {
    k = $("title").html();
    if (location.hash && location.hash.indexOf("#videos") == 0) {
      if (!g_listviews.videos) {
        var J = location.hash.split(":");
        if (J.length == 3) {
          var K = g_videos[J[1]],
              I = parseInt(J[2]);
          if (K && I >= 1 && I <= K.length) {
            VideoViewer.show({
              videos: J[1],
              pos: I - 1,
              displayAd: true
            })
          }
        }
      }
    }
  };
  this.show = function (I) {
    Lightbox.show("videoviewer", {
      onShow: G,
      onHide: o,
      onResize: g
    }, I);
    return false
  };
  $(document).ready(this.checkPound)
};
$(document).ready(function () {
  $("form.vote-comment input").click(function () {
    var b = $(this).attr("data-vote");
    var h = $(this).parent();
    var g = h.find(".ajax");
    var f = h.find("input");
    var c = h.attr("data-post");
    var e = h.attr("data-type");
    f.prop("disabled", true);
    g.show();
    $.post("/vote", {
      post: c,
      type: e,
      vote: b
    }, function (j) {
      if (j != "ok") {
        f.prop("disabled", false);
        g.hide();
        alert(LANG.voteerror_tip);
        return
      }
      h.remove()
    });
    return false
  })
});
var WAS = new
function () {
  var o = {
    defaultChannel: "Other",
    blizzardGracePeriod: 1000 * 60 * 10,
    skins: {
      bodyClass: "skinned",
      classPrefix: "skin",
      linkCount: 2
    },
    MonkeyBroker: {
      siteIDs: {
        hearthhead: 1705,
        thottbot: 1665,
        wowhead: 1664
      },
      slotIDs: {
        leaderboard: [5, 33, 35],
        leaderboard2: [5],
        leaderboardBTF: [22],
        leaderboardBTF2: [22],
        medrec: [1, 7],
        medrecBTF: [26],
        medrecMobile: [1],
        skyscraper: [3, 7],
        skin: [30],
        fixedFooter: [25]
      }
    },
    units: {
      leaderboard: {
        applyClasses: {
          parent: ["header-bg"]
        }
      },
      leaderboardBTF: {
        applyClasses: {
          parent: ["footer-bg"]
        }
      },
      medrec: {
        applyClasses: {
          parent: ["block-bg"]
        }
      },
      medrecBTF: {
        applyClasses: {
          parent: ["block-bg"]
        }
      },
      skyscraper: {
        applyClasses: {
          parent: ["sidebar-bg"]
        }
      },
      mobileFooter: {
        applyClasses: {
          parent: ["mobile-fixed-footer-bg"]
        }
      },
      skin: {
        applyClasses: {
          parent: ["skin-bg"]
        }
      },
      fixedFooter: {
        applyClasses: {
          parent: ["fixed-footer-bg"]
        }
      }
    },
    channels: {
      wowhead: {
        achievement: {
          name: "Achievement"
        },
        achievements: {
          name: "Achievement List"
        },
        ads: {
          name: "Test"
        },
        faction: {
          name: "Faction"
        },
        factions: {
          name: "Faction List"
        },
        forums: {
          name: "Forums",
          board: {
            name: "Forum Board"
          },
          topic: {
            name: "Forum Topic"
          }
        },
        guide: {
          name: "Guide"
        },
        guides: {
          name: "Guide List"
        },
        home: {
          name: "Home"
        },
        item: {
          name: "Item"
        },
        items: {
          name: "Item List"
        },
        itemset: {
          name: "Item Set"
        },
        itemsets: {
          name: "Item Set List"
        },
        map: {
          name: "Map"
        },
        maps: {
          name: "Map List"
        },
        news: {
          name: "News"
        },
        npc: {
          name: "NPC"
        },
        npcs: {
          name: "NPC List"
        },
        object: {
          name: "Object"
        },
        objects: {
          name: "Object List"
        },
        pet: {
          name: "Pet"
        },
        pets: {
          name: "Pet List"
        },
        quest: {
          name: "Quest"
        },
        quests: {
          name: "Quest List"
        },
        search: {
          name: "Search"
        },
        skills: {
          name: "Skill List"
        },
        spell: {
          name: "Spell"
        },
        spells: {
          name: "Spell List"
        },
        talent: {
          name: "Calculator"
        },
        "transmog-set": {
          name: "Transmog Set"
        },
        "transmog-sets": {
          name: "Transmog Set List"
        },
        zone: {
          name: "Zone"
        },
        zones: {
          name: "Zone List"
        }
      },
      hearthhead: {
        achievement: {
          name: "Achievement"
        },
        achievements: {
          name: "Achievement List"
        },
        ads: {
          name: "Test"
        },
        card: {
          name: "Card"
        },
        cards: {
          name: "Card List"
        },
        deck: {
          name: "Deck"
        },
        decks: {
          name: "Deck List"
        },
        forums: {
          name: "Forums",
          board: {
            name: "Forum Board"
          },
          topic: {
            name: "Forum Topic"
          }
        },
        guide: {
          name: "Guide"
        },
        guides: {
          name: "Guide List"
        },
        home: {
          name: "Home"
        },
        mechanic: {
          name: "Mechanic"
        },
        mechanics: {
          name: "Mechanic List"
        },
        news: {
          name: "News"
        },
        quest: {
          name: "Quest"
        },
        quests: {
          name: "Quest List"
        },
        search: {
          name: "Search"
        },
        spell: {
          name: "Spell"
        },
        spells: {
          name: "Spell List"
        }
      },
      thottbot: {
        achievement: {
          name: "Achievement"
        },
        ads: {
          name: "Test"
        },
        faction: {
          name: "Faction"
        },
        home: {
          name: "Home"
        },
        item: {
          name: "Item"
        },
        npc: {
          name: "NPC"
        },
        pet: {
          name: "Pet"
        },
        quest: {
          name: "Quest"
        },
        skill: {
          name: "Skill"
        },
        spell: {
          name: "Spell"
        },
        zone: {
          name: "Zone"
        }
      }
    }
  };
  var j = {
    pending: [],
    removed: false,
    slotsAdded: {}
  };
  this.getSiteId = function (u) {
    if (!u) {
      u = $WH.g_getSite()
    }
    return o.MonkeyBroker.siteIDs[u]
  };
  this.getConfig = function (u) {
    if (u == "channels") {
      return o[u][$WH.g_getSite()]
    }
    return o[u]
  };
  this.checkInitConditions = function () {
    return typeof g_user != "undefined" && typeof Platform != "undefined" && Platform.known
  };
  this.showAds = function () {
    return g_user.ads && !j.removed
  };
  this.getChannelName = function () {
    var u = o.channels[$WH.g_getSite()];
    var w = o.defaultChannel;
    var y = {};
    var v = $WH.getPage();
    if (v) {
      if (v.length == 1 && v[0] == "") {
        v[0] = "home"
      }
      if (v.length == 1 && v[0] == "guides" && location.href.match(/https?:\/\/[^\/]+\.com\/guides\/.+/)) {
        v[0] = "guide"
      }
      if (v.length > 1 && u[v[0]] && u[v[0]][v[1]]) {
        y = u[v[0]][v[1]]
      } else {
        if (u[v[0]]) {
          y = u[v[0]]
        } else {
          y = {
            name: w
          }
        }
      }
    }
    return y.name || w
  };
  this.create = function (v, w) {
    if (j.slotsAdded[v]) {
      if (typeof console != "undefined" && console && typeof console.error == "function" && typeof v == "string") {
        console.error(v + " unit already added!")
      }
      return false
    }
    if (!this.checkCreateConditions(v, w)) {
      if (typeof w == "string") {
        w = document.getElementById(w)
      }
      $(w).parent().attr("data-disabled-block", "true");
      return false
    }
    if (typeof w == "string") {
      w = document.getElementById(w);
      if (!w) {
        return false
      }
    }
    if (!this.showAds()) {
      if (typeof w == "string") {
        w = document.getElementById(w)
      }
      if (w) {
        h(w)
      }
      return false
    }
    var u = $(w);
    if (q(w, true)) {
      j.pending.push({
        type: v,
        target: w
      });
      return false
    }
    if (o.units[v] && o.MonkeyBroker.slotIDs[v] && w) {
      return f(v, w)
    }
    return false
  };

  function f(v, y, w) {
    if ((y.getElementsByTagName("iframe")).length) {
      return false
    }
    if (y.zamAdUnitName) {
      return
    }
    if (!y.className || y.className.indexOf("banner-ad") < 0) {
      y.parentNode.setAttribute("data-was-parent", "true");
      y.setAttribute("data-was-unit", "true");
      y.className += " banner-ad";
      s(v, y)
    }
    if (typeof MonkeyBroker == "undefined") {
      w = typeof w == "number" ? w + 1 : 1;
      setTimeout(f.bind(this, v, y, w), 9 * w);
      return false
    }
    y.zamAdUnitName = v;
    var u = o.MonkeyBroker.slotIDs[v];
    if (MonkeyBroker.went) {
      k(MonkeyBroker, u, v, y)
    } else {
      t(MonkeyBroker, u, v, y)
    }
    j.slotsAdded[v] = true
  }
  function k(y, v, u, z) {
    if (u == "fixedFooter") {
      y.inventoryConditionalPlacement({
        sizes: v,
        rm: true,
        reportBadAd: false
      });
      return
    } else {
      if (u == "skin") {
        setTimeout(function () {
          y.inventoryConditionalPlacement({
            sizes: v,
            dataTag: true
          })
        }, 500);
        return
      }
    }
    var w = {
      slot: u,
      sizes: v,
      el: z
    };
    y.defineSlot(w);
    y.registerSlotCallback(u, l);
    y.adPlacement(w)
  }
  function t(y, w, v, z) {
    var u = {
      slot: v,
      sizes: w,
      el: z
    };
    if (v == "fixedFooter") {
      u.rm = true;
      u.reportBadAd = false;
      delete u.el;
      y.addSlot(u);
      return
    }
    if (v == "skin") {
      u.dataTag = true;
      u.callback = WAS.displaySkin;
      delete u.el;
      y.addSlot(u);
      return
    }
    y.registerSlotCallback(u.slot, l);
    y.addSlot(u)
  }
  function h(u) {
    var v = b(u);
    $WH.de(v)
  }
  this.layoutComplete = function (u) {
    if (typeof MonkeyBroker == "undefined") {
      u = typeof u == "number" ? u + 1 : 1;
      setTimeout(this.layoutComplete.bind(this, u), 9 * u);
      return false
    }
    if (!MonkeyBroker.went) {
      MonkeyBroker.registerSizeCallback(30, WAS.displaySkin);
      MonkeyBroker.go({
        autofillSlots: 1
      })
    }
    this.layoutComplete = function () {
      return true
    };
    return true
  };

  function s(v, w) {
    var u = o.units[v];
    if (u.applyClasses) {
      if (u.applyClasses.unit) {
        $(w).addClass(u.applyClasses.unit)
      }
      if (u.applyClasses.parent) {
        $(w.parentNode).addClass(u.applyClasses.parent)
      }
    }
  }
  this.checkCreateConditions = function (v, w) {
    if (v == "skin" || v == "fixedFooter") {
      if (Platform.isTouch()) {
        return false
      }
      var u = $WH.getPage();
      if (u) {
        switch (u[0]) {
        case "news":
        case "guides":
        case "guide":
        case "map":
        case "deck":
          return false
        }
      }
      if ($WH.isset("g_dev") && g_dev) {
        return false
      }
    }
    if (Platform.isTouch()) {
      if (["skyscraper", "skin", "fixedFooter"].indexOf(v) > -1) {
        return false
      }
      if (Platform.isMobile()) {
        if (["leaderboard", "leaderboardBTF"].indexOf(v) > -1) {
          return false
        }
        if (v == "medrec" && this.getChannelName() == "Map") {
          return false
        }
        if ((typeof w == "string" && w.match(/medrec/) && !w.match(/mobile/)) && ["Home", "News List", "News"].indexOf(this.getChannelName()) > -1) {
          return false
        }
      }
    }
    if (!Platform.isMobile()) {
      if (typeof w == "string" && w.match(/mobile/)) {
        return false
      }
    }
    return true
  };
  this.addMobileMedrec = function (v) {
    if (!Platform.isMobile()) {
      return
    }
    if ($WH.ge("ad-mobile-medrec")) {
      return
    }
    var u = $(v);
    if (!u.length) {
      return
    }
    u.append('<div class="block-bg"><div id="ad-mobile-medrec"></div></div>');
    this.create("medrec", "ad-mobile-medrec")
  };

  function l(A) {
    if (!A.el) {
      return
    }
    if (typeof A.el == "string") {
      A.el = document.getElementById(A.el)
    }
    if (typeof A.el != "object" || !A.el.parentNode) {
      return
    }
    var v = b(A.el);
    if (!v) {
      return
    }
    v.className = v.className.replace(/ *\bis-[0-9]+x[0-9]+\b/g, "");
    v.className += " is-" + A.w + "x" + A.h;
    if (A.w == 728 || A.w == 970) {
      var z = A.el;
      if (z) {
        var w = A.w + "x" + A.h;
        var y = z.parentNode.parentNode.parentNode;
        y.setAttribute("data-contains-block", w);
        y.parentNode.parentNode.setAttribute("data-contains-block", w);
        if (A.w == 970 && y.parentNode.className && y.parentNode.className.match("news-left")) {
          var u = $WH.ge("main");
          u.setAttribute("data-left-contains-block", w)
        }
      }
    }
  }
  this.remove = function (u) {
    if (u) {
      u.parentNode.removeChild(u)
    }
  };
  this.removeAll = function () {
    j.removed = true;
    var v;
    if ($("body.news").length) {
      v = $("body.news .row.block-group, .layout-inner > .blocks")
    } else {
      v = $("#main > .blocks, #wrapper > .blocks")
    }
    v.slideUp({
      complete: function () {
        v.remove();
        $(".header-bg, .footer-bg").remove()
      }
    });
    var y = $(".block-bg");
    y.slideUp({
      complete: function () {
        y.remove();
        y.parent(":empty").remove()
      }
    });
    $(".sidebar-bg").remove();
    var u = function (B, z) {
      var A = function () {
        $("#zam_footer_ad, #zam_footer_ad_interior").remove()
      };
      if (z) {
        B.animate({
          top: "0px"
        }, {
          complete: A
        })
      } else {
        B.slideUp({
          complete: A
        })
      }
    };
    var w = $("#zam_footer_ad_interior");
    if (w.length) {
      u(w, true)
    } else {
      w = $("#zam_footer_ad");
      if (w.length) {
        u(w)
      }
    }
  };
  this.getUserName = function () {
    if (g_user.name) {
      return g_user.name
    }
    return null
  };
  this.displaySkin = function (H) {
    if (!WAS.checkCreateConditions("skin", null)) {
      return false
    }
    var G = o.skins;
    var w = document.getElementById(G.classPrefix + "-wrap");
    if (w) {
      w.innerHTML = ""
    } else {
      w = document.body
    }
    document.body.className += " " + G.bodyClass + (H.usePageLeaderboard ? " " + G.bodyClass + "-use-page-leaderboard" : "");
    var E = G.classPrefix + "-link-";
    var A = 0;
    var u = G.linkCount;
    while (A++ < u) {
      var D = w.insertBefore(document.createElement("a"), w.firstChild);
      D.className = E + A;
      D.target = "_blank";
      D.href = H.link;
      D.style.backgroundImage = "url(" + H.image + ")"
    }
    var v = function (L, K, J) {
      var I = K.insertBefore(document.createElement("img"), K.firstChild);
      I.className = L.classPrefix + "-pixel";
      I.src = J
    };
    switch (typeof H.impressionTracking) {
    case "string":
      v(G, w, H.impressionTracking);
      break;
    case "object":
      for (var z in H.impressionTracking) {
        if (H.impressionTracking.hasOwnProperty(z) && typeof H.impressionTracking[z] == "string") {
          v(G, w, H.impressionTracking[z])
        }
      }
      break
    }
    if (H.superLeaderboard) {
      var B = H.superLeaderboardHeight || "90";
      var C = H.superLeaderboardWidth || "970";
      var F = w.insertBefore(document.createElement("div"), w.firstChild);
      F.className = G.classPrefix + "-" + C + "x" + B;
      var y = document.createElement("iframe");
      y.src = H.superLeaderboard;
      y.marginWidth = y.marginHeight = y.hspace = y.vspace = y.frameBorder = y.frameborder = y.border = 0;
      y.style.height = B + "px";
      y.style.width = C + "px";
      y.scrolling = "no";
      F.appendChild(y)
    }
    WAS.postSkinSetup.call(WAS, H, w);
    return true
  };
  this.postSkinSetup = function (y, w) {
    $("#layout").addClass("nosidebar");
    $("#sidebar").remove();
    if (!y.usePageLeaderboard) {
      $("#news-block-group").remove();
      $("#main > .blocks").remove()
    }
    var v = $WH.getPage();
    if (v) {
      if (v[0] == "deck") {
        var u = $(".deckguide .block-bg .banner-ad");
        if (u.length) {
          this.remove(u.get(0))
        }
      }
    }
  };
  this.intersect = function (B, v) {
    var C;
    var w;
    var z = this.getUnitParents();
    for (var A = 0, u = z.length; A < u; ++A) {
      var y = z[A];
      if (y) {
        if (!q(y)) {
          C = $WH.ac(y);
          w = $WH.g_createRect(C.x, C.y, y.offsetWidth, y.offsetHeight);
          if ($WH.g_intersectRect(B, w)) {
            if (v) {
              this.hide(y)
            }
            return y
          }
        }
      }
    }
    return false
  };
  this.getUnitClasses = function () {
    var u = [];
    for (var v in o.units) {
      if (o.units[v].applyClasses && o.units[v].applyClasses.parent && u.indexOf(o.units[v].applyClasses.parent[0]) == -1) {
        u.push(o.units[v].applyClasses.parent[0])
      }
    }
    this.getUnitClasses = (function (w) {
      return w
    }).bind(null, u);
    return u
  };
  this.getUnitParents = function () {
    return $("." + (this.getUnitClasses()).join(", ."))
  };
  this.isHidden = function (u) {
    return q(u)
  };
  this.hide = function (v) {
    var u = b(v);
    u.setAttribute("data-hidden-by-was", "true")
  };
  this.hideAll = function () {
    var u = this.getUnitParents();
    u.attr("data-hidden-by-was", "true")
  };
  this.restoreHidden = function () {
    $('[data-hidden-by-was="true"]').attr("data-hidden-by-was", "false")
  };
  this.report = function (w, u) {
    if (u) {
      WAS.remove(b(u) || u)
    }
    var v = document.createElement("iframe");
    v.src = w;
    v.height = v.width = 0;
    document.getElementsByTagName("body")[0].appendChild(v);
    alert(LANG.ads_reportresponse)
  };

  function b(z) {
    if (z.getAttribute("data-was-unit") == "true") {
      return z.parentNode
    }
    if (z.getAttribute("data-was-parent") == "true") {
      return z
    }
    if (z.className) {
      var w = WAS.getUnitClasses();
      var y = false;
      if (w.indexOf(z.className) > -1) {
        y = true
      }
      if (!y) {
        for (var v = 0, u; u = w[v]; v++) {
          if (z.className.indexOf(u) > -1) {
            y = true;
            break
          }
        }
      }
      if (!y) {
        return z.parentNode
      }
    } else {
      return z.parentNode
    }
    return z
  }
  function q(w, v) {
    var u = b(w);
    if (u) {
      if (v) {
        return u.style.visibility == "hidden"
      } else {
        return u.getAttribute("data-hidden-by-was") == "true"
      }
    }
    return false
  }
  function n() {
    var w = $WH.isBlizzardReferral();
    var v = $WH.localStorage.get("blizz-skin-suppression");
    if (v) {
      v = parseInt(v);
      var u = Date.now ? Date.now() : new Date().getTime();
      if (!isNaN(v) && v > u && v < u + o.blizzardGracePeriod + (1000 * 20)) {
        w = true
      } else {
        $WH.localStorage.remove("blizz-skin-suppression")
      }
    }
    n = (function (y) {
      return y
    }).bind(null, w);
    return w
  }
  var g = $WH.isBlizzardReferral();
  if (g) {
    var e = Date.now ? Date.now() : new Date().getTime();
    $WH.localStorage.set("blizz-skin-suppression", e + o.blizzardGracePeriod);
    if (g == "brl") {
      var c = ("" + location.href).replace(/[\?&]brl=[^\?&#]*/, "").replace(/[\?&]brl\b/, "").replace(/^(https?:\/\/[^\/]+\/)home$/, "$1");
      if (window.history && window.history.replaceState) {
        window.history.replaceState({}, "", c)
      } else {
        location.replace(c)
      }
    }
  }
  if (n()) {
    if (typeof ads_prepare == "object") {
      var r = [];
      for (var m = 0, p; p = ads_prepare[m]; m++) {
        if (p.type != "skin") {
          r.push(p)
        }
      }
      ads_prepare = r
    }
  }
};
var Ads = new
function () {
  this.displaySkin = function () {
    return WAS.displaySkin.apply(WAS, Array.prototype.slice.call(arguments, 0))
  }
};
Ads.site = new
function () {
  this.postSkinSetup = function () {
    return WAS.postSkinSetup.apply(WAS, Array.prototype.slice.call(arguments, 0))
  }
};

function wt_getScaleFilter(l, g) {
  var h = [];
  if (l) {
    for (var j = 0, e = fi_filters.items.length; j < e; ++j) {
      var k = fi_filters.items[j];
      if (LANG.traits[k.name] && l[k.name]) {
        h.push([k.id, l[k.name]])
      }
    }
  }
  h.sort(function (m, f) {
    return -$WH.strcmp(m[1], f[1])
  });
  var c = [],
      b = [];
  for (var j = 0, e = h.length; j < e; ++j) {
    c.push(h[j][0]);
    b.push(h[j][1])
  }
  if (c.length && b.length) {
    return (g ? "&" : ";gm=3;") + "wt=" + c.join(":") + (g ? "&" : ";") + "wtv=" + b.join(":")
  }
  return ""
}
function wt_showClassPresetMenu(y, g, r, h, A, s) {
  var e = [
    [, LANG.menu_chooseclassspec]
  ];
  if (g && h && A) {
    if (g_user.weightscales && g_user.weightscales.length) {
      var n = [0, LANG.ficustom, , []];
      e.push(n);
      for (var u = 0, v = g_user.weightscales.length; u < v; ++u) {
        var z = g_user.weightscales[u];
        n[3].push([z.id, z.name, "/items=" + h + "?filter=eb=1;" + (h == 4 && A ? ("sl=" + A + ";") : "") + "cr=161;crs=1;crv=0" + wt_getScaleFilter(z) + (h == 2 ? ";gb=1" : ";gb=3") + ";upg=" + g + (r && r.length ? (";upgb=" + r.join(":")) : "") + (h == 2 && g_item_slots[A] ? "#" + g_urlize(g_item_slots[A]) : "")])
      }
    }
    var m = $WH.isset("g_items") && g_items[g] ? g_items[g].specs : null;
    for (var w in wt_presets) {
      var n = [w, g_chr_classes[w], , [],
      {
        className: "c" + w,
        tinyIcon: "class_" + g_file_classes[w]
      }];
      if (m != null && m.length > 0 && g_chr_specs_by_class[w]) {
        var o = g_chr_specs_by_class[w];
        var b = false;
        for (var u in o) {
          if ($WH.in_array(m, o[u]) != -1) {
            b = true;
            break
          }
        }
        if (!b) {
          continue
        }
      }
      e.push(n);
      var t = 0;
      for (var f in wt_presets[w]) {
        n[3].push([, LANG.presets[f] ? LANG.presets[f] : $WH.sprintf(LANG.presets.ilvlformat.replace("%s", "$1"), f)]);
        for (var q in wt_presets[w][f]) {
          b = (m == null || m.length == 0);
          if (!b) {
            for (var l in m) {
              if (LANG.presets[q].indexOf(g_chr_specs[m[l]]) != -1) {
                b = true;
                break
              }
            }
          }
          if (b) {
            n[3].push([t, LANG.presets[q], "/items=" + h + "?filter=eb=1;" + (h == 4 && A ? ("sl=" + A + ";") : "") + "ub=" + w + ";cr=161;crs=1;crv=0" + wt_getScaleFilter(wt_presets[w][f][q]) + (h == 2 ? ";gb=1" : ";gb=3") + ";upg=" + g + (r && r.length ? (";upgb=" + r.join(":")) : "") + (h == 2 && g_item_slots[A] ? "#" + g_urlize(g_item_slots[A]) : ""), ,
            {
              tinyIcon: wt_presets[w][f][q].__icon
            }]);
            t++
          }
        }
      }
    }
    var k = $WH.g_getCursorPos(s);
    Menu.sort(e);
    Menu.show(e, y)
  }
}
var g_file_races = {
  10: "bloodelf",
  11: "draenei",
  3: "dwarf",
  7: "gnome",
  1: "human",
  4: "nightelf",
  2: "orc",
  6: "tauren",
  8: "troll",
  5: "scourge",
  9: "goblin",
  22: "worgen",
  24: "pandaren",
  25: "pandaren",
  26: "pandaren"
};
var g_file_classes = {
  6: "deathknight",
  11: "druid",
  3: "hunter",
  8: "mage",
  10: "monk",
  2: "paladin",
  5: "priest",
  4: "rogue",
  7: "shaman",
  9: "warlock",
  1: "warrior"
};
var g_file_genders = {
  0: "male",
  1: "female"
};
var g_file_factions = {
  1: "alliance",
  2: "horde"
};
var g_file_racefactions = {
  10: 2,
  11: 1,
  3: 1,
  7: 1,
  1: 1,
  4: 1,
  2: 2,
  6: 2,
  8: 2,
  5: 2,
  9: 2,
  22: 1,
  24: 3,
  25: 1,
  26: 2
};
var g_race_classes = {
  1: [1, 2, 3, 4, 5, 6, 8, 9, 10],
  2: [1, 3, 4, 6, 7, 8, 9, 10],
  3: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
  4: [1, 3, 4, 5, 6, 8, 10, 11],
  5: [1, 3, 4, 5, 6, 8, 9, 10],
  6: [1, 2, 3, 5, 6, 7, 10, 11],
  7: [1, 4, 5, 6, 8, 9, 10],
  8: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11],
  9: [1, 3, 4, 5, 6, 7, 8, 9],
  10: [1, 2, 3, 4, 5, 6, 8, 9, 10],
  11: [1, 2, 3, 5, 6, 7, 8, 10],
  22: [1, 3, 4, 5, 6, 8, 9, 11],
  24: [1, 3, 4, 5, 7, 8, 10],
  25: [1, 3, 4, 5, 7, 8, 10],
  26: [1, 3, 4, 5, 7, 8, 10]
};
var g_class_races = {
  1: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 24, 25, 26],
  2: [1, 3, 6, 10, 11],
  3: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 22, 24, 25, 26],
  4: [1, 2, 3, 4, 5, 7, 8, 9, 10, 22, 24, 25, 26],
  5: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 24, 25, 26],
  6: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22],
  7: [2, 3, 6, 8, 9, 11, 24, 25, 26],
  8: [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 22, 24, 25, 26],
  9: [1, 2, 3, 5, 7, 8, 9, 10, 22],
  10: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 24, 25, 26],
  11: [4, 6, 8, 22]
};
var g_file_gems = {
  1: "meta",
  2: "red",
  4: "yellow",
  6: "orange",
  8: "blue",
  10: "purple",
  12: "green",
  14: "prismatic",
  16: "hydraulic",
  32: "cogwheel"
};
var g_chr_specs_by_class = {
  6: ["250", "251", "252"],
  11: ["102", "103", "104", "105"],
  3: ["253", "254", "255"],
  8: ["62", "63", "64"],
  10: ["268", "270", "269"],
  2: ["65", "66", "70"],
  5: ["256", "257", "258"],
  4: ["259", "260", "261"],
  7: ["262", "263", "264"],
  9: ["265", "266", "267"],
  1: ["71", "72", "73"]
};
var g_battlepet_types = {
  1: "humanoid",
  2: "dragonkin",
  3: "flying",
  4: "undead",
  5: "critter",
  6: "magic",
  7: "elemental",
  8: "beast",
  9: "aquatic",
  10: "mechanical"
};
var g_battlepet_passives = {
  1: 238,
  2: 245,
  3: 239,
  4: 242,
  5: 236,
  6: 243,
  7: 241,
  8: 237,
  9: 240,
  10: 244
};
var g_skill_recipe_subclass = {
  171: 6,
  164: 4,
  185: 5,
  333: 8,
  202: 3,
  129: 7,
  356: 9,
  773: 11,
  755: 10,
  165: 1,
  186: 12,
  197: 2
};
var g_world_bosses = {
  71953: true,
  62346: true,
  60491: true,
  72057: true,
  69099: true,
  69161: true,
  71952: true,
  71954: true,
  71955: true
};
var g_grayedOutStats = {
  3: [250, 251, 252, 102, 105, 62, 63, 64, 270, 65, 66, 70, 256, 257, 258, 262, 264, 265, 266, 267, 71, 72, 73],
  4: [102, 103, 104, 105, 253, 254, 255, 62, 63, 64, 268, 270, 269, 65, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267],
  5: [71, 72, 73, 259, 260, 261, 253, 254, 255, 103, 104, 250, 251, 252, 66, 70, 263, 268, 269],
  6: [250, 251, 252, 102, 103, 104, 253, 254, 255, 62, 63, 64, 268, 269, 66, 70, 258, 259, 260, 261, 262, 263, 265, 266, 267, 71, 72, 73],
  50: [251, 252, 102, 103, 105, 253, 254, 255, 62, 63, 64, 270, 269, 65, 70, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 71, 72]
};
var g_specDependantStats = [71, 72, 73, 74];
var g_specPrimaryStatOrders = {
  62: [5, 3, 4],
  63: [5, 3, 4],
  64: [5, 3, 4],
  65: [5, 4, 3],
  66: [4, 3, 5],
  70: [4, 3, 5],
  71: [4, 3, 5],
  72: [4, 3, 5],
  73: [4, 3, 5],
  102: [5, 3, 4],
  103: [3, 4, 5],
  104: [3, 4, 5],
  105: [5, 3, 4],
  250: [4, 3, 5],
  251: [4, 3, 5],
  252: [4, 3, 5],
  253: [3, 5, 4],
  254: [3, 5, 4],
  255: [3, 5, 4],
  256: [5, 3, 4],
  257: [5, 3, 4],
  258: [5, 3, 4],
  259: [3, 4, 5],
  260: [3, 4, 5],
  261: [3, 4, 5],
  262: [5, 3, 4],
  263: [3, 5, 4],
  264: [5, 3, 4],
  265: [5, 3, 4],
  266: [5, 3, 4],
  267: [5, 3, 4],
  268: [3, 5, 4],
  269: [3, 5, 4],
  270: [5, 3, 4]
};
var g_spec_to_role = {
  62: 2,
  63: 2,
  64: 2,
  65: 1,
  66: 0,
  70: 2,
  71: 2,
  72: 2,
  73: 0,
  74: 2,
  79: 2,
  81: 0,
  102: 2,
  103: 2,
  104: 0,
  105: 1,
  250: 0,
  251: 2,
  252: 2,
  253: 2,
  254: 2,
  255: 2,
  256: 1,
  257: 1,
  258: 2,
  259: 2,
  260: 2,
  261: 2,
  262: 2,
  263: 2,
  264: 1,
  265: 2,
  266: 2,
  267: 2,
  268: 0,
  269: 2,
  270: 1,
  535: 2,
  536: 2,
  537: 0
};
var g_item_slots_to_character_slots = {
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  6: 6,
  7: 7,
  8: 8,
  9: 9,
  10: 10,
  11: [11, 12],
  12: [13, 14],
  13: [16, 17],
  14: 17,
  15: 16,
  16: 15,
  17: 16,
  18: null,
  19: 19,
  20: 5,
  21: 16,
  22: 17,
  23: 17,
  24: null,
  25: null,
  28: null
};
var g_character_slots_data = [{
  id: 1,
  name: "head",
  itemSlots: [1]
},
{
  id: 2,
  name: "neck",
  itemSlots: [2],
  noModel: 1
},
{
  id: 3,
  name: "shoulder",
  itemSlots: [3]
},
{
  id: 15,
  name: "chest",
  itemSlots: [16]
},
{
  id: 5,
  name: "chest",
  itemSlots: [5, 20]
},
{
  id: 4,
  name: "shirt",
  itemSlots: [4]
},
{
  id: 19,
  name: "tabard",
  itemSlots: [19]
},
{
  id: 9,
  name: "wrists",
  itemSlots: [9]
},
{
  id: 10,
  name: "hands",
  itemSlots: [10]
},
{
  id: 6,
  name: "waist",
  itemSlots: [6]
},
{
  id: 7,
  name: "legs",
  itemSlots: [7]
},
{
  id: 8,
  name: "feet",
  itemSlots: [8]
},
{
  id: 11,
  name: "finger",
  itemSlots: [11],
  noModel: 1
},
{
  id: 12,
  name: "finger",
  itemSlots: [11],
  noModel: 1
},
{
  id: 13,
  name: "trinket",
  itemSlots: [12],
  noModel: 1
},
{
  id: 14,
  name: "trinket",
  itemSlots: [12],
  noModel: 1
},
{
  id: 16,
  name: "mainhand",
  itemSlots: [21, 13, 17, 15, 25, 28]
},
{
  id: 17,
  name: "offhand",
  itemSlots: [22, 13, 23, 14]
}];
var g_classes_allowed_armor = {
  6: [1, 2, 3, 4],
  11: [1, 2],
  3: [1, 2, 3],
  8: [1],
  10: [1, 2],
  2: [1, 2, 3, 4, 6],
  5: [1],
  4: [1, 2],
  7: [1, 2, 3],
  9: [1],
  1: [1, 2, 3, 4, 6]
};
var g_classes_allowed_weapon = {
  6: [0, 1, 4, 5, 6, 7, 8],
  11: [4, 5, 6, 10, 13, 15],
  3: [2, 3, 18],
  8: [7, 10, 15, 19],
  10: [0, 4, 6, 7, 10, 13],
  2: [0, 1, 4, 5, 6, 7, 8],
  5: [4, 10, 15, 19],
  4: [0, 2, 3, 4, 7, 13, 15, 18],
  7: [0, 1, 4, 5, 6, 10, 13, 15],
  9: [7, 10, 15, 19],
  1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 18]
};
var g_character_slots_to_item_slots = {
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  6: 6,
  7: 7,
  8: 8,
  9: 9,
  10: 10,
  11: 11,
  12: 11,
  13: 12,
  14: 12,
  15: 16,
  16: [13, 15, 17, 21],
  17: [13, 14, 22, 23],
  19: 19
};

function g_getPatchVersion(c, b) {
  return (g_getPatchVersionObject(c, b)).version
}
function g_getPatchVersionObject(e, b) {
  if (!b) {
    b = ((typeof g_hearthhead != "undefined") && g_hearthhead) ? "hearthstone" : "wow"
  }
  if (!e) {
    e = Date.now()
  }
  if (!g_getPatchVersionObject.hasOwnProperty("parsed")) {
    g_getPatchVersionObject.parsed = {}
  }
  if (!g_getPatchVersionObject.parsed.hasOwnProperty(b)) {
    g_getPatchVersionObject.parsed[b] = true;
    var c = function (p, l) {
      var m = l.split("|");
      var n = {
        game: b,
        build: parseInt(p, 10),
        timestamp: parseInt(m[0], 10) * 1000
      };
      if (m.length == 2) {
        n.version = m[1];
        n.versionnum = 0;
        var k = m[1].split(".");
        for (var j = 0; j < k.length; j++) {
          n.versionnum += Math.max(99, parseInt(k[j], 10)) * Math.pow(10, 2 * (k.length - j - 1))
        }
      } else {
        if (m.length == 3) {
          n.versionnum = parseInt(m[1], 10);
          n.version = m[2]
        }
      }
      return n
    };
    for (var h in g_gameversions[b]) {
      if (!g_gameversions[b].hasOwnProperty(h)) {
        continue
      }
      g_gameversions[b][h] = c(h, g_gameversions[b][h])
    }
  }
  var g, f = {
    game: b,
    build: 999999,
    timestamp: 9999999999999,
    version: "?????",
    versionnum: 999999
  };
  for (var h in g_gameversions[b]) {
    if (!g_gameversions[b].hasOwnProperty(h)) {
      continue
    }
    g = g_gameversions[b][h];
    if ((g.timestamp <= e) && (f.version == "?????" || f.build < g.build)) {
      f = g
    }
  }
  return f
}
var g_npcs = {},
    g_objects = {},
    g_items = {},
    g_itemsets = {},
    g_quests = {},
    g_spells = {},
    g_gatheredzones = {},
    g_factions = {},
    g_pets = {},
    g_achievements = {},
    g_titles = {},
    g_transmogsets = {},
    g_holidays = {},
    g_classes = {},
    g_races = {},
    g_skills = {},
    g_gatheredcurrencies = {},
    g_petabilities = {},
    g_hearthstone_decks = {},
    g_hearthstone_cards = {},
    g_hearthstone_mechanics = {},
    g_hearthstone_achievements = {},
    g_hearthstone_quests = {},
    g_hearthstone_cardbacks = {},
    g_hearthstone_seasons = {},
    g_hearthstone_adventurecategories = {},
    g_hearthstone_adventures = {},
    g_hearthstone_bosses = {},
    g_hearthstone_wings = {},
    g_sounds = {},
    g_buildings = {},
    g_followers = {},
    g_garrisonabilities = {},
    g_threats = {},
    g_missions = {},
    g_ships = {},
    g_resources = {},
    g_bluetweets = {},
    g_charts = {},
    g_guides = {};
var g_types = {
  1: "npc",
  2: "object",
  3: "item",
  4: "itemset",
  5: "quest",
  6: "spell",
  7: "zone",
  8: "faction",
  9: "pet",
  10: "achievement",
  11: "title",
  12: "event",
  13: "class",
  14: "race",
  15: "skill",
  17: "currency",
  19: "sound",
  20: "building",
  21: "follower",
  22: "garrisonability",
  23: "mission",
  25: "ship",
  26: "threat",
  31: "follower_a",
  32: "follower_h",
  33: "ship_a",
  34: "ship_h",
  100: "guide",
  101: "transmog-set",
  200: "petability",
  104: "deck",
  220: "card",
  221: "mechanic",
  222: "hsachievement",
  223: "hsquest",
  224: "hero",
  225: "cardback",
  226: "season",
  227: "adventure",
  228: "boss"
};
var g_types_host = {
  104: "hearthhead.com",
  220: "hearthhead.com",
  221: "hearthhead.com",
  222: "hearthhead.com",
  223: "hearthhead.com",
  224: "hearthhead.com",
  225: "hearthhead.com",
  226: "hearthhead.com",
  227: "hearthhead.com",
  228: "hearthhead.com"
};
var g_gathered_types = {
  1: g_npcs,
  2: g_objects,
  3: g_items,
  4: g_itemsets,
  5: g_quests,
  6: g_spells,
  7: g_zones,
  8: g_factions,
  9: g_pets,
  10: g_achievements,
  11: g_titles,
  12: g_holidays,
  13: g_classes,
  14: g_races,
  15: g_skills,
  17: g_currencies,
  19: g_sounds,
  20: g_buildings,
  21: g_followers,
  22: g_garrisonabilities,
  23: g_missions,
  25: g_ships,
  26: g_threats,
  27: g_resources,
  31: g_followers,
  32: g_followers,
  33: g_ships,
  34: g_ships,
  100: g_guides,
  101: g_transmogsets,
  200: g_petabilities,
  104: g_hearthstone_decks,
  220: g_hearthstone_cards,
  221: g_hearthstone_mechanics,
  222: g_hearthstone_achievements,
  223: g_hearthstone_quests,
  225: g_hearthstone_cardbacks,
  226: g_hearthstone_seasons,
  227: g_hearthstone_adventures,
  228: g_hearthstone_bosses
};
var g_completion_categories = {
  1: [12],
  3: ["2q7", "4q7", 9, "15-2", "15-5"],
  6: [-5, -6, 9, 11]
};
$WH.cO(g_items, {
  add: function (c, b) {
    if (g_items[c] != null) {
      $WH.cO(g_items[c], b)
    } else {
      g_items[c] = b
    }
  },
  getIcon: function (g, e) {
    var c = g_items[g];
    var f = "inv_misc_questionmark";
    if (c != null && c.icon) {
      f = c.icon
    }
    var b = g_items.getAppearance(g, e);
    if (b != null && b[1]) {
      f = b[1]
    }
    return f
  },
  getAppearance: function (k, h) {
    var e = null;
    var g = g_items[k];
    if ($WH.isset("g_itembonuses") && h && h.length > 0) {
      var f = -1;
      for (var c in h) {
        var j = h[c];
        if (j > 0 && g_itembonuses[j]) {
          $WH.array_walk(g_itembonuses[j], function (l) {
            if (l[0] == 7) {
              f = l[1]
            }
          })
        }
        var b = (g && g.appearances) ? g.appearances : (g && g.jsonequip && g.jsonequip.appearances ? g.jsonequip.appearances : null);
        if (f != -1 && b && b[f]) {
          e = b[f];
          break
        }
      }
    }
    return e
  },
  createIcon: function (h, c, b, g, e) {
    var f = (e && e.length > 0) ? ("&bonus=" + e.join(":")) : "";
    return Icon.create(g_items.getIcon(h, e), c, null, "/item=" + h + f, b, g)
  },
  getItemQualityColor: function (c) {
    var b = ["9d9d9d", "ffffff", "1eff00", "0070dd", "a335ee", "ff8000", "e5cc80", "e5cc80", "00ccff"];
    return b[c]
  }
});
$WH.cO(g_spells, {
  add: function (c, b) {
    if (g_spells[c] != null) {
      $WH.cO(g_spells[c], b)
    } else {
      g_spells[c] = b
    }
  },
  getIcon: function (b) {
    if (g_spells[b] != null && g_spells[b].icon) {
      return g_spells[b].icon
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (f, c, b, e) {
    return Icon.create(g_spells.getIcon(f), c, null, "/spell=" + f, b, e)
  }
});
$WH.cO(g_petabilities, {
  add: function (c, b) {
    if (g_petabilities[c] != null) {
      $WH.cO(g_petabilities[c], b)
    } else {
      g_petabilities[c] = b
    }
  },
  getIcon: function (b) {
    if (g_petabilities[b] != null && g_petabilities[b].icon) {
      return g_petabilities[b].icon
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (f, c, b, e) {
    return Icon.create(g_petabilities.getIcon(f), c, null, "/petability=" + f, b, e)
  }
});
$WH.cO(g_achievements, {
  getIcon: function (b) {
    if (g_achievements[b] != null && g_achievements[b].icon) {
      return g_achievements[b].icon
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (f, c, b, e) {
    return Icon.create(g_achievements.getIcon(f), c, null, "/achievement=" + f, b, e)
  }
});
$WH.cO(g_classes, {
  getIcon: function (b) {
    if (g_file_classes[b]) {
      return "class_" + g_file_classes[b]
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (f, c, b, e) {
    return Icon.create(g_classes.getIcon(f), c, null, "/class=" + f, b, e)
  }
});
$WH.cO(g_races, {
  getIcon: function (c, b) {
    if (b === undefined) {
      b = 0
    }
    if (g_file_races[c] && g_file_genders[b]) {
      return "race_" + g_file_races[c] + "_" + g_file_genders[b]
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (f, c, b, e) {
    return Icon.create(g_races.getIcon(f), c, null, "/race=" + f, b, e)
  }
});
$WH.cO(g_skills, {
  getIcon: function (b) {
    if (g_skills[b] != null && g_skills[b].icon) {
      return g_skills[b].icon
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (f, c, b, e) {
    return Icon.create(g_skills.getIcon(f), c, null, "/skill=" + f, b, e)
  }
});
$WH.cO(g_gatheredcurrencies, {
  getIcon: function (c, b) {
    if (g_gatheredcurrencies[c] != null && g_gatheredcurrencies[c].icon) {
      if ($WH.is_array(g_gatheredcurrencies[c].icon) && !isNaN(b)) {
        return g_gatheredcurrencies[c].icon[b]
      }
      return g_gatheredcurrencies[c].icon
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (f, c, b, e) {
    return Icon.create(g_gatheredcurrencies.getIcon(f, (b > 0 ? 0 : 1)), c, null, null, Math.abs(b), e)
  }
});
$WH.cO(g_holidays, {
  getIcon: function (b) {
    if (g_holidays[b] != null && g_holidays[b].icon) {
      return g_holidays[b].icon
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (f, c, b, e) {
    return Icon.create(g_holidays.getIcon(f), c, null, "/event=" + f, b, e)
  }
});
$WH.cO(g_garrisonabilities, {
  getIcon: function (b) {
    if (g_garrisonabilities[b] != null && g_garrisonabilities[b].icon) {
      return g_garrisonabilities[b].icon
    } else {
      return "inv_misc_questionmark"
    }
  },
  createIcon: function (g, e, b, f) {
    var c = Icon.create(g_garrisonabilities.getIcon(g), e, null, "/garrisonability=" + g, b, f);
    c.className += " garrison-ability";
    return c
  }
});

function g_getIngameLink(b, e, c) {
  return '/script DEFAULT_CHAT_FRAME:AddMessage("\\124c' + b + "\\124H" + e + "\\124h[" + c.replace(/"/g, '\\"') + ']\\124h\\124r");'
}(function (j) {
  var q = 3;
  var b = new Array();
  var k = 2650;
  var g = j("<audio />").get(0),
      c = g_staticUrl + "/sfx/wsa.wav",
      f = 1,
      n = 0,
      m = 3,
      p;

  function h(r, t) {
    if (t <= 0) {
      if (r == true || r == "true") {
        j("#wsa-overflow").fadeOut(1000, function () {
          j("#wsa-overflow").remove();
          f = 1
        })
      } else {
        j("#wsa-overflow").remove();
        f = 1
      }
      clearInterval(p)
    }
    return (t - 1)
  }
  function o(s, u, r) {
    var v = new Date();
    v.setDate(v.getDate() + r);
    var t = escape(u) + ((r == null) ? "" : "; expires=" + v.toUTCString());
    document.cookie = s + "=" + t
  }
  function l(t) {
    var s, r, v, u = document.cookie.split(";");
    for (s = 0; s < u.length; s++) {
      r = u[s].substr(0, u[s].indexOf("="));
      v = u[s].substr(u[s].indexOf("=") + 1);
      r = r.replace(/^\s+|\s+$/g, "");
      if (r == t) {
        return unescape(v)
      }
    }
  }
  function e() {
    for (key in b) {
      clearTimeout(b[key])
    }
  }
  j(function () {
    j("body").delegate(".wsa-vol", "click", function () {
      j(this).toggleClass("alt");
      if (j(this).hasClass("alt") == true) {
        j.post("/account=setsound", {
          muted: 1
        })
      } else {
        j.post("/account=setsound", {
          muted: 0
        })
      }
    }).delegate(".wsa-notification", "mouseover mouseout", function (r) {
      if (r.type == "mouseover") {
        e();
        j(".wsa-notification").stop();
        j(this).css("z-index", 1500000);
        if (j(this).attr("data-animated") == "true") {
          j(".wsa-notification").fadeTo(100, 1)
        }
      } else {
        j(this).css("z-index", 999999);
        if (j(this).attr("data-persistent") != "true") {
          j(".wsa-notification").each(function (t, s) {
            var u = j(this).attr("id");
            if (j(this).attr("data-animated") == "true") {
              b[u] = setTimeout("$('#" + u + "').fadeOut(3000,function(){ $('#" + u + "').remove(); })", 1000)
            } else {
              b[u] = setTimeout("$('#" + u + "').remove()", 3000)
            }
          })
        }
      }
    }).delegate(".wsa-notification", "click", function (r) {
      if (!(j(r.target).is("a") || j(r.target).hasClass("wsa-vol"))) {
        j(this).remove()
      }
    })
  });
  j.fn.wsaNotification = function (r) {
    var v = {
      caption: "??? No name",
      rank: 1,
      href: "/user#achievements",
      animate: true,
      playsfx: true,
      desc: "",
      persist: false
    };
    var r = j.extend(v, r);
    var z = j("body").children("#wsa-overflow").length;
    var t = j("body").children(".wsa-notification").length;
    if (t < q && z == 0) {
      var y = new Date(),
          y = "wsan" + y.getTime();
      if (t != (n % q)) {
        n = 0
      }
      var u = !r.playsfx;
      var w = r.rank == 0 ? LANG.newprivilege : $WH.sprintf(LANG.achievementunlocked_format, l_achievement_qualities[r.rank]);
      var s = '<div class="wsa-notification" data-animated="' + r.animate + '" data-persistent="' + r.persist + '" style="bottom: ' + (((n % q) * 125) + 15).toString() + 'px" id="' + y + '"><em></em><ins></ins><span class="wsar' + r.rank + '"></span><div><var><i>' + w + '</i><a title="' + r.desc + '" href="' + r.href + '">' + LANG.viewdetails + " &rarr;</a></var>" + g_getImitationHeading(r.caption, 2, {
        asString: true
      }) + '</div><div class="wsa-vol' + (u ? " alt" : "") + '"></div></div>';
      j("body").prepend(s);
      if (r.playsfx == true || r.playsfx == "true") {
        if (!j(g).attr("src")) {
          j(g).attr("src", c)
        }
        if (g.play) {
          g.play()
        } else {
          j(".wsa-sound").remove();
          j("body").append('<embed class="wsa-sound" src="' + c + '" autostart="true" hidden="true" loop="false" />')
        }
      }
      if (r.animate == true || r.animate == "true") {
        j("#" + y + " em").css("filter", "");
        j("#" + y + " em").fadeOut(750, function () {
          j("#" + y + " em").remove()
        });
        j("#" + y + " ins").delay(250).animate({
          marginLeft: "355px",
          opacity: 0
        }, 750, function () {
          j(this).remove();
          if (!r.persist) {
            b[y] = setTimeout("$('#" + y + "').fadeOut(3000,function(){ $('#" + y + "').remove(); })", k)
          }
        })
      } else {
        j("#" + y + " em").remove();
        j("#" + y + " ins").remove();
        if (!r.persist) {
          b[y] = setTimeout("$('#" + y + "').remove()", k + 1000)
        }
      }
      n++
    } else {
      var s = '<div class="wsa-overflow" id="wsa-overflow" style="bottom: ' + 0 + 'px"><a href="/user">' + $WH.sprintf(LANG.wsamore_format, 1) + "</a></div>";
      if (z == 0) {
        j("body").prepend(s);
        m = 3;
        if (r.animate == true || r.animate == "true") {
          j("#wsa-overflow").slideDown()
        } else {
          j("#wsa-overflow").show()
        }
        p = setInterval(function () {
          m = h(r.animate, m)
        }, 1000)
      } else {
        m = 3;
        f++;
        j("#wsa-overflow b").text(f)
      }
    }
  }
})(jQuery);

function AchievementCheck() {
  $.ajax({
    cache: false,
    url: "/ajax-achievement-check",
    type: "POST",
    success: function (data) {
      if (data) {
        eval("(" + data + ")")
      }
    }
  })
}
$(document).ready(function () {
  $("a.wsach").each(function () {
    var b = $(this).text();
    var m = $(this).attr("title");
    var f = parseInt($(this).attr("data-earned"));
    var e = $(this).attr("data-user");
    var j = $(this).parent().parent().attr("id") == "user-achievement-list";
    var k = $(this).attr("data-progress");
    var n = $(this).attr("data-quality");
    var h = $(this).attr("data-count");
    $(this).attr("title", "");
    var l = $("<div>");
    l.append('<table><tr><td style="padding-bottom: 0.35em"><b class="q" data-quality="' + n + '"></b></td></tr><tr><td><span></span></td></tr></table>');
    l.find("b").text(b);
    l.find("span").text(m);
    if (f) {
      var g = null;
      var c = (new Date()).getTime() / 1000;
      if (e) {
        if (f > 31 * 24 * 60 * 60) {
          l.append('<span class="q0"><br />' + $WH.sprintf(h > 1 ? LANG.earnedwsafirsttime4_format : LANG.earnedwsatime4_format, e, g_formatDateSimple(new Date((c - f) * 1000))) + "</span>")
        } else {
          l.append('<span class="q0"><br />' + $WH.sprintf(h > 1 ? LANG.earnedwsafirsttime2_format : LANG.earnedwsatime2_format, e, g_formatTimeElapsed(f)) + "</span>")
        }
      } else {
        if (!j) {
          if (f > 31 * 24 * 60 * 60) {
            l.append('<span class="q0"><br />' + $WH.sprintf(h > 1 ? LANG.earnedwsafirsttime3_format : LANG.earnedwsatime3_format, g_formatDateSimple(new Date((c - f) * 1000))) + "</span>")
          } else {
            l.append('<span class="q0"><br />' + $WH.sprintf(h > 1 ? LANG.earnedwsafirsttime_format : LANG.earnedwsatime_format, g_formatTimeElapsed(f)) + "</span>")
          }
        }
      }
      if (g) {
        l.append('<span class="q0"><br />' + g + "</span>")
      }
    } else {
      if (!j && k) {
        l.append('<span class="q0"><br /><small></small>' + LANG.progress + ": " + k + "</td></tr>")
      }
    }
    if (Platform.isTouch()) {
      $(this).click(function () {
        $WH.Tooltip.show(this, l.html(), 0, 0);
        return false
      })
    } else {
      $(this).mouseover(function (o) {
        $WH.Tooltip.showAtCursor(o, l.html(), 0, 0)
      }).mousemove(function (o) {
        $WH.Tooltip.cursorUpdate(o)
      }).mouseout(function () {
        $WH.Tooltip.hide()
      })
    }
  })
});
(function () {
  var j = "http://";
  var c = location.pathname + location.search + location.hash;
  var f = Locale.getId();
  var e = [];
  var h = null;
  $.each(Locale.getAllByName(), function (k, m) {
    var l = {
      type: "link",
      innerHTML: m.description,
      href: j + m.domain + c
    };
    if (m.id == f) {
      l.checked = true;
      h = m
    }
    e.push(l)
  });
  var b = function (m, k, l) {
    return l
  };
  var g = function (m, k, l) {
    return !l
  };
  ZUL.setOptions({
    site: $WH.g_getSite(),
    bodyIsRelative: false,
    mobileLoadCheck: function () {
      return Platform.isTouch()
    },
    mobileBackText: LANG.back_verb,
    mobileIconSpacing: true,
    states: {
      loggedOut: {
        pre: [{
          type: "custom",
          custom: function (n, l, m) {
            var k = $WH.ce("span");
            k.id = k.className = "zul-bar-" + (m ? "mobile" : "user") + "-item-loginwith";
            k.innerHTML = LANG.zul_loginwith;
            $WH.ae(n, k)
          },
          condition: g
        },
        {
          type: "link",
          name: "battlenet",
          innerHTML: "Battle.net",
          href: g_getRelativeHostPrefix(null, true) + "/account=battlenet?r=1",
          className: function (n, l, m, k) {
            return m ? "blizzard-blue" : "btn btn-site"
          },
          click: function () {
            $WH.g_visitUrlWithPostData(g_getRelativeHostPrefix(null, true) + "/account=battlenet", {
              r: 1
            });
            return false
          },
          condition: g
        },
        {
          type: "link",
          name: "zam",
          innerHTML: "<span>ZAM</span>",
          href: "#login",
          className: function (n, l, m, k) {
            return m ? "zam-silver" : "btn btn-site"
          },
          click: function () {
            LoginDialog.show();
            return false
          },
          condition: g
        },
        {
          type: "custom",
          custom: function (p, m, o) {
            p.style.paddingLeft = "32px";
            var l = $WH.ce("span");
            l.id = l.className = "zul-bar-mobile-loginwithcolon";
            l.innerHTML = LANG.zul_loginwith;
            $WH.ae(p, l);
            l = $WH.ce("span");
            l.id = l.className = "zul-bar-mobile-logincolon";
            l.innerHTML = LANG.zul_login + LANG.colon;
            $WH.ae(p, l);
            var n = $WH.ce("a", {
              id: "zul-bar-mobile-battlenet",
              className: "zul-bar-mobile-item-battlenet btn btn-site",
              innerHTML: "Battle.net",
              href: g_getRelativeHostPrefix(null, true) + "/account=battlenet"
            });
            $WH.aE(n, "tap", function () {
              $WH.g_visitUrlWithPostData(g_getRelativeHostPrefix(null, true) + "/account=battlenet", {
                r: 1
              });
              return false
            });
            $WH.ae(p, n);
            var k = $WH.ce("a", {
              id: "zul-bar-mobile-zam",
              className: "zul-bar-mobile-item-zam btn btn-site",
              innerHTML: "<span>ZAM</span>",
              href: "#login"
            });
            $WH.aE(k, "tap", function () {
              ZUL.closeMobileMenu();
              LoginDialog.show();
              return false
            });
            $WH.ae(p, k)
          },
          condition: b
        },
        {
          type: "link",
          name: "register",
          innerHTML: LANG.zul_register,
          href: g_getRelativeHostPrefix(null, true) + "/account=signup"
        },
        {
          type: "link",
          name: "subscribe",
          innerHTML: LANG.zul_subscribe,
          href: "/subscribe",
          condition: function (m, k, l) {
            return !$WH.g_isThottbot()
          }
        }]
      },
      loggedIn: {
        pre: [{
          type: "custom",
          custom: function (p, m, o) {
            if (!m.user.battlenetAvatar) {
              return
            }
            var k = "/user=" + m.user.name;
            if (m.user.favoriteList) {
              var n = li_getCurrentUserList(m.user.favoriteList);
              if (n) {
                k = li_generateListUrl(n)
              } else {
                k = "/list=" + m.user.favoriteList
              }
            }
            var l = Icon.create(m.user.battlenetAvatar, 1, null, k);
            l.id = "zul-bar-" + (o ? "mobile" : "user") + "-item-avatar";
            l.className += " " + l.id;
            $WH.ae(p, l)
          },
          condition: g
        },
        {
          type: "link",
          name: "user",
          innerHTML: function (m, k, l) {
            if (l) {
              return k.user.name + " <small>(" + $WH.number_format(k.user.reputation) + " " + LANG.reputation + ")</small>"
            } else {
              return k.user.name
            }
          },
          href: function (m, k, l) {
            return l ? null : "/user=%NAME%"
          },
          mobileMenuText: "%NAME%",
          menu: {
            mobile: Menu.prepareForZul(PageTemplate.getUserMenu())
          }
        },
        {
          type: "custom",
          custom: function (o, m, n) {
            var l = $WH.ce("span");
            l.id = l.className = "zul-bar-" + (n ? "mobile" : "user") + "-item-reputation";
            l.title = LANG.reputationtip;
            $WH.ae(l, $WH.ct("("));
            var k = $WH.ce("a");
            k.href = "/reputation";
            k.innerHTML = $WH.number_format(m.user.reputation);
            $WH.ae(l, k);
            $WH.ae(l, $WH.ct(")"));
            $WH.ae(o, l)
          },
          condition: g
        },
        {
          type: "link",
          name: "characters",
          innerHTML: LANG.li_myprofiles,
          menu: {
            mobile: Menu.prepareForZul(PageTemplate.getListsSubmenu())
          },
          condition: b
        },
        {
          type: "link",
          name: "upgrade",
          innerHTML: LANG.zul_upgrade,
          href: "/subscribe",
          condition: function (m, k, l) {
            return !k.user.premium && !$WH.g_isThottbot()
          }
        }]
      },
      universal: {
        pre: [{
          type: "link",
          name: "mobileheader",
          href: "/",
          heading: true,
          condition: b
        }],
        content: [{
          type: "link",
          name: "feedback",
          innerHTML: LANG.zul_feedback,
          href: "javascript:;",
          fontIcon: "envelope",
          click: function () {
            ZUL.closeMobileMenu();
            ContactTool.show()
          }
        },
        {
          type: "link",
          name: "locale",
          innerHTML: h ? h.description : LANG.zul_language,
          href: "javascript:;",
          condition: function (m, k, l) {
            return !$WH.g_isThottbot()
          },
          mobileMenuText: LANG.zul_language,
          menu: {
            mobile: e
          }
        },
        {
          type: "link",
          name: "subsite",
          innerHTML: function (n, l, m) {
            var k = LANG.zul_live;
            if ($WH.isset("g_ptr") && g_ptr) {
              k = LANG.zul_ptr
            } else {
              if ($WH.isset("g_beta") && g_beta) {
                k = LANG.zul_beta
              }
            }
            return $WH.sprintf(LANG.zul_viewingdata, "<b>" + k + "</b>")
          },
          condition: function (m, k, l) {
            return l && ($WH.isset("g_ptractive") && g_ptractive || $WH.isset("g_betaactive") && g_betaactive)
          },
          mobileMenuText: LANG.zul_changedataview,
          menu: {
            mobile: [{
              type: "link",
              innerHTML: $WH.sprintf(LANG.zul_data, LANG.zul_live),
              href: window.location.protocol + "//www.wowhead.com" + window.location.pathname + (window.location.hash ? "#" + window.location.hash : ""),
              checked: function (m, k, l) {
                return !($WH.isset("g_ptr") && g_ptr) && !($WH.isset("g_beta") && g_beta)
              }
            },
            {
              type: "link",
              innerHTML: $WH.sprintf(LANG.zul_data, LANG.zul_ptr),
              href: window.location.protocol + "//ptr.wowhead.com" + window.location.pathname + (window.location.hash ? "#" + window.location.hash : ""),
              checked: function (m, k, l) {
                return $WH.isset("g_ptr") && g_ptr
              },
              condition: function (m, k, l) {
                return $WH.isset("g_ptractive") && g_ptractive
              }
            },
            {
              type: "link",
              innerHTML: $WH.sprintf(LANG.zul_data, LANG.zul_beta),
              href: window.location.protocol + "//beta.wowhead.com" + window.location.pathname + (window.location.hash ? "#" + window.location.hash : ""),
              checked: function (m, k, l) {
                return $WH.isset("g_beta") && g_beta
              },
              condition: function (m, k, l) {
                return $WH.isset("g_betaactive") && g_betaactive
              }
            }]
          }
        }],
        post: [{
          type: "link",
          text: LANG.zul_nav,
          heading: true,
          condition: b
        },
        {
          type: "concatenation",
          content: function (m, k, l) {
            return Menu.prepareForZul($WH.g_isHearthhead() ? mn_path_hearthhead : mn_path, b)
          },
          condition: b
        },
        {
          type: "link",
          name: "choose-platform",
          text: LANG.platform_change,
          menu: {
            mobile: Menu.prepareForZul(mn_footer_platform)
          },
          condition: b
        },
        {
          type: "sites",
          text: LANG.zul_zamsites
        }],
        mobileBarContent: [{
          type: "form",
          name: "search",
          action: "/search",
          method: "get",
          fields: [{
            type: "text",
            name: "q",
            label: LANG.zul_searchdb,
            value: function () {
              var k = function () {
                var l = $(".topbar-search form input");
                if (!l.length) {
                  setTimeout(k, 5);
                  return
                }
                $("#zul-bar-form-q").val(l.val() || "")
              };
              k();
              setTimeout(function () {
                LiveSearch.attach($("#zul-bar-form-search-q"))
              }, 0);
              return ""
            },
            focus: function () {
              document.body.scrollTop = 0;
              document.body.scrollLeft = 0;
              var k = $WH.ge("zul-bar");
              k.style.position = "absolute";
              setTimeout(function () {
                document.body.scrollTop = 0;
                document.body.scrollLeft = 0;
                var l = document.createElement("div");
                l.className = "zul-bar-fade zul-bar-fade-body-only";
                l.onclick = function () {
                  this.parentNode.removeChild(this)
                };
                $("#zul-bar").append(l)
              }, 5)
            },
            blur: function () {
              $(".zul-bar-fade.zul-bar-fade-body-only").remove();
              var k = $WH.ge("zul-bar");
              k.style.position = "fixed"
            }
          }]
        }]
      }
    },
    onCreateBar: function () {
      PageTemplate.initUserMenus()
    },
    onShowMobileBarStart: function () {
      Menu.hide()
    }
  })
})();