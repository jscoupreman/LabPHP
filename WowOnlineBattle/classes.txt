-- Champion --
ChampionDto
	active : boolean // indicates if the champion is active
	freeToPlay : boolean // indicates if the champion is free to play. Free to play champions are rotated periodically
	id : long // champion ID. For static information correlating to champion IDs, please refer to the LoL Static Data API
	rankedPlayEnabled : boolean // Ranked play enabled flag
ChampionListDto
	champions : List[ChampionDto] // The collection of champion information

-- Current Game --
CurrentGame
	bannedChampions : List[BannedChampion] // Banned champion information
	gameId : long // The ID of the game
	gameLength : long // The amount of time in seconds that has passed since the game started
	gameMode : string // The game mode
		- CLASSIC
		- ODIN
		- ARAM
		- TUTORIAL
		- ONEFORALL
		- ASCENSION
		- FIRSTBLOOD
		- KINGPORO
	gameQueueConfigId : long // The queue type (queue types are documented on the Game Constants page)
	gameStartTime : long // The game start time represented in epoch milliseconds
	gameType : string // The game type
		- CUSTOM_GAME
		- MATCHED_GAME
		- TUTORIAL_GAME
	mapId : long // The ID of the map
	observers : Observer // The observer information
	participants : List[CurrentGameParticipant] // The participant information
	platformId : string // The ID of the platform on which the game is being played
BannedChampion
	championId : long // The ID of the banned champion
	pickTurn : int // The turn during which the champion was banned
	teamId : long // the ID of the team that banned the champion
CurrentGameParticipant
	championId : long // The ID of the champion played by this participant
	profileIconId : long // The ID of the profile icon used by this participant
	summonerId : long // The summoner ID of this participant
	summonerName : string // The summoner name of this participant
	teamId : long // The team ID of this participant, indicating the participant's team
Observer
	encryptionKey : string // Key used to decrypt the spectator grid game data for playback

-- Game --
RecentGamesDto
	games : Set[GameDto] // Collection of recent games played (max 10)
	summonerId : long // Summoner ID
GameDto
	championId : int // Champion ID associated with game
	createDate : long // Date that end game data was recorded, specified as epoch milliseconds
	fellowPlayers : List[PlayerDto] // Other players associated with the game
	gameId : long // Game ID
	gameMode : string // Game mode
		- CLASSIC
		- ODIN
		- ARAM
		- TUTORIAL
		- ONEFORALL
		- ASCENSION
		- FIRSTBLOOD
		- KINGPORO
	gameType : string // Game type
		- CUSTOM_GAME
		- MATCHED_GAME
		- TUTORIAL_GAME
	invalid : boolean // Invalid flag
	ipEarned : int // IP Earned
	level : int // Level
	stats : RawStatsDto // Statistics associated with the game for this summoner
	subType : string // Game sub-type
		- NONE
		- NORMAL
		- BOT 
		- RANKED_SOLO_5x5
		- RANKED_PREMADE_3x3
		- RANKED_PREMADE_5x5
		- ODIN_UNRANKED
		- RANKED_TEAM_3x3
		- RANKED_TEAM_5x5
		- NORMAL_3x3
		- BOT_3x3
		- CAP_5x5
		- ARAM_UNRANKED_5x5
		- ONEFORALL_5x5
		- FIRSTBLOOD_1x1
		- FIRSTBLOOD_2x2
		- SR_6x6
		- URF
		- URF_BOT
		- NIGHTMARE_BOT
		- ASCENSION
		- HEXAKILL
		- KING_PORO
		- COUNTER_PICK
		- BILGEWATER
	teamId : int // Team ID associated with game. Team ID 100 is blue team. Team ID 200 is purple team
PlayerDto
	championId : int // Champion id associated with player
	summonerId : long // Summoner id associated with player
	teamId : int // Team id associated with player
RawStatsDto
	combatPlayerScore : int
	damageDealt : int
	damageTaken : int
	largestCriticalStrike : int
	magicDamageDealt : int
	magicDamageTaken : int
	numDeaths : int
	physicalDamageDealt : int
	physicalDamageTaken : int
	timePlayed : int
	totalDamageDealt : int
	totalDamageTaken : int
	victoryPointTotal : int
	win : boolean // Flag specifying whether or not this game was won

-- Summoner --
SummonerDto
	id : long // Summoner ID
	name : string // Summoner name
	profileIconId : int // ID of the summoner icon associated with the summoner
	summonerLevel : long // Summoner level associated with the summoner